<ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>
>>>>>>>>>>>>>>>> [['void', 'ns3::Ptr<ns3::Packet const>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'unsigned short', 'ns3::Ptr<ns3::SpectrumValue>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::UlInfoListElement_s', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::DlInfoListElement_s', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<ns3::Packet const>', 'unsigned short', 'ns3::Address const&', 'ns3::Address const&', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<ns3::Packet const>', 'unsigned short', 'ns3::Address const&', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::Packet>', 'ns3::Address const&', 'ns3::Address const&', 'unsigned short', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<ns3::Packet const>', 'unsigned short', 'ns3::Address const&', 'ns3::Address const&', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['void', 'ns3::Ptr<ns3::Socket>', 'ns3::Address const&', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], ['bool', 'ns3::Ptr<ns3::Socket>', 'ns3::Address const&', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty']]
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CeBitmap_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CeBitmap_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ff3d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::RlcPduListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::RlcPduListElement_s >' => failure
'std::vector< ns3::RlcPduListElement_s >' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['std::vector< ns3::RlcPduListElement_s >'],) in wrapper <pybindgen.Container 'std::vector< std::vector< ns3::RlcPduListElement_s > >'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ff936c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('short unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'short unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ff970c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s::HarqStatus_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s::HarqStatus_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ff9b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapProvider::BearerToBeSwitched')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapProvider::BearerToBeSwitched' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ff9f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::BearerContextCreated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::BearerContextCreated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ffe3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::BearerContextRemoved')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::BearerContextRemoved' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ffe76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::BearerContextToBeCreated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::BearerContextToBeCreated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ffeb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::BearerContextToBeRemoved')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::BearerContextToBeRemoved' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ffedec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::BearerContextRemovedSgwPgw')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::BearerContextRemovedSgwPgw' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ff922c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapEnb::ErabToBeSetupItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapEnb::ErabToBeSetupItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x8ffefac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapEnb::ErabSwitchedInUplinkItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapEnb::ErabSwitchedInUplinkItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900534c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme::ErabToBeReleasedIndication')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme::ErabToBeReleasedIndication' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90055cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme::ErabSetupItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme::ErabSetupItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900584c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme::ErabSwitchedInDownlinkItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme::ErabSwitchedInDownlinkItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9005acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UlInterferenceOverloadIndicationItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UlInterferenceOverloadIndicationItem' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9005d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UlHighInterferenceInformationItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UlHighInterferenceInformationItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9005f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900f26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabToBeSetupItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabToBeSetupItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900f50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabAdmittedItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabAdmittedItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900f78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabNotAdmittedItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabNotAdmittedItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900fa0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900fc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::CellInformationItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::CellInformationItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x900ff0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::CellMeasurementResultItem')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::CellMeasurementResultItem' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90151ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VendorSpecificListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VendorSpecificListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x901542c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogicalChannelConfigListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogicalChannelConfigListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90156ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PagingInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PagingInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x901592c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9015bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RachListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RachListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9015e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9015fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x905a34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SrListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SrListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x905a5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacCeListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacCeListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x905a84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildDataListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildDataListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x905aacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildRarListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildRarListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x905ad4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildBroadcastListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildBroadcastListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x905aeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906026c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhichListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhichListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90604ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906076c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogComponent *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogComponent *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90607ec>))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper <pybindgen.Container 'std::map< std::string, ns3::LogComponent * >'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('short unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'short unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90609cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => failure
'std::vector< double >' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['std::vector< double >'],) in wrapper <pybindgen.Container 'std::map< unsigned short, std::vector< double > >'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9060d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HarqProcessInfoElement_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HarqProcessInfoElement_t' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9060f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SrbToAddMod')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SrbToAddMod' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906632c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::DrbToAddMod')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::DrbToAddMod' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906660c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906688c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CellsToAddMod')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CellsToAddMod' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9066c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::BlackCellsToAddMod')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::BlackCellsToAddMod' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9066dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasObjectToAddMod')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasObjectToAddMod' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9066f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigToAddMod')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigToAddMod' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906b30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasIdToAddMod')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasIdToAddMod' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9060c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9060b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResultEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResultEutra' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90608ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906b64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906b68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapUser::UeMeasurementsElement')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapUser::UeMeasurementsElement' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906baac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HigherLayerSelected_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HigherLayerSelected_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906bc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SiMessageListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SiMessageListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x906beec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x907728c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x907758c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BandInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BandInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90776cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x90778ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9077aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9077ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlDciLteControlMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlDciLteControlMessage' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x907d2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x907d64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x907dd8c>))
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Packet const>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Packet>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, unsigned short, ns3::Ptr< ns3::SpectrumValue >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, unsigned short, ns3::Ptr<ns3::SpectrumValue>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::UlInfoListElement_s, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::UlInfoListElement_s, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::DlInfoListElement_s, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::DlInfoListElement_s, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, std::list< ns3::Ptr< ns3::LteControlMessage >, std::allocator< ns3::Ptr< ns3::LteControlMessage > > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::NetDevice>, ns3::Ptr<ns3::Packet const>, unsigned short, ns3::Address const&, ns3::Address const&, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::NetDevice>, ns3::Ptr<ns3::Packet const>, unsigned short, ns3::Address const&, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::Address const &, ns3::Address const &, unsigned short, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::Packet>, ns3::Address const&, ns3::Address const&, unsigned short, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::NetDevice>, ns3::Ptr<ns3::Packet const>, unsigned short, ns3::Address const&, ns3::Address const&, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Socket>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Socket>, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< void, ns3::Ptr<ns3::Socket>, ns3::Address const&, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
***** registering callback handler: 'ns3::Callback< bool, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' ('ns3::Callback< bool, ns3::Ptr<ns3::Socket>, ns3::Address const&, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91222ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x912246c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2144: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x91222cc>
  cls.add_constructor([param('uint8_t', 'type'), param('uint8_t const *', 'buffer'), param('uint8_t', 'len')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x912244c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91228ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9122a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9122bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9122eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a02c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2155: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyAllFrom (params?);
  [param('uint8_t const *', 'buffer'), param('uint8_t', 'len')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a36c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2160: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyAllTo (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a66c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2164: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyFrom (params?);
  [param('uint8_t const *', 'buffer'), param('uint8_t', 'len')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a9ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2169: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyTo (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913ab2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913acac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913afac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913a62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9122fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913e1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913e32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913e62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913eaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x913ec6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AllocationRetentionPriority const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AllocationRetentionPriority const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914206c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914288c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9142f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914660c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeConstructionList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeConstructionList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9146c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914a56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914a6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914a9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914accc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::AttributeConstructionList::Item >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' => failure
'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2232: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::AttributeConstructionList::Item >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::AttributeConstructionList::Item >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' => failure
'std::_List_const_iterator< ns3::AttributeConstructionList::Item >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2237: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::AttributeConstructionList::Item >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914e40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914e78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeConstructionList::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeConstructionList::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x914ec4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x915332c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x915388c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9153e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BandInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BandInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x915762c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9157aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x917c1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x917c86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918228c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918270c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918290c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9182cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918522c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91853ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918580c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918598c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9185e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9185fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918a42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918a8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream *' => failure
'std::ostream *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2301: Warning: exception TypeLookupError(['std::ostream *'],) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918ab6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918acec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2306: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918ae6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918afcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918d14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918d54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918da0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918db8c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2320: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918dd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918ab6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x918df0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91902ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91907ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => failure
'uint8_t const *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2350: Warning: exception TypeLookupError(['uint8_t *'],) in wrapper public: retval? ???::PeekData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9190e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9190fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919646c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91965ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9196a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9196bcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2363: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9196d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919956c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91996ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9199b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9199ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9196bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9199eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919c02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919c3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919c86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919cd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919f20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919f6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919f84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x919fc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a214c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a278c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a2bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a2d2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2422: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Read (params?);
  [param('uint8_t *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a2eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a2cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a2fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a630c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a676c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91a6c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91aa10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91aa5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91aaa8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91aaf4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91af42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91af8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91afdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b328c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b340c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2470: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Write (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b35cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b372c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b386c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b3c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b3dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b724c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b73cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b782c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b79ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b7e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b7f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91eb40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91eb58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91eb9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91ebb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91ebfcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91ee16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91b32ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91ee44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91ee8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91eea2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91eee8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f202c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f248c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f276c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BufferSizeLevelBsr const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BufferSizeLevelBsr const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f2e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f63ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f652c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f698c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91f6b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int [ 64 ]')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int [ 64 ]' => failure
'int [ 64 ]' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['int [ 64 ]'],) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildBroadcastListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildBroadcastListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91fb3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91fb74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91fbdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildBroadcastListElement_s::Type_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildBroadcastListElement_s::Type_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91ff4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildDataListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildDataListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x91ffe8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::CeBitmap_e >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::CeBitmap_e >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x920236c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9202aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< std::vector< ns3::RlcPduListElement_s > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< std::vector< ns3::RlcPduListElement_s > >' => failure
'std::vector< std::vector< ns3::RlcPduListElement_s > >' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['std::vector< std::vector< ns3::RlcPduListElement_s > >'],) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92063ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildRarListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildRarListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9206b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x920b02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlGrant_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlGrant_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x920b6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x920bd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BwPart_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BwPart_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x920f76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x920fc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921230c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92129ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921706c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92175ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9217a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9217e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921a40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921a8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921ad8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921af0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921d3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x921dbac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922010c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922026c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92203cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922052c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922068c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9220a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9220bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9220fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92241cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922432c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922474c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92248cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9224a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9224e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9224fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922712c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922754c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x922790c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9227eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x925e3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x925e88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagList::Iterator::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagList::Iterator::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x925ec2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92631cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x926360c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9263cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x926736c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9267a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x926d0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x926d70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::CallbackImplBase >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::CallbackImplBase >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92701ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::CallbackImplBase >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::CallbackImplBase >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x927070c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9270a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9270bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqasFlowPerf_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqasFlowPerf_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9270c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x927420c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92748cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9274f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x927964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9279cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x927d3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiConfig_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiConfig_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x927de0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SetupRelease_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SetupRelease_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92812ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x928198c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9281fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9286a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiListElement_s::CqiType_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiListElement_s::CqiType_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9286f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x928a5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x928ac6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SbMeasResult_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SbMeasResult_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x928e32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x928e9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x929514c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataOutputCallback const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataOutputCallback const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9295b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92980ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x929822c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x929838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92984ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9298b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9298d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9298e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9298fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c55cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c574c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c58ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c5a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c5fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c818c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c82ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c844c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c8a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c8bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c8d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92c8e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92cc46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92cc5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92cc74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StatisticalSummary const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StatisticalSummary const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92cc8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataRate const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataRate const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92ccbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92cf72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92cfbac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92d40ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92d422c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92d468c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92d4e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92d732c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92d79ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92dc0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92dc74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s::Format_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s::Format_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92dcdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92e048c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92e0b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s::Ngap_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s::Ngap_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92e32cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92e394c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92e80ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92e878c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92e8e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92ec4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92ecb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92f124c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92f18ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92f1f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92f664c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92f6cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92fb48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92fbb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92fe1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned short >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned short >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92fe88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x92fefac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s::VrbFormat_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s::VrbFormat_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x932e6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93320cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x933258c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::DlInfoListElement_s::HarqStatus_e >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::DlInfoListElement_s::HarqStatus_e >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9332c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x933638c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DrxConfig_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DrxConfig_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9336d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x933926c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x933992c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9339fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x933d68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x933dd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93443ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9344a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93494ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93499ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9349b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9349ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9349e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x934e50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x934e68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x934e7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x934ee4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapProvider::PathSwitchRequestParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapProvider::PathSwitchRequestParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x934efcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x935266c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93527ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapProvider::BearerToBeSwitched const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapProvider::BearerToBeSwitched const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93561ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x935666c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9356d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapProvider::PathSwitchRequestParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapProvider::PathSwitchRequestParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x935b74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcEnbS1SapProvider::BearerToBeSwitched >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcEnbS1SapProvider::BearerToBeSwitched >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x935bc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x936036c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9360a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93630cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9363acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9363fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapUser::DataRadioBearerSetupRequestParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapUser::DataRadioBearerSetupRequestParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93671ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93678cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapUser::PathSwitchRequestAcknowledgeParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapUser::PathSwitchRequestAcknowledgeParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9367a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapUser::DataRadioBearerSetupRequestParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapUser::DataRadioBearerSetupRequestParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93943ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93948ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9394f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x939960c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9399cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x939f36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapUser::PathSwitchRequestAcknowledgeParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapUser::PathSwitchRequestAcknowledgeParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x939fd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93a422c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93a4c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap::Fteid const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap::Fteid const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93a74ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93a796c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93a7fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap::GtpcMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap::GtpcMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93aaa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93aaeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap::Uli const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap::Uli const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93ae92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93aedec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b282c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b2d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::CreateSessionResponseMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::CreateSessionResponseMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b2eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b534c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::DeleteBearerRequestMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::DeleteBearerRequestMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b54cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b590c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::ModifyBearerResponseMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::ModifyBearerResponseMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b5a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::BearerContextCreated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::BearerContextCreated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b91ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b96ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93b9d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap::Fteid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap::Fteid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93be40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93bec2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::BearerContextRemoved const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::BearerContextRemoved const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93c252c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93c29ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::CreateSessionResponseMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::CreateSessionResponseMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93c642c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS11SapMme::BearerContextCreated >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS11SapMme::BearerContextCreated >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93c68ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::DeleteBearerRequestMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::DeleteBearerRequestMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93cc3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS11SapMme::BearerContextRemoved >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS11SapMme::BearerContextRemoved >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93cc86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::ModifyBearerResponseMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::ModifyBearerResponseMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93fe32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme::ModifyBearerResponseMessage::Cause')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme::ModifyBearerResponseMessage::Cause' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x93fe7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940120c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940174c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::CreateSessionRequestMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::CreateSessionRequestMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94018cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9401d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::DeleteBearerCommandMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::DeleteBearerCommandMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9401e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94052ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::DeleteBearerResponseMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::DeleteBearerResponseMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940546c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94058ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::ModifyBearerRequestMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::ModifyBearerRequestMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9405a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::BearerContextRemovedSgwPgw const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::BearerContextRemovedSgwPgw const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940a18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940a64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::BearerContextToBeCreated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::BearerContextToBeCreated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940d08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940d54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x940dbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap::Fteid')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap::Fteid' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94122ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9412acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::BearerContextToBeRemoved const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::BearerContextToBeRemoved const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94163cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x941688c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::CreateSessionRequestMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::CreateSessionRequestMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x941a2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS11SapSgw::BearerContextToBeCreated >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS11SapSgw::BearerContextToBeCreated >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x941a78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x941aecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap::Uli')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap::Uli' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x941f58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::DeleteBearerCommandMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::DeleteBearerCommandMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x941ff6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS11SapSgw::BearerContextToBeRemoved >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS11SapSgw::BearerContextToBeRemoved >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x942244c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::DeleteBearerResponseMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::DeleteBearerResponseMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9422eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS11SapSgw::BearerContextRemovedSgwPgw >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS11SapSgw::BearerContextRemovedSgwPgw >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94283cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw::ModifyBearerRequestMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw::ModifyBearerRequestMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9428e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11Sap::Uli')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11Sap::Uli' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x942c34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSap const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSap const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x942cd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapEnb const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapEnb const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94305ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9430aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9430c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9430dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS1apSapEnb::ErabToBeSetupItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS1apSapEnb::ErabToBeSetupItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9430f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94353ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x943552c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x943568c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94357ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS1apSapEnb::ErabSwitchedInUplinkItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS1apSapEnb::ErabSwitchedInUplinkItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x943594c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapEnb::ErabSwitchedInUplinkItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapEnb::ErabSwitchedInUplinkItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x943a08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x943a54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x943ac0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94692cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapEnb::ErabToBeSetupItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapEnb::ErabToBeSetupItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9469cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x946d18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x946d84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x946decc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947058c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9470f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94754cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94757ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS1apSapMme::ErabToBeReleasedIndication >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS1apSapMme::ErabToBeReleasedIndication >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947590c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9475d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9475eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947806c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS1apSapMme::ErabSetupItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS1apSapMme::ErabSetupItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94781cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947862c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94787ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9478a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9478bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9478f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947c10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947c26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947c3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::EpcS1apSapMme::ErabSwitchedInDownlinkItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::EpcS1apSapMme::ErabSwitchedInDownlinkItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947c52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme::ErabSetupItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme::ErabSetupItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x947cc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x948012c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94807ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9480e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme::ErabSwitchedInDownlinkItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme::ErabSwitchedInDownlinkItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x948588c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9485d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x948a42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x948aaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme::ErabToBeReleasedIndication const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme::ErabToBeReleasedIndication const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x948e4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x948e98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94933cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x949388c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::CellInformationItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::CellInformationItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94970ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::RelativeNarrowbandTxBand')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::RelativeNarrowbandTxBand' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x949756c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9497c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::UlHighInterferenceInformationItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::UlHighInterferenceInformationItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x949a2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::UlInterferenceOverloadIndicationItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::UlInterferenceOverloadIndicationItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x949a9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::CellMeasurementResultItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::CellMeasurementResultItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x949e48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::CompositeAvailCapacity')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::CompositeAvailCapacity' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x949e94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x949efec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadIndicator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadIndicator' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94a36ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94a3d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadIndicator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadIndicator' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94d43ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94d4a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94d812c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::CompositeAvailCapacity')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::CompositeAvailCapacity' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94d87cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94d8e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadIndicator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadIndicator' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94de50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94deb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadIndicator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadIndicator' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94e324c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94e38cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::CompositeAvailCapacity const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::CompositeAvailCapacity const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94e62ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94e67ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94e6e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabAdmittedItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabAdmittedItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94ec88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94ecd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94f042c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94f0acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabNotAdmittedItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabNotAdmittedItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94f44ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94f49ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94f808c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabToBeSetupItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabToBeSetupItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94f86cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94f8f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94fe62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x94feccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x950236c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9502a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x950640c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95068cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9506f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x950b64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 4096u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 4096u >' => failure
'std::bitset< 4096u >' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['std::bitset< 4096u >'],) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x950bcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x950e3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverPreparationFailureParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverPreparationFailureParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x950edac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x953a28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x953a94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x953afec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x953e6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x953ed4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestAckParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestAckParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x954476c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabAdmittedItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabAdmittedItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9544c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x954738c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabNotAdmittedItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabNotAdmittedItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9547a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x954b16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x954b9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x954bf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95505ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x955506c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95554cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9555c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95592cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x955996c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x955f1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x955f74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x955fdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95634ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9563b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x956756c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::CellInformationItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::CellInformationItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9567a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x956d18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::RelativeNarrowbandTxBand const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::RelativeNarrowbandTxBand const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x956db8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x957006c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x957072c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9570dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x957548c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int16_t' => success ((<class 'pybindgen.typehandlers.inttype.Int16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9575bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ResourceStatusUpdateParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ResourceStatusUpdateParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95a05ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::CellMeasurementResultItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::CellMeasurementResultItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95a0aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95a520c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95a58ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95a5f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::SnStatusTransferParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::SnStatusTransferParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95a896c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95a8e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95ae58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95aec2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95b22ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95b298c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeContextReleaseParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeContextReleaseParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95b73ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95b786c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95b7f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95bb24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95bb92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeDataParams const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeDataParams const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95c034c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95c084c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95c0f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95c35cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95c3e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UlHighInterferenceInformationItem const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UlHighInterferenceInformationItem const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95c874c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95c8c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95cc2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2SapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2SapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95ccd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d22ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverPreparationFailureParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverPreparationFailureParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d246c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d28ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d2a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d2e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestAckParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestAckParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d2fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d544c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d55cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d5a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ResourceStatusUpdateParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ResourceStatusUpdateParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d5b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d5fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::SnStatusTransferParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::SnStatusTransferParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d816c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d85ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeContextReleaseParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeContextReleaseParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d872c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d8b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeDataParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeDataParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95d8cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2SapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2SapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95dc44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95dc98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverPreparationFailureParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverPreparationFailureParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95dcb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95dcf4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x960d0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x960d52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestAckParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestAckParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x960d6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x960daec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x960dc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96100cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ResourceStatusUpdateParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ResourceStatusUpdateParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961024c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961068c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::SnStatusTransferParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::SnStatusTransferParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961080c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9610c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeContextReleaseParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeContextReleaseParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9610dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961422c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeDataParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeDataParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96143ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96146ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer::Qci')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer::Qci' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961804c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer::Qci')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer::Qci' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961846c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::GbrQosInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::GbrQosInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961846c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9618a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9618eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961c3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961c88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AllocationRetentionPriority')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AllocationRetentionPriority' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961ccec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::GbrQosInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::GbrQosInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961f38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer::Qci')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer::Qci' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x961fa0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EutranMeasurementMapping const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EutranMeasurementMapping const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962340c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962394c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9623acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9623f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96280cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962852c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96286ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9628b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9628c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962b10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962b28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962b6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962b86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962bccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962be4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962f2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962f44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962f8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962fa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x962fe8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963402c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963448c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963460c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9634a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9634bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963706c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EventImpl > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EventImpl > const &' => failure
'ns3::Ptr< ns3::EventImpl > const &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:3845: Warning: exception TypeLookupError(['ns3::Ptr< ns3::EventImpl > &'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x963782c>
  cls.add_constructor([param('ns3::Ptr< ns3::EventImpl > const &', 'impl'), param('uint64_t', 'ts'), param('uint32_t', 'context'), param('uint32_t', 'uid')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9637b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9637fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963c4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963798c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963cbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963f0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventImpl *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventImpl *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963f56c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:3879: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::PeekEventImpl (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963fa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x963ff6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x964310c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96438ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedLcConfigReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedLcConfigReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9643a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x964814c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedLcReleaseReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedLcReleaseReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96482cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x964882c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96489ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x967c0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeReleaseReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeReleaseReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x967c24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x967cc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x968112c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96817ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9681e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NormalExtended_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NormalExtended_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x968454c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::DuplexMode_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::DuplexMode_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9684bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::Enable64Qam_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::Enable64Qam_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x968926c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::HoppingMode_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::HoppingMode_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96898ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9689f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x968e62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x968eccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x969238c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9692b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96992ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9699a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x969e0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x969e78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x969ee2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NormalExtended_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NormalExtended_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96a14ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::PhichResource_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedCellConfigReqParameters::PhichResource_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96a1b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96a720c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96a78ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96a7f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96aa60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SiConfiguration_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SiConfiguration_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96aacac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96ae34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96ae9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96b20ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96b274c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96b2dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96b84ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96b8b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NormalExtended_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NormalExtended_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96e220c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96e288c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedLcConfigReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedLcConfigReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96e532c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::LogicalChannelConfigListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::LogicalChannelConfigListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96e57ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96e5f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96eb5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96ebc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedLcReleaseReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedLcReleaseReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96f072c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96f0bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96f43ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96f4a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96f84ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96f89ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96fd08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::RepMode_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::RepMode_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96fd72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x96fddac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x970046c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9700b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiConfig_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiConfig_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97061cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x970684c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DrxConfig_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DrxConfig_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9706eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x970d58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x970dc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::MeasGapConfigPattern_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::MeasGapConfigPattern_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97112ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x971196c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9711fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97146cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9714d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpsConfig_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpsConfig_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x971942c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9719aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SrConfig_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SrConfig_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x974516c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97457ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::FeedbackMode_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::FeedbackMode_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9745e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x974952c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9749bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x974d28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x974d92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x974dfcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UeCapabilities_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeCapabilities_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x975168c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::OpenClosedLoop_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeConfigReqParameters::OpenClosedLoop_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9751d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97543ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider::CschedUeReleaseReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider::CschedUeReleaseReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9754e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x975c30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x975c9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976046c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97609ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedCellConfigCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedCellConfigCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9760b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97632ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedCellConfigUpdateIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedCellConfigUpdateIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976346c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9763b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedLcConfigCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedLcConfigCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9763cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976740c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedLcReleaseCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedLcReleaseCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976758c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9767c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedUeConfigCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedUeConfigCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9767e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976c52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedUeConfigUpdateIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedUeConfigUpdateIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976c6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976cdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedUeReleaseCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedUeReleaseCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x976cf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedCellConfigCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedCellConfigCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x977094c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Result_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Result_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9770e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97764cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedCellConfigUpdateIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedCellConfigUpdateIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9776f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x977b42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x977baec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x977f1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedLcConfigCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedLcConfigCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x977fc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x978310c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Result_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Result_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97838ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9783f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97b15ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedLcReleaseCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedLcReleaseCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97b508c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97b554c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Result_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Result_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97b5cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97ba38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97baa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedUeConfigCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedUeConfigCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97bd4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Result_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Result_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97bd98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97bdfcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97c16ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedUeConfigUpdateIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedUeConfigUpdateIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97c718c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiConfig_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiConfig_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97c764c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97c7cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97ca3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpsConfig_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpsConfig_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97caa4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97d00ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SrConfig_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SrConfig_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97d078c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97d0e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97d44cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97d4b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser::CschedUeReleaseCnfParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser::CschedUeReleaseCnfParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97d960c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Result_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Result_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97d9acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97de18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97de82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97e42cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97e480c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97e498c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97e914c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlMacBufferReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlMacBufferReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97e92cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97e99cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlPagingBufferReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlPagingBufferReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x97e9b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x981526c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlRachInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlRachInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98153ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9815aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9815c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x981938c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlTriggerReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlTriggerReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x981950c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9819c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9819d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x981c4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlMacCtrlInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlMacCtrlInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x981c62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x981cd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlNoiseInterferenceReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlNoiseInterferenceReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x981ceac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98215cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlSrInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlSrInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x982174c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9821e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlTriggerReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlTriggerReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9821fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98269ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::CqiListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::CqiListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9826eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x982a60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x982acac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlMacBufferReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlMacBufferReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x982e74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CeBitmap_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CeBitmap_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x982ec0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98322cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x983296c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlPagingBufferReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlPagingBufferReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x983640c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::PagingInfoListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::PagingInfoListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98368cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9836fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x983a6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlRachInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlRachInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x983f16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::RachListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::RachListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x983f62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x983fd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x984642c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlRlcBufferReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9846eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x984a38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x984aa4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x985010c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98507ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9850e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x987d50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x987dbac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x988126c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlTriggerReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlTriggerReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9881cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::DlInfoListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::DlInfoListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98851cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x988590c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9885fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x988ba4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x988bf0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlCqi_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlCqi_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x988e5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x988ec6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlMacCtrlInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlMacCtrlInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x989270c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::MacCeListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::MacCeListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9892bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x989732c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98979cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlNoiseInterferenceReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlNoiseInterferenceReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x989c46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x989c92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x989cfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98a06ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98a0d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlSrInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlSrInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98a47ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98a4cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::SrListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::SrListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98a838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98a8aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlTriggerReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlTriggerReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98ac54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98aca0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::UlInfoListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::UlInfoListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98b10ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98b180c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98b62ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98b67ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser::SchedDlConfigIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser::SchedDlConfigIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98b696c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98ba12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser::SchedUlConfigIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser::SchedUlConfigIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98ba2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser::SchedDlConfigIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser::SchedDlConfigIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98bacac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::BuildBroadcastListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::BuildBroadcastListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98e818c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::BuildDataListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::BuildDataListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98e88cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::BuildRarListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::BuildRarListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98e8fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98ed72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98eddcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser::SchedUlConfigIndParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser::SchedUlConfigIndParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98f386c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::UlDciListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::UlDciListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98f3d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::PhichListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::PhichListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98f748c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::VendorSpecificListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::VendorSpecificListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98f7bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::GbrQosInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::GbrQosInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98fb28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98fbb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98fe1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98fe88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x98fef2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HarqProcessInfoElement_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HarqProcessInfoElement_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x990494c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9904e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99074ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9907b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x990b24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hasher const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hasher const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x990b88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Hash::Implementation >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Hash::Implementation >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Implementation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991038c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991070c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991086c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9910a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9910eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991504c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99154ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991562c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99157cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9915c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9915dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hasher &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hasher &' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991826c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HigherLayerSelected_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HigherLayerSelected_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9918a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9918f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991b6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ImsiLcidPair_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ImsiLcidPair_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x991bd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99215ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x992182c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9921bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x994f2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Inet6SocketAddress const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Inet6SocketAddress const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x994f90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x994fe4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995304c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99533ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995384c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9953ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9953f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995730c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Inet6SocketAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Inet6SocketAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995786c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99579cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9957e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995a34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995a80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995a98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995ae4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995afcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995d42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995d5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InetSocketAddress const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InetSocketAddress const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995d90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x995de8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x996108c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x996142c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x996188c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9961d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9961f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x996634c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::InetSocketAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::InetSocketAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99668ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9966a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9966ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x996938c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x996984c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99699cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9969e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997002c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997046c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99705ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997094c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997424c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99746cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9974c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9974d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997826c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99783cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997888c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99789ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4700: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9978bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9978f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997b4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997b98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997be2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997bf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997e46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997e90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997edcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x997ef4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x998342c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99838ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9983a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9983f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x998740c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x998758c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9987a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4765: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9987cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9987e6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4770: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9987fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x998a18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x998a5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x998a76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4AddressHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4AddressHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x998abac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c342c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c360c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c374c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9987f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9987c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c3cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c708c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c752c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c76ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c77ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99c792c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cb06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cb1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cb56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cbaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cbf4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cf40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cf8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99cfd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d322c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d33ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d37ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d396c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d3dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d3f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d938c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d984c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d99cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99d9e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99dc1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99dcb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9978a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99dce0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4 >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4 >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e018c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e018c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e05ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' => failure
'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4883: Warning: exception TypeLookupError(['std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >'],) in wrapper public: retval? ???::Add (params?);
  [param('std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >', 'ipInterfacePair')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e09ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e0b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e0cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' => failure
'__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4892: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' => failure
'__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4897: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > const, std::vector< std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' => failure
'std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4902: Warning: exception TypeLookupError(['std::pair< ns3::Ptr< ns3::Ipv4 >, unsigned int >'],) in wrapper public: retval? ???::Get (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e636c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e64cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e662c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e6a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e3aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e3c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e324c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e088c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99e6ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99eb24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99eb70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99ebbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99ee08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99ee52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99ee9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99eee8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f202c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f246c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f25ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f272c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f2b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4975: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f2dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f2f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f66cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f6bcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:4992: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x99f6bac>
  cls.add_constructor([param('uint8_t *', 'address')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f6dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f926c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f97ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f990c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f9dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f9f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99fe40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99f2acc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5010: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99fe54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99fe82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x99febec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a370ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3754c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a376cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5035: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::GetBytes (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3784c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a37cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3c16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3c60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3caac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3cf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a376cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3f48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3f82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3fcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a3fe6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4234c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4280c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a42ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a461ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4666c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a467ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a46cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4918c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac16Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac16Address' => failure
'ns3::Mac16Address' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5125: Warning: exception TypeLookupError(['ns3::Mac16Address'],) in wrapper public: retval? ???::MakeAutoconfiguredAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a498ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a499ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a49b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a49f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac64Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac64Address' => failure
'ns3::Mac64Address' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5135: Warning: exception TypeLookupError(['ns3::Mac64Address'],) in wrapper public: retval? ???::MakeAutoconfiguredAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4f1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac16Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac16Address' => failure
'ns3::Mac16Address' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5140: Warning: exception TypeLookupError(['ns3::Mac16Address'],) in wrapper public: retval? ???::MakeAutoconfiguredLinkLocalAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4f3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4f52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4f96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac64Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac64Address' => failure
'ns3::Mac64Address' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5150: Warning: exception TypeLookupError(['ns3::Mac64Address'],) in wrapper public: retval? ???::MakeAutoconfiguredLinkLocalAddress (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4fbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4fd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5418c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a542ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5472c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5165: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a549cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a54b6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5170: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a54d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a54e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a4f0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a54fcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5178: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Set (params?);
  [param('uint8_t *', 'address')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5804c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5188: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0x9a5802c>
  cls.add_constructor([param('uint8_t *', 'prefix')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a581cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5850c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a587ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a58b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a58fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5b1ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5201: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::GetBytes (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5b32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5b78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5bc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5e10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5e5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5e72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5ebec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a58fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a54ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a5ee0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5236: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogComponent const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogComponent const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a620cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a623ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6256c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogLevel const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogLevel const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6272c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a62acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogLevel const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogLevel const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a62c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a650ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogLevel const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogLevel const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6522c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6566c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< std::string, ns3::LogComponent * > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< std::string, ns3::LogComponent * > *' => failure
'std::map< std::string, ns3::LogComponent * > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5261: Warning: exception TypeLookupError(['std::map< std::string, ns3::LogComponent * > *'],) in wrapper public: retval? ???::GetComponentList (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a65dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogLevel const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogLevel const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a65f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6a3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogLevel const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogLevel const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6a54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6a98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a65c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6ae2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogLevel const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogLevel const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6afac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogicalChannelConfigListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogicalChannelConfigListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6e70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogicalChannelConfigListElement_s::Direction_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogicalChannelConfigListElement_s::Direction_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a6ebcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a7128c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a7192c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9a71fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9aab68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9aabd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9aae3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9aaea8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LogicalChannelConfigListElement_s::QosBearerType_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LogicalChannelConfigListElement_s::QosBearerType_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ab314c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAnrSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAnrSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ab3b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ab808c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ab820c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ab894c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ab8acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9abb18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9abb30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9abb9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9abbb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9abf1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9abf36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAnrSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAnrSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9abfcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ac524c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigEutra' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ac53cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAsSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAsSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ac5dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ac834c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ac8aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9acd20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9acd38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9acd4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9acdb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9acde4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9acde4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad252c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad26ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad2d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad2ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAsSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAsSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad588c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad5dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad858c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ad8c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ade3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ade6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9adef4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae24ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::LcInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::LcInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae262c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae276c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5430: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::AddLc (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae2ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae706c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::AllocateNcRaPreambleReturnValue')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::AllocateNcRaPreambleReturnValue' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae74cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae762c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae7a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae7c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae7d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::RachConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::RachConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b161ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b1664c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::LcInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::LcInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b167cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b16c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b16d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ae288c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b1908c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b191ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b195ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::UeConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::UeConfig' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b1972c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::AllocateNcRaPreambleReturnValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::AllocateNcRaPreambleReturnValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b19e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b1d34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b1da0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b210cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::LcInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::LcInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b21acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b21f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b2666c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b26d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b2a3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b2aa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b2f12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b2f7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b2fe6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b3252c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::RachConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::RachConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b32f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b3840c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b38acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b3d18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider::UeConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider::UeConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b3db8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4306c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4372c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4614c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4668c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b46e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b46fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4c12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4c28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4c8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapUser::UeConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapUser::UeConfig' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4ca2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapUser::UeConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapUser::UeConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4f3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4f88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b4ff4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCphySapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCphySapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b5296c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b52eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8104c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8178c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b81e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8502c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b856cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8584c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b859ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b85ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b891ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8984c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b899cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b89b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8d1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MasterInformationBlock')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MasterInformationBlock' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8d32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8d9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8db2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b8dc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b9430c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b9448c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b945ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b94c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b94dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b9746c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b975ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b9774c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCphySapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCphySapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b9c0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbPhySapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhySapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b9c90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9b9ce4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba160c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba18ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba1e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba51ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbPhySapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhySapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba5a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba5f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba812c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba884c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ba8b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bad0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bad3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bad98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9badb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb11cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb134c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb14ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb1b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb1c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb532c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb54ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfConverter const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfConverter const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb5e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb850c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb896c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb8aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bb8f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bbd72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bbdc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bbddec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bed52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bed6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bed80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bede4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bedfcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bf114c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bf17ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bf192c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bf62ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bf682c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigEutra' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bf69ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bfb0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bfb26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bfb8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bfba6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PdschConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PdschConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bfbbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bff52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9bffa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c022cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c02a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0918c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0930c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c099ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c09b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c09c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0c2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0c46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0c5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0cc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0cd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0f4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0f62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0fd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:5821: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper public: virtual retval? ???::ReportUlCqiInfo (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c14c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFlowId_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFlowId_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1816c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1418c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0290c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0990c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c0fdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteGlobalPathlossDatabase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteGlobalPathlossDatabase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1894c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c18e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1b02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1b18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1b5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1ba6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1bbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c1beac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c201ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c201ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c20a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c20fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c2414c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c242ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c24c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c271ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigEutra' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c2736c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c27a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c27c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c27d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c596ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c59c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider::ReportBufferStatusParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider::ReportBufferStatusParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c59dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c5d4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider::TransmitPduParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider::TransmitPduParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c5d66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider::ReportBufferStatusParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider::ReportBufferStatusParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c6206c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c624cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c62b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c6624c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c668ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c66f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c6b64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c6bcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider::TransmitPduParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider::TransmitPduParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c6e70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c6ebcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c732ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7394c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c771ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7772c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7b14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7b68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7be2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7bfac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7e12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7e28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7e8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c7ebac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMiErrorModel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMiErrorModel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8446c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c849ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c84b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TbStats_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TbStats_t' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c84fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8716c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int > const &' => success ((<class 'pybindgen.container.ThisContainerRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c872ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8754c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8768c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HarqProcessInfoList_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HarqProcessInfoList_t' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c877ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c87b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c87d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c87e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c87fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c893cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8954c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int > const &' => success ((<class 'pybindgen.container.ThisContainerRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c896cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8992c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8d06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8d5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapProvider::TransmitPdcpSduParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapProvider::TransmitPdcpSduParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c8d72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapProvider::TransmitPdcpSduParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapProvider::TransmitPdcpSduParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c9216c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c9262c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c92e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c9642c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9c96e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cc938c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapUser::ReceivePdcpSduParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapUser::ReceivePdcpSduParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cc950c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapUser::ReceivePdcpSduParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapUser::ReceivePdcpSduParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cc9f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cce40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ccec6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cd220c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cd2c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cd716c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapProvider::TransmitPdcpPduParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapProvider::TransmitPdcpPduParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cd72ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapProvider::TransmitPdcpPduParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapProvider::TransmitPdcpPduParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cd7d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cdb1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cdba4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cdbfcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce19ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce1f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce624c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce6b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce90ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PdschConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PdschConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce926c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::AntennaInfoDedicated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::AntennaInfoDedicated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ce9e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cee30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::AsConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::AsConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ceed2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cf220c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MasterInformationBlock')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MasterInformationBlock' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cf28cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cf2f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cf65ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cf6c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType2')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType2' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cfb30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9cfb98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::BlackCellsToAddMod const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::BlackCellsToAddMod const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d003ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d0086c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysCellIdRange')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysCellIdRange' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d00f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CarrierBandwidthEutra const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CarrierBandwidthEutra const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d0392c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d03dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d314cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CarrierFreqEutra const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CarrierFreqEutra const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d31ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d353ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d35a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CellAccessRelatedInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CellAccessRelatedInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d3a48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d3a94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d3afac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d3e6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PlmnIdentityInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PlmnIdentityInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d3ed6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CellSelectionInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CellSelectionInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d4376c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d43c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d4830c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CellsToAddMod const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CellsToAddMod const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d48d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d4d1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d4d8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d4df4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CgiInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CgiInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d5196c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d51e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d5550c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d55bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d5932c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::DrbToAddMod const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::DrbToAddMod const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d59d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d5d20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d5d8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::LogicalChannelConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::LogicalChannelConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d5df6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d6260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RlcConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RlcConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d62cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::FreqInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::FreqInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d656ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d65b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d6a24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::HandoverPreparationInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::HandoverPreparationInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d6ac4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::AsConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::AsConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d9a12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::LogicalChannelConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::LogicalChannelConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d9ab2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d9afec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d9f6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9d9fd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9da242c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MasterInformationBlock const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MasterInformationBlock const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9da2e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9da730c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9da79cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dab3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dab8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dabf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dae62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9daeccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasGapConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasGapConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9db238c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::MeasIdToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::MeasIdToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9db2a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9db614c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::MeasObjectToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::MeasObjectToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9db68cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9db6fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::QuantityConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::QuantityConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dbb78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::ReportConfigToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::ReportConfigToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dbbe0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dc154c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dc1ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SpeedStatePars')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SpeedStatePars' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dc538c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasGapConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasGapConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dc5d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dca24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasIdToAddMod const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasIdToAddMod const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dcac6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dd114c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dd180c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dd1eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasObjectEutra const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasObjectEutra const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dd48cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9dd4d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::BlackCellsToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::BlackCellsToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e0246c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e02b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e0532c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e059cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::CellsToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::CellsToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e0908c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e097ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e09f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e0d5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e0dc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e1234c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasObjectToAddMod const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasObjectToAddMod const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e12d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasObjectEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasObjectEutra' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e1522c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e158cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResultEutra const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResultEutra const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e1b2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CgiInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CgiInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e1b7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e1be4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e2050c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e20bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e2426c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e2490c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e24fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e289cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e28e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e2d56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::MeasResultEutra >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::MeasResultEutra >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e2dc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e3134c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e319ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasurementReport const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasurementReport const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e3640c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e368cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MobilityControlInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MobilityControlInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e3c2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CarrierBandwidthEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CarrierBandwidthEutra' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e3c7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CarrierFreqEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CarrierFreqEutra' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e3ce4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e694ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e69b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e6c24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e6c8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RachConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RachConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e6cf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommon')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommon' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e7062c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e70cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MobilityStateParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MobilityStateParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e756cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e75b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e7926c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e7990c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e79fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PdschConfigCommon const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PdschConfigCommon const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e7e9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e7ee8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e8356c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PdschConfigDedicated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PdschConfigDedicated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e83f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e8744c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysCellIdRange const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysCellIdRange const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e87e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e8b34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e8ba0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e8f0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysicalConfigDedicated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysicalConfigDedicated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e8facc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::AntennaInfoDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::AntennaInfoDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e8ff8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e9464c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e94cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e993ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PdschConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PdschConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e99a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SoundingRsUlConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SoundingRsUlConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e9c0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PlmnIdentityInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PlmnIdentityInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e9cacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9e9cf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PreambleInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PreambleInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ea29cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ea2e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::QuantityConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::QuantityConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ea58cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ea5d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ed646c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RaSupervisionInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RaSupervisionInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ed6e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9edb34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9edba0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RachConfigCommon const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RachConfigCommon const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9edf42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PreambleInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PreambleInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9edf8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RaSupervisionInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RaSupervisionInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9edff8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RachConfigDedicated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RachConfigDedicated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ee398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ee3e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ee652c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommon const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommon const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ee6f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RachConfigCommon')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RachConfigCommon' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9eec40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommonSib const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommonSib const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9eece0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PdschConfigCommon')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PdschConfigCommon' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9eef2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RachConfigCommon')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RachConfigCommon' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9eef98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ef438c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::DrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::DrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ef484c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ef4f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ef972c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysicalConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysicalConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9ef9dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::SrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::SrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9efd46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReestabUeIdentity const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReestabUeIdentity const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9efdeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f023cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f02a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigEutra const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigEutra const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f070ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f0796c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f07fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f0b6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f0bd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f0f44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ThresholdEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ThresholdEutra' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f0faec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ThresholdEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ThresholdEutra' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f3e18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f3e80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigToAddMod const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigToAddMod const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f4322c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigEutra' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f436ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f43d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RlcConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RlcConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f467ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f4a06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f4a4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f4ab8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f5024c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f508ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MobilityControlInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MobilityControlInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f50f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f5460c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f54c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfigurationCompleted const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfigurationCompleted const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f596ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f59b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishment const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishment const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f5c5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f5ca6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f6112c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentComplete const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentComplete const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f61b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f61fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentReject const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentReject const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f64a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentRequest const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentRequest const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f6728c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReestablishmentCause')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReestablishmentCause' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f6774c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReestabUeIdentity')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReestabUeIdentity' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f67dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReject const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReject const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f6e7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f6ecac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRelease const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRelease const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f716ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f71bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRequest const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRequest const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f765ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9f76aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetup const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetup const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fa74ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fa79ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fa7fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetupCompleted const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetupCompleted const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9faaa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9faaf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SoundingRsUlConfigCommon const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SoundingRsUlConfigCommon const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9faf96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fafe2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fb250c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SoundingRsUlConfigDedicated const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SoundingRsUlConfigDedicated const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fb2f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fb93ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fb9aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SpeedStatePars const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SpeedStatePars const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fbe4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MobilityStateParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MobilityStateParameters' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fbe98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SpeedStateScaleFactors')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SpeedStateScaleFactors' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fbefcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SpeedStateScaleFactors const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SpeedStateScaleFactors const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fc3a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fc3eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fc85cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SrbToAddMod const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SrbToAddMod const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fcc04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::LogicalChannelConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::LogicalChannelConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fcc4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fccb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fd156c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fd1a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType2')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType2' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fd410c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fd4aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CellAccessRelatedInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CellAccessRelatedInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fd4fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::CellSelectionInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::CellSelectionInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fda66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType2 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType2 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fdd06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::FreqInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::FreqInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fdd52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommonSib')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommonSib' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fddbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ThresholdEutra const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ThresholdEutra const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fe15cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x9fe1a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteSpectrumValueHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumValueHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0114cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa011b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa011c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa011ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01504c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01548c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01550c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0158ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa015d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa015dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01804c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0181ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01830c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0187ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01882c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa018aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa018c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< int, double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< int, double >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa018d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa018fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01c2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01c44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01c74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01c8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01cc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa01cdcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0203cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02044c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02070c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa020a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa020b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0242ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0247ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02496c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapProvider::LogicalChannelConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapProvider::LogicalChannelConfig' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa024acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa024c0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:6940: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::AddLc (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02834c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapProvider::RachConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapProvider::RachConfig' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0284cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa028a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa028eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02c3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02c88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02ca0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02cb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa02cccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapProvider::LogicalChannelConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapProvider::LogicalChannelConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0303cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa03088c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa024d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0342ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa03494c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapProvider::RachConfig const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapProvider::RachConfig const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa03836c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa03882c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa038eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa03b5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04002c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04050c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa040cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0443cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04454c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeConfig_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeConfig_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0448ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0473cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa047a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04b14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04b7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04f20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04f74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04f8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa04fc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0851ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa08530c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa08596c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa08a08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa08a20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa08a8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa08aa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0900ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09026c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09090c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa090a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09414c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0942cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09496c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa094aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0991ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09932c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0999cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa099b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa099cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09e5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09eb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09ecac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MasterInformationBlock')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MasterInformationBlock' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa09ee0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a250c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a268c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a27ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a2e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapUser::UeMeasurementsParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapUser::UeMeasurementsParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a2fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapUser::UeMeasurementsElement const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapUser::UeMeasurementsElement const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a594c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a5e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a94ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0a9b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapUser::UeMeasurementsParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapUser::UeMeasurementsParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0ae5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::LteUeCphySapUser::UeMeasurementsElement >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::LteUeCphySapUser::UeMeasurementsElement >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0aea6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhySapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhySapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b252c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b2a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b2d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b53ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b56ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b5c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b5dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0b5f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhySapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhySapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0bb8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0bbdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0be0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0be72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0bea2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0befcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0ed16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0ed2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0edc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f018c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider::CompleteSetupParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider::CompleteSetupParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f030c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f074c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f08cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f0d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishment')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishment' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f0e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f62ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentReject' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f646c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f68ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReject' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f6a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f6e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRelease')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRelease' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f6fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f944c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetup')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetup' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f95cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f9a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0f9b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider::CompleteSetupParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider::CompleteSetupParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0fc2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0fc7ac>))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0fc92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa0fcdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10008c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasurementReport')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasurementReport' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10020c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10064c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfigurationCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfigurationCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1007cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa100c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentComplete')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentComplete' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa100d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1041ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10436c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1047ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10492c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa104d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetupCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetupCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa104eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10934c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapUser::SetupParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapUser::SetupParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1094cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapUser::SetupParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapUser::SetupParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa109c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10c0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10c26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10c3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa10cbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11014c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1105ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11074c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa110c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa110d8c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7320: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyFrom (params?);
  [param('uint8_t const *', 'buffer')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa110f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1150cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7325: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyTo (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11524c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11568c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1157ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa115c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa115d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x95bb2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa110e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa115f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11844c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa118a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacCeListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacCeListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11c28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacCeListElement_s::MacCeType_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacCeListElement_s::MacCeType_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11c74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacCeValue_u')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacCeValue_u' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa11ce0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1214ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacCeValue_u const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacCeValue_u const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa121eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa12638c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa126b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa15d1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Names const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Names const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa15dbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16116c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1612ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1615cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16194c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa161acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa161c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa161f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16622c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16650c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16650c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16696c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa166c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa166f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16b28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16b5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16b8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16bc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16bdcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16bf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16e36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16e4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16e64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16e7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16eb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16ee4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa16ee4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17118c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17144c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa171dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17410c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17452c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17476c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa174bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa174d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1791cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1794ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1797ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17994c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7473: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7478: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::NetDevice > const, std::vector< ns3::Ptr< ns3::NetDevice > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17c88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17c90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17cd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17f18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17fccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17ffac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1833ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18362c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa183a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa183c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa17c16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa183e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18704c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1871ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18738c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18776c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1879ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa187b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa187cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa187e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18a2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18a44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18a88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18abec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18aeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18d06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7524: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18d8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18da8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18deec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18d5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa18d74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7537: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Node > const, std::vector< ns3::Ptr< ns3::Node > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1907cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa19082c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa190c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa19410c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1948cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa194e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa194f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa19810c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa19854c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1986cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa19882c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa198c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa198f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1cf46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1cf5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1cf74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1cfbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1cfd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1cfeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d234c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d24cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d262c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d278c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d2bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d2d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d2eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d634c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d64cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d662c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d678c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d6bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d6d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1d6eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1db34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeConstructionList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeConstructionList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1db4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1dbcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectDeleter const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectDeleter const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1dfa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1dffac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e314c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7625: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::Delete (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e32cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e3a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e31cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e82cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e86ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e882c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e898c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e8e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1e8f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1eb40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1eb58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1eba2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ebbac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ebf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ee18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ee52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1eea6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1eebec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f20cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f224c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f23ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f284c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f29cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f2e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f2fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f514c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::ItemIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::ItemIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f55ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f570c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f5b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f5ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f5e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f826c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f83ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7698: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Deserialize (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f85ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f8a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1f8eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1fc3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1fc58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1fc70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1fcb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1fccec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ff16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ff2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ff48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ff8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ffa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1ffbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa1fff4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2031ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7739: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa20362c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa203aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2081ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2030ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2087ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa208e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa24054c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::ItemIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::ItemIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa240b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2450ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa24532c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa24574c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa245c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa24806c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2485ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator::Item')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator::Item' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa248a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator::Item const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator::Item const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa248e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa24c40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa24c58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa24ca4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25122c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25176c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2518ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList::TagData const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList::TagData const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa251dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25530c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25548c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25594c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa255acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa255f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25a46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25a5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList::TagData const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList::TagData const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25adac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25e28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t [ 20 ]')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t [ 20 ]' => failure
'uint8_t [ 20 ]' did not match
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['uint8_t [ 20 ]'],) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagList::TagData *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagList::TagData *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25eaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa25ec0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PagingInfoListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PagingInfoListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa26260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa26282c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa262eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2685ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ParameterLogger const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ParameterLogger const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa268bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7872: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xa26b12c>
  cls.add_constructor([param('std::ostream &', 'os')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhichListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhichListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa26b62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhichListElement_s::Phich_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhichListElement_s::Phich_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa26baec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa26f1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyReceptionStatParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyReceptionStatParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa26fa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa26feec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2735cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa273c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa27732c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2779cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa27b08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa27b72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa27bdcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2ac48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2acb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2b11ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyTransmissionStatParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTransmissionStatParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2b1bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2b60cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2b678c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2b6e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2bb4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2bbb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2be24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2be8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2bef8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2c264c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2c2cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RachListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RachListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2c770c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2c7bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2ca2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2ca8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2cf20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::RadioBearerStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::RadioBearerStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2cf4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2cf84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::RadioBearerStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::RadioBearerStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2cfb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2cfe8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d536c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d54ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7974: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyConnectionReconfigurationEnb (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d566c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d57cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7979: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyConnectionReconfigurationUe (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d594c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5aac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7984: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyConnectionSetupUe (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5dcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7989: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyHandoverEndOkEnb (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d910c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7994: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyHandoverEndOkUe (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d92ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d942c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:7999: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyHandoverStartEnb (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d95cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d974c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8004: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyHandoverStartUe (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d98ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d9a6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8009: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyNewUeContextEnb (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsConnector *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsConnector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5aac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8014: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::NotifyRandomAccessSuccessfulUe (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RealProtocolRlcSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RealProtocolRlcSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcProtocolReal *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcProtocolReal *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d9b4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8021: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xa2d9a4c>
  cls.add_constructor([param('ns3::LteEnbRrcProtocolReal *', 'pdcp'), param('uint16_t', 'rnti')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d96ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d9b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RlcPduListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RlcPduListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2de16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2de46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2de8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SbMeasResult_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SbMeasResult_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2e22ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BwPart_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BwPart_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2e27ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::HigherLayerSelected_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::HigherLayerSelected_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2e2e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UeSelected_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeSelected_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d9a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2e574c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2e57ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2e5d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2ea22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2ea76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2eac2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2eadac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa31c20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa31c38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SiConfiguration_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SiConfiguration_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa31caac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa31cf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::SiMessageListElement_s >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::SiMessageListElement_s >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa32064c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa320d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa32442c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SiMessageListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SiMessageListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa324e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa32c30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa32c9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Object, ns3::ObjectBase, ns3::ObjectDeleter > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa32f3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa32f7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Simulator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Simulator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa32fb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33218c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33230c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3327cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa332c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33516c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3352ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SimulatorImpl >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SimulatorImpl >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimulatorImpl *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8149: Warning: exception TypeLookupError(['ns3::Ptr< ns3::SimulatorImpl >', 'ns3::SimulatorImpl *'],) in wrapper public: retval? ???::GetImplementation (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa335aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa335f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33944c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3395cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3397ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa339c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33c12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33c2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33c76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SimulatorImpl >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SimulatorImpl >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimulatorImpl *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8184: Warning: exception TypeLookupError(['ns3::Ptr< ns3::SimulatorImpl >', 'ns3::SimulatorImpl *'],) in wrapper public: retval? ???::SetImplementation (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33ca6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33cd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33f16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33f62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33f7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpsConfig_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpsConfig_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33ff4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa34242c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned short >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned short >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa33c70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa342e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa34750c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa347bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa34a26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SrConfig_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SrConfig_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa34ac6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SetupRelease_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SetupRelease_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa35214c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3527ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa352e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SrListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SrListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3568ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa356d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StatisticalSummary const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StatisticalSummary const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3887ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long int' => success ((<class 'pybindgen.typehandlers.inttype.LongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa388cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa38b4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa38bbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa38e30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa38ea0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa39312c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa39382c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa393f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa39794c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa397eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa39c04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa39c76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa39ce6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a134c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8314: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a1bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a1d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a408c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a460c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8326: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xa3a45ec>
  cls.add_constructor([param('uint8_t *', 'start'), param('uint8_t *', 'end')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a146c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa39c58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a48ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a4a4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8334: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Read (params?);
  [param('uint8_t *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a4bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a4ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a826c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a872c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3a8bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3ac0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3ac24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3ac6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3ac82c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8362: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Write (params?);
  [param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3ac9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3acb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3acf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b012c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b058c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3ac82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b070c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b086c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b0b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b0d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TbId_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TbId_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b308c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b3bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b3f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3b766c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TbStats_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TbStats_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3bc08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3bc54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3bcc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TimeWithUnit const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TimeWithUnit const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3bf26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3bf7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3bf9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TransmissionModesLayers const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TransmissionModesLayers const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f20ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f262c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f27ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f2b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f642c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f698c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f6b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f6c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3f6dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fb12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fb44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fb76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fb8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fba2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fbb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fbcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fe04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fe36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fe66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fe7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fe92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fec2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa3fef4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4030cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40322c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40352c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40352c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::AttributeInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::AttributeInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa403acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa403dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa403f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40524c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8478: Warning: exception TypeLookupError(['ns3::Callback< ns3::ObjectBase *, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: retval? ???::GetConstructor (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa405c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4090ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4095ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa409a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa409f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40d0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40d52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40d9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::TraceSourceInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::TraceSourceInformation' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa40deac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4056cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4059cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4112ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4117ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa411c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41514c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41560c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41578c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa415bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa415d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::AttributeInformation *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::AttributeInformation *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa415ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41832c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4184ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa418a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa418bec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8562: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::LookupByHashFailSafe (params?);
  is_static=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa418aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa418e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41c0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41c12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41c54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41c8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41ca2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41cd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41f06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41f1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41f64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41f7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41fc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa41fdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa42522c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4253ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::AttributeInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::AttributeInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa425b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4281ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa42892c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa428e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa42d54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa42ddcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa46334c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa463bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId::TraceSourceInformation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId::TraceSourceInformation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4684ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::TraceSourceAccessor const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::TraceSourceAccessor const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa468b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa46c0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa46c78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa46ce2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UeCapabilities_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeCapabilities_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa46f84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa46fd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4743ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa474a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa47814c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4787ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UeSelected_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeSelected_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa47c20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa47c6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa47ce6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa48060c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlCqi_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlCqi_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa48402c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned short >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned short >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4844ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlCqi_s::Type_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlCqi_s::Type_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa484c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlDciListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlDciListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa48868c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa488b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa48b22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa48b8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa48bf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa49062c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa490ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa49538c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa495a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa49a0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa49a78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa49ae2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa49e4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa49eb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4ce24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4ce8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4cef8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4d164c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlGrant_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlGrant_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4d606c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4d652c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4d6bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4da2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4da94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4dafec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4df6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4dfd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4e440c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4e4aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlInfoListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlInfoListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4e94cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlInfoListElement_s::ReceptionStatus_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlInfoListElement_s::ReceptionStatus_e' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4e998c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4e9fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4ed6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< unsigned short >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< unsigned short >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4edd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UplinkLteGlobalPathlossDatabase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UplinkLteGlobalPathlossDatabase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f288c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f2dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f2f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f622c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f650c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f650c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f690c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f6f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f916c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f984c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4f9f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4fd56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4fdaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4fdcac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa4fde0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5034cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa503b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa50624c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VendorSpecificListElement_s const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VendorSpecificListElement_s const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa506c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa50a12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa50a7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::VendorSpecificValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::VendorSpecificValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VendorSpecificValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa53802c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::empty const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::empty const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa53890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::fdbetsFlowPerf_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::fdbetsFlowPerf_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa53d18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa53d64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa53dd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5413cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa541a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::fdtbfqsFlowPerf_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::fdtbfqsFlowPerf_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa54550c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5459cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa54a0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa54a72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa54adcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa54e46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa54eb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5521cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55286c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa552f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55656c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5565cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5567ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55694c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa556c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa556aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55902c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5591ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55966c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long double' => failure
'long double' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:8882: Warning: exception TypeLookupError(['long double'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xa559acc>
  cls.add_constructor([param('long double', 'v')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa559d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long int' => success ((<class 'pybindgen.typehandlers.inttype.LongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55e12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long int' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55e5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55eacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa55ef6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56346c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa563b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa563d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5662cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56678c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa566c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56a12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56a28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56a6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56a86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t::impl_type const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t::impl_type const' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56accc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::pfsFlowPerf_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::pfsFlowPerf_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56e46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56e92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa56efec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5736ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa573d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::pssFlowPerf_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::pssFlowPerf_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5a27ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5a2cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5a738c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5a7a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5aa10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5aa7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5aae4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::tbInfo_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::tbInfo_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5b08cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5b0d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5b446c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5b4b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5b81cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5b886c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5b8f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5bd5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5bdc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5c23ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5c2a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::tdbetsFlowPerf_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::tdbetsFlowPerf_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5c546c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5c592c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5c5fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5c96ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5c9d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::tdtbfqsFlowPerf_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::tdtbfqsFlowPerf_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5cf7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5cfcac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5d238c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5d2a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5d70cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5d774c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5d7dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5db4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa5dbb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa60920c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Chunk const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Chunk const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa609c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa60c18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa60c30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa60ca2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa60ceec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9047: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DownlinkLteGlobalPathlossDatabase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DownlinkLteGlobalPathlossDatabase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa611a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa60ce8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa60c98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6161ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61648c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61648c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearerTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearerTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61688c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa616f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61912c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61952c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6196ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa619aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa619fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61d48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61d94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa61de0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6202ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9103: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa620b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa620ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62512c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6252ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62570c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62588c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62806c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62856c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6286ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa628b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa628fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62036c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9144: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62ca8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62cc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63002c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6308ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa630a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa630e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa630fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63444c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::EcnType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::EcnType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6345cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa634a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa634ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa62c40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::EcnType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::EcnType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63758c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa637a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa637eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63b3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63b88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63bd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63f22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63f6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63fb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa63ff8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa64452c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6449ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa644eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67b38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67b84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9260: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67f0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67f24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67f68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67f80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67fc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68412c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::DscpType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::DscpType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6842ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa67b96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header::EcnType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header::EcnType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68466c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa684a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa684b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa684fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68718c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6875ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa687aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa687f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68a44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68a5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68aa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68abac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68af0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68e1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68e5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68e76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68ebcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa68ed4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapProvider const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapProvider const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6924cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa692a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa692b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapProvider::CompleteSetupUeParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapProvider::CompleteSetupUeParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa692cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69510c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69528c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasurementReport')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasurementReport' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6953ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6957ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69596c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfigurationCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfigurationCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa695acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa695ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69806c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentComplete')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentComplete' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6981cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6985cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69874c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6988ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa698cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa698e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa698f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69c3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69c52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetupCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetupCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69c68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapProvider::CompleteSetupUeParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapProvider::CompleteSetupUeParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa69cd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a026c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a03ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapUser const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapUser const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a086c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a0dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a50ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::HandoverPreparationInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::HandoverPreparationInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a540c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a56ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a5a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6a5b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6aa08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::HandoverPreparationInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::HandoverPreparationInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6aa12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6aa50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6aa66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6aaa4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6aabcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6aad2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ad14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ad2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishment')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishment' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ad42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ad82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ad9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentReject' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6adb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6adf0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b00ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReject' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b020c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b060c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b078c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRelease')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRelease' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b08ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b0cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b0e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetup')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetup' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b0fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b33ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformation')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformation' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b356c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b39ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b3b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapUser::SetupUeParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapUser::SetupUeParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b3c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapUser::SetupUeParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapUser::SetupUeParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b73ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b786c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b79ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b7b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6f33cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6f354c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6f398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6b7a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6f80ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6f856c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6f8a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6f8eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9499: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6fb76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6fb8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6fbd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6fbeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ff32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ff4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ff80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa6ffe6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70234c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7024cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70290c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa702dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7052ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70576c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa705c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9551: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7094ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70962c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRadioBearerTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRadioBearerTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70996c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70f02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70f1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70f56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70f76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70f8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70fc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa70fe0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71226c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71272c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa712bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7150cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71558c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa715a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa715f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9607: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71978c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71990c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa719d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa719ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71d34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71d4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71d92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71daac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcAmHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcAmHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa71de0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72176c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7218ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa721d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7190ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72540c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7258cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa725d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72826c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72872c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa728bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72c0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72c56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72ca2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa72ceec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7653cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76588c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa765d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76822c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9714: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa768a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa768c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76c08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76c20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76c66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76c7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76cc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa76cdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77020c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77038c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7682ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa770a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa770b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa770fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77618c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7765ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77676c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa776bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa776d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77b1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77b34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77b7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77b92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77bc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77e5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77e74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77eb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa77ef8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78252c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7829cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa782e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78536c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78582c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa785cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9813: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78856c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7886ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa785cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa788a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa788e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78b02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78b46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78b5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78ba4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SequenceNumber10')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SequenceNumber10' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78bbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSduStatusTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSduStatusTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78e02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78e86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78e9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa78ee2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79330c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7937cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa793c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79716c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9871: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7979cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa797b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa797f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79b12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79b8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79bbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79bf4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object::AggregateIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object::AggregateIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79f42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79f8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa79fdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7d62ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7d666c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7d6c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7da70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7df18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Object::AggregateIterator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object::AggregateIterator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7dfb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7e442c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7e4aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketBurst const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketBurst const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7e4dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7e76cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7e79cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::Ptr< ns3::Packet > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::Ptr< ns3::Packet > >' => failure
'std::_List_const_iterator< ns3::Ptr< ns3::Packet > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9962: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::Ptr< ns3::Packet > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PacketBurst >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PacketBurst >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketBurst *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ea14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::Ptr< ns3::Packet > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::Ptr< ns3::Packet > >' => failure
'std::_List_const_iterator< ns3::Ptr< ns3::Packet > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:9972: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::Ptr< ns3::Packet > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ea76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::Packet > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::Packet > >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7e7d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ead8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ee20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ee6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PdcpTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PdcpTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7eedcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7f262c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7f2b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7f2c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7f60ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7f65ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7f6a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7f6f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7fa40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10036: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7fac6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7fadec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ff24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ff3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa7ffb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80236c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80280c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa802ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa802eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80608c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8064ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa806d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa806e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80b30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80b7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80b94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80bdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80f28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80fa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RngStream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RngStream *' => failure
'ns3::RngStream *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10116: Warning: exception TypeLookupError(['ns3::RngStream *'],) in wrapper protected: retval? ???::Peek (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RlcTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RlcTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa81228c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa812acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa812fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa84814c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa84858c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa848a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa848f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa84d3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa84d8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10155: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa80fe2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8501ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85056c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8506ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa850b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85338c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85384c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::RandomVariableStream >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::RandomVariableStream >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RandomVariableStream *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa853e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85724c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85770c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa857ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::AttributeAccessor, ns3::empty, ns3::DefaultDeleter< ns3::AttributeAccessor > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::AttributeAccessor, ns3::empty, ns3::DefaultDeleter< ns3::AttributeAccessor > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85b8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85bfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter< ns3::AttributeChecker > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter< ns3::AttributeChecker > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85f7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa85feec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter< ns3::AttributeValue > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter< ns3::AttributeValue > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8626cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa862dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::CallbackImplBase, ns3::empty, ns3::DefaultDeleter< ns3::CallbackImplBase > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::CallbackImplBase, ns3::empty, ns3::DefaultDeleter< ns3::CallbackImplBase > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8685cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa868cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::EpcTft, ns3::empty, ns3::DefaultDeleter< ns3::EpcTft > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::EpcTft, ns3::empty, ns3::DefaultDeleter< ns3::EpcTft > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa86b4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa86bc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::EpcTftClassifier, ns3::empty, ns3::DefaultDeleter< ns3::EpcTftClassifier > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::EpcTftClassifier, ns3::empty, ns3::DefaultDeleter< ns3::EpcTftClassifier > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa86e40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa86eb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::EventImpl, ns3::empty, ns3::DefaultDeleter< ns3::EventImpl > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::EventImpl, ns3::empty, ns3::DefaultDeleter< ns3::EventImpl > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa87130c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa871a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Hash::Implementation, ns3::empty, ns3::DefaultDeleter< ns3::Hash::Implementation > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Hash::Implementation, ns3::empty, ns3::DefaultDeleter< ns3::Hash::Implementation > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa87820c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa87892c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Ipv4MulticastRoute, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4MulticastRoute > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Ipv4MulticastRoute, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4MulticastRoute > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa87c10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa87c82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Ipv4Route, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4Route > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Ipv4Route, ns3::empty, ns3::DefaultDeleter< ns3::Ipv4Route > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa88006c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa88072c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::LteChunkProcessor, ns3::empty, ns3::DefaultDeleter< ns3::LteChunkProcessor > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::LteChunkProcessor, ns3::empty, ns3::DefaultDeleter< ns3::LteChunkProcessor > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa880eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa88362c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::LteControlMessage, ns3::empty, ns3::DefaultDeleter< ns3::LteControlMessage > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::LteControlMessage, ns3::empty, ns3::DefaultDeleter< ns3::LteControlMessage > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa883dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8bb52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::LteHarqPhy, ns3::empty, ns3::DefaultDeleter< ns3::LteHarqPhy > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::LteHarqPhy, ns3::empty, ns3::DefaultDeleter< ns3::LteHarqPhy > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8bbcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8be42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::NixVector, ns3::empty, ns3::DefaultDeleter< ns3::NixVector > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::NixVector, ns3::empty, ns3::DefaultDeleter< ns3::NixVector > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8bebec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8c332c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::Packet, ns3::empty, ns3::DefaultDeleter< ns3::Packet > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::Packet, ns3::empty, ns3::DefaultDeleter< ns3::Packet > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8c3aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8c826c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::SpectrumModel, ns3::empty, ns3::DefaultDeleter< ns3::SpectrumModel > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::SpectrumModel, ns3::empty, ns3::DefaultDeleter< ns3::SpectrumModel > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8c8a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8cd16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::SpectrumSignalParameters, ns3::empty, ns3::DefaultDeleter< ns3::SpectrumSignalParameters > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::SpectrumSignalParameters, ns3::empty, ns3::DefaultDeleter< ns3::SpectrumSignalParameters > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8cd92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8cdfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::SpectrumValue, ns3::empty, ns3::DefaultDeleter< ns3::SpectrumValue > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::SpectrumValue, ns3::empty, ns3::DefaultDeleter< ns3::SpectrumValue > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8d082c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8d0f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::TraceSourceAccessor, ns3::empty, ns3::DefaultDeleter< ns3::TraceSourceAccessor > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::TraceSourceAccessor, ns3::empty, ns3::DefaultDeleter< ns3::TraceSourceAccessor > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8d572c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8d5e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::VendorSpecificValue, ns3::empty, ns3::DefaultDeleter< ns3::VendorSpecificValue > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::VendorSpecificValue, ns3::empty, ns3::DefaultDeleter< ns3::VendorSpecificValue > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8d862c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8d8d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::X2CellInfo, ns3::empty, ns3::DefaultDeleter< ns3::X2CellInfo > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::X2CellInfo, ns3::empty, ns3::DefaultDeleter< ns3::X2CellInfo > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8dd52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8ddc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SimpleRefCount< ns3::X2IfaceInfo, ns3::empty, ns3::DefaultDeleter< ns3::X2IfaceInfo > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SimpleRefCount< ns3::X2IfaceInfo, ns3::empty, ns3::DefaultDeleter< ns3::X2IfaceInfo > > const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8e042c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8e0b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8e502c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8e588c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8e59ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8ea1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8ea88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8eaf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8ed28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8ed84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8edf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8f30ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8f396c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8f3d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa8f3d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa92418c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa92488c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket::SocketErrno')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket::SocketErrno' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa924c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa92732c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9277ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa927f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa92c62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa92cccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa93128c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa93198c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa931aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Socket::SocketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket::SocketType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9351ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9358cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa935fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9394ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa93996c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa939e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa93e30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa93e7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa93ec8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94154c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9415ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94188c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa941f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94528c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9453ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10617: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Recv (params?);
  [param('uint8_t *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9456cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94576c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa945a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa945b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa945fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94906c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94944c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94958c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10630: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::RecvFrom (params?);
  [param('uint8_t *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags'), param('ns3::Address &', 'fromAddress')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94970c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9499cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9499cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa949e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94d34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94d68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94d7ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10643: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Send (params?);
  [param('uint8_t const *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94d9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94dc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94dc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa94df6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9514cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa95162c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10652: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::SendTo (params?);
  [param('uint8_t const *', 'buf'), param('uint32_t', 'size'), param('uint32_t', 'flags'), param('ns3::Address const &', 'address')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9517ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa95194c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa951b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa95528c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9553ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa955a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa955bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa95930c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa959cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa959e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa95d56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa95df0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98a0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98aacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98ac4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98d0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98d24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98d6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98d82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98dc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa98de0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9914ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99164c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa991d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa991e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9962ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99646c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9968cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa996a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa996e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99a02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99aa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99abac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99af0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Socket >, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99e1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa99ebcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9a12ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9a19ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9a548c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9a5c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9a94cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9a9cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9af52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9afd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9afecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9b270c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9b2f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9b676c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9b68ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9ba0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9ba8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9babec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9babec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9be44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9bec6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9bedec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketAddressTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketAddressTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9c34cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9c3e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9c3f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9f53ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9f588c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9f5d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9f822c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9f86ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10836: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9f8f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9fc0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9fc52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9fc6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpTosTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpTosTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9fc9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0034c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa004cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa9f886c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa00b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa00fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa044cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0498c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10882: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0820c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa087cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0894c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpTtlTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpTtlTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa08cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0d60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0d78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa04acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa0ddec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa102cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa1078c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa10c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10928: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa144cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa1464c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa14a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa14c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpv6HopLimitTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpv6HopLimitTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa1902c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa198cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa19a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa19c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa1c0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa1c58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa1ca4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa1cf0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:10974: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2078c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2090c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa20d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa20ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketIpv6TclassTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketIpv6TclassTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2324c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa200ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa23bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa23ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2738c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2784c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa27d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2a1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11020: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2aa4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2abcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2af0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2e1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SocketSetDontFragmentTag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SocketSetDontFragmentTag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2e50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2a24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa2edac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa3218c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa3264c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa32b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa32fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa6c4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa6c96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa6ce2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11074: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa706ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TagBuffer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TagBuffer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa7082c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumInterference const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumInterference const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa70b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa7422c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa746ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa74a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa74a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa74f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa793ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumErrorModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumErrorModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumErrorModel *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11102: Warning: exception TypeLookupError(['ns3::Ptr< ns3::SpectrumErrorModel >', 'ns3::SpectrumErrorModel *'],) in wrapper public: retval? ???::SetErrorModel (params?);
  [param('ns3::Ptr< ns3::SpectrumErrorModel >', 'e')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa796ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa79b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa79e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa7c1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa7c50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa7c82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumModel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa794cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8024c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Bands')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Bands' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8076c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' => failure
'__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11130: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' => failure
'__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11135: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa852ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumModelUid_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModelUid_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8576c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa85f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8944c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8972c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa80fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa89ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8c1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8c8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8ce8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9018c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9090c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AntennaModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AntennaModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AntennaModel *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11190: Warning: exception TypeLookupError(['ns3::Ptr< ns3::AntennaModel >', 'ns3::AntennaModel *'],) in wrapper public: virtual retval? ???::GetRxAntenna (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa956ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa89c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumPropagationLossModel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPropagationLossModel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa8cc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa959ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa95d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9806c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa986ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa989ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPropagationLossModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPropagationLossModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPropagationLossModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa98c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa98f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9c6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9c9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9cd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9f04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumSignalParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9f5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9fb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaa9fe8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaa46ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AntennaModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AntennaModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AntennaModel *' => failure ('')
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception TypeLookupError(['ns3::Ptr< ns3::AntennaModel >', 'ns3::AntennaModel *'],) in wrapper None
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad808c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad858c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad878c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad892c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad8a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad8bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad8d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad8f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaad8eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadb24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadb3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadb54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadb6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadb84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadb9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaa4cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaa4c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadbd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaadd20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' => failure
'__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11278: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >'],) in wrapper public: retval? ???::ConstBandsBegin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' => failure
'__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11283: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::BandInfo const *, std::vector< ns3::BandInfo > >'],) in wrapper public: retval? ???::ConstBandsEnd (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< double const *, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< double const *, std::vector< double > >' => failure
'__gnu_cxx::__normal_iterator< double const *, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11288: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< double const *, std::vector< double > >'],) in wrapper public: retval? ???::ConstValuesBegin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< double const *, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< double const *, std::vector< double > >' => failure
'__gnu_cxx::__normal_iterator< double const *, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11293: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< double const *, std::vector< double > >'],) in wrapper public: retval? ???::ConstValuesEnd (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae26ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae2c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumModelUid_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModelUid_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae2fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< double *, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< double *, std::vector< double > >' => failure
'__gnu_cxx::__normal_iterator< double *, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11312: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< double *, std::vector< double > >'],) in wrapper public: retval? ???::ValuesBegin (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< double *, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< double *, std::vector< double > >' => failure
'__gnu_cxx::__normal_iterator< double *, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11316: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< double *, std::vector< double > >'],) in wrapper public: retval? ???::ValuesEnd (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaddecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaddf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaddb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae86cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae888c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae8a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae8dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaeb10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaeb50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long int' => success ((<class 'pybindgen.typehandlers.inttype.LongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaeb96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long int' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaebe2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaef32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaef7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('long long unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'long long unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaefcac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf31ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae22ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TimeWithUnit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TimeWithUnit' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf390c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit const' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf3a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf3eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf702c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf752c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf76ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf7b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf7cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaaf7e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafa28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafa40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafa56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafa96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafaaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafac4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafaf4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafd52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafd9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaafdeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0038c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0084c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab00d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab051ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab056ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab05b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab05f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0a4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0a9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0ae6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0d34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0d80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab0dccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab111ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab1166c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab11b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab11fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab154cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab1564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab15a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::int64x64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::int64x64_t' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab15f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab4e0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab4e50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab4e68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab4eacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time::Unit')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time::Unit' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab4ec4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TraceFadingLossModel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceFadingLossModel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5104c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab518ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab51a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab51ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab576ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaae84ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab57e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5a16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5a48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TraceSourceAccessor const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TraceSourceAccessor const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5a86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5ad4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5aeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5e02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5e18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5e5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5e72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5e88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5ed2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab5eeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6102c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6118c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab615ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6176c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab618cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6508c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab655cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6574c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab65b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6906c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6952c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:11595: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab69d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab69f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6c36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6cb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6f28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6f74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6f8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6fa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6fb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab6ff6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7510c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7526c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab753cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab757ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab75f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UeManager const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeManager const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7958c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteEnbRrc >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteEnbRrc >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrc *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7c04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7c04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UeManager::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeManager::State' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7c32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7c68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapUser::UeConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapUser::UeConfig' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7c7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7cb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapProvider::CompleteSetupUeParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapProvider::CompleteSetupUeParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7cc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7f0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapUser::ReceivePdcpSduParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapUser::ReceivePdcpSduParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7f26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7f6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab7fbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab840cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab8456c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab84a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab84ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UeManager::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeManager::State' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab8a3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab8a84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab8ad0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xab8ae8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabbf30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabbf7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabbf94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabbfdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestAckParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestAckParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabbff2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc238c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasurementReport')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasurementReport' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc250c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc294c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfigurationCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfigurationCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc2acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc2f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentComplete')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentComplete' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc50ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc54ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc566c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc5aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc5c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc908c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetupCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetupCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc920c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::SnStatusTransferParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::SnStatusTransferParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc97cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc9c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeContextReleaseParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeContextReleaseParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabc9d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcc1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcc36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcc7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabccc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcce0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcf10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcf42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcf8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcfa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabcfecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PdschConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PdschConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd306c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd34ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd362c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd378c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd3bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd3d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd71ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd732c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd746c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd75cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd772c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd7aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabd7f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabdbaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe052c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe0d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe420c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe46cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe484c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe49ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe4dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe4f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe90cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe94ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabe9c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VendorSpecificValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VendorSpecificValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabec62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabecb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf13ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf186c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf1d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf420c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf438c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf44ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf464c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf4a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf4bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf4d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf4e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf826c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xabf89ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::X2CellInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::X2CellInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3104c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3152c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3172c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac31aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3518c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::X2IfaceInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::X2IfaceInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac357cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac35d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3a08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3a3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3a7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3ad8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3d32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac3da0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4124c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4170c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4188c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac41cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac41e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac442ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac44a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4a14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4a94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4ae0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4d2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4d46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4d5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4d9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4db6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac4dccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac5010c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac5088c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Application const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac50ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac5698c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac56cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac591cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac5952c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac5984c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac599cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac59e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac59fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2d5b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac5c8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac6234c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac62a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Asn1Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Asn1Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac6606c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac6694c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac66acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac66f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac6b3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac6b8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac6bd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9b24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12068: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9baec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9bc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 8u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 8u > *' => failure
'std::bitset< 8u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12078: Warning: exception TypeLookupError(['std::bitset< 8u > *'],) in wrapper protected: retval? ???::DeserializeBitset (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 1u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 1u > *' => failure
'std::bitset< 1u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12083: Warning: exception TypeLookupError(['std::bitset< 1u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 2u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 2u > *' => failure
'std::bitset< 2u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12088: Warning: exception TypeLookupError(['std::bitset< 2u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9bfac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 8u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 8u > *' => failure
'std::bitset< 8u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12093: Warning: exception TypeLookupError(['std::bitset< 8u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 10u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 10u > *' => failure
'std::bitset< 10u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12098: Warning: exception TypeLookupError(['std::bitset< 10u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 16u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 16u > *' => failure
'std::bitset< 16u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12103: Warning: exception TypeLookupError(['std::bitset< 16u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 27u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 27u > *' => failure
'std::bitset< 27u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12108: Warning: exception TypeLookupError(['std::bitset< 27u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca20ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 28u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 28u > *' => failure
'std::bitset< 28u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12113: Warning: exception TypeLookupError(['std::bitset< 28u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca242c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 32u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 32u > *' => failure
'std::bitset< 32u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12118: Warning: exception TypeLookupError(['std::bitset< 32u > *'],) in wrapper protected: retval? ???::DeserializeBitstring (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca276c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool *' => success ((<class 'pybindgen.typehandlers.booltype.BoolPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca290c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca28ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int *' => success ((<class 'pybindgen.typehandlers.inttype.IntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2e2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12128: Warning: exception TypeConfigurationError('direction not given',) in wrapper protected: retval? ???::DeserializeChoice (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int *' => success ((<class 'pybindgen.typehandlers.inttype.IntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca516c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12133: Warning: exception TypeConfigurationError('direction not given',) in wrapper protected: retval? ???::DeserializeEnum (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int *' => success ((<class 'pybindgen.typehandlers.inttype.IntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca53ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12138: Warning: exception TypeConfigurationError('direction not given',) in wrapper protected: retval? ???::DeserializeInteger (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca550c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca568c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 0u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 0u > *' => failure
'std::bitset< 0u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12148: Warning: exception TypeLookupError(['std::bitset< 0u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca56cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 1u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 1u > *' => failure
'std::bitset< 1u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12153: Warning: exception TypeLookupError(['std::bitset< 1u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 2u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 2u > *' => failure
'std::bitset< 2u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12158: Warning: exception TypeLookupError(['std::bitset< 2u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 3u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 3u > *' => failure
'std::bitset< 3u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12163: Warning: exception TypeLookupError(['std::bitset< 3u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 4u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 4u > *' => failure
'std::bitset< 4u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12168: Warning: exception TypeLookupError(['std::bitset< 4u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca22cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 5u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 5u > *' => failure
'std::bitset< 5u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12173: Warning: exception TypeLookupError(['std::bitset< 5u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca20cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 6u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 6u > *' => failure
'std::bitset< 6u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12178: Warning: exception TypeLookupError(['std::bitset< 6u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 9u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 9u > *' => failure
'std::bitset< 9u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12183: Warning: exception TypeLookupError(['std::bitset< 9u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 10u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 10u > *' => failure
'std::bitset< 10u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12188: Warning: exception TypeLookupError(['std::bitset< 10u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 11u > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 11u > *' => failure
'std::bitset< 11u > *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12193: Warning: exception TypeLookupError(['std::bitset< 11u > *'],) in wrapper protected: retval? ???::DeserializeSequence (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int *' => success ((<class 'pybindgen.typehandlers.inttype.IntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5a4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12198: Warning: exception TypeConfigurationError('direction not given',) in wrapper protected: retval? ???::DeserializeSequenceOf (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca58cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca50ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 1u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 1u >' => failure
'std::bitset< 1u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12208: Warning: exception TypeLookupError(['std::bitset< 1u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca548c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 2u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 2u >' => failure
'std::bitset< 2u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12213: Warning: exception TypeLookupError(['std::bitset< 2u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca520c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 8u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 8u >' => failure
'std::bitset< 8u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12218: Warning: exception TypeLookupError(['std::bitset< 8u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 10u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 10u >' => failure
'std::bitset< 10u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12223: Warning: exception TypeLookupError(['std::bitset< 10u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 16u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 16u >' => failure
'std::bitset< 16u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12228: Warning: exception TypeLookupError(['std::bitset< 16u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 27u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 27u >' => failure
'std::bitset< 27u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12233: Warning: exception TypeLookupError(['std::bitset< 27u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9b42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 28u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 28u >' => failure
'std::bitset< 28u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12238: Warning: exception TypeLookupError(['std::bitset< 28u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 32u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 32u >' => failure
'std::bitset< 32u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12243: Warning: exception TypeLookupError(['std::bitset< 32u >'],) in wrapper protected: retval? ???::SerializeBitstring (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9ffec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fe2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9ff2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9b3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fe6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9fbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9b3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9b3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 0u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 0u >' => failure
'std::bitset< 0u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12273: Warning: exception TypeLookupError(['std::bitset< 0u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9ffac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 1u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 1u >' => failure
'std::bitset< 1u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12278: Warning: exception TypeLookupError(['std::bitset< 1u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 2u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 2u >' => failure
'std::bitset< 2u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12283: Warning: exception TypeLookupError(['std::bitset< 2u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca536c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 3u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 3u >' => failure
'std::bitset< 3u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12288: Warning: exception TypeLookupError(['std::bitset< 3u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca598c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 4u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 4u >' => failure
'std::bitset< 4u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12293: Warning: exception TypeLookupError(['std::bitset< 4u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 5u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 5u >' => failure
'std::bitset< 5u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12298: Warning: exception TypeLookupError(['std::bitset< 5u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 6u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 6u >' => failure
'std::bitset< 6u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12303: Warning: exception TypeLookupError(['std::bitset< 6u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 9u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 9u >' => failure
'std::bitset< 9u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12308: Warning: exception TypeLookupError(['std::bitset< 9u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca212c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 10u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 10u >' => failure
'std::bitset< 10u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12313: Warning: exception TypeLookupError(['std::bitset< 10u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 11u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 11u >' => failure
'std::bitset< 11u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12318: Warning: exception TypeLookupError(['std::bitset< 11u >'],) in wrapper protected: retval? ???::SerializeSequence (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca296c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeAccessor const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeAccessor const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase const *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacada0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacadb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacadeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca2e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectBase *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca228c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca206c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca538c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca528c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca576c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca5f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xac9f98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacb13ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacb146c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacb190c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacb1dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacb42ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacb46cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacba14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacba4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacba66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacba96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacbac8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacbe02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BooleanChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BooleanChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacbe62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BooleanValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BooleanValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacbeb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc236c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc29cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc2d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc2eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc620c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc652c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc69ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacc6d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacca08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacca20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacca96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackImplBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacce1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacce70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::CallbackImplBase const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::CallbackImplBase const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackImplBase *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaccea4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacced4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd158c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd1c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd1fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd518c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd548c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd57ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd5aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd5e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd5fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Channel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Channel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd930c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd9dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacd9e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1258c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad12a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1616c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1662c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad16e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1a32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1a4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1a90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1aa8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1aeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1f68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataCalculator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataCalculator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad1fccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2458c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad24a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad24f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad273ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad278ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad27d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataOutputCallback &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataOutputCallback &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad27eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2b66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2b7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2bc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2be0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2f2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2f44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2fb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad2fcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad3244c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataOutputInterface const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataOutputInterface const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad32e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xacad72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad378ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataCollector &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataCollector &' => failure
'ns3::DataCollector &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12642: Warning: exception TypeLookupError(['ns3::DataCollector &'],) in wrapper public: virtual retval? ???::Output (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad3b1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad3b34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad3b7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataRateChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataRateChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad3bf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataRateValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataRateValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad3e7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataRate const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataRate const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad3ecac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4138c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad37a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4172c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad41a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataRate')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataRate' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad41d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4704c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4738c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad476cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DataRate const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DataRate const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4784c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad47d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4b54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double *' => success ((<class 'pybindgen.typehandlers.doubletype.DoublePtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4b6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4b86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad4bcac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8048c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DoubleValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DoubleValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad80e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double const &' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8436c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad84a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad84dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad84f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8b28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8b5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8ba6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8bdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8e10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double const &' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8e28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8eacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8ec4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad8edac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad911ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad919ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad91e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9458c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad946ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9484c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad949ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad94b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad94c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9920c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EmptyAttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EmptyAttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9984c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9c28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9c5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9c76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9ca6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9cd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9f0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EnumChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EnumChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9f3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9fbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9fd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xad9feac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada32ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada346c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada35ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada39cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada3b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada3f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada91ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada932c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada992c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xada9ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadad1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadad66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EnumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EnumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadada8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb032c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb096c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb0d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb0e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb31ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb34cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb3ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb3fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb71ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbApplication const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbApplication const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb74ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadb7cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadba04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadba04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadba2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadba40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadba6ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12893: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetS1SapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapEnb *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapEnb *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadba86c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12897: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetS1apSapEnb (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadba9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbacec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbd02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbd1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbd48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbd7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbd90c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12914: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetS1SapUser (params?);
  [param('ns3::EpcEnbS1SapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbda8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbdbec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:12918: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetS1apSapMme (params?);
  [param('ns3::EpcS1apSapMme *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbdd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbApplication::EpsFlowId_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbApplication::EpsFlowId_t const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadf468c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadf4ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadf912c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadf94ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadf9bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadbdb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadfc58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadfc86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadfc86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadfcd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadfcd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadff2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadff60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadff8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadff8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xadffe6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0514c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0514c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae057ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae05b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae05e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0b28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0b3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0ba2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0f34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0f8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae0fdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcMme const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcMme const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1216c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae12d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae12e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1618c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1618c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae165ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1674c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae168ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapEnb *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapEnb *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae169ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13005: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::AddEnb (params?);
  [param('uint16_t', 'ecgi'), param('ns3::Ipv4Address', 'enbS1UAddr'), param('ns3::EpcS1apSapEnb *', 'enbS1apSap')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae167ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae16bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae16eac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13013: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetS11SapMme (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS1apSapMme *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS1apSapMme *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1a02c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13017: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetS1apSapMme (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1a1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1a66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1a7ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13026: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetS11SapSgw (params?);
  [param('ns3::EpcS11SapSgw *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1a96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcSgwPgwApplication const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcSgwPgwApplication const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1e3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::VirtualNetDevice > const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::VirtualNetDevice > const' => failure
'ns3::Ptr< ns3::VirtualNetDevice > const' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13038: Warning: exception TypeLookupError(['ns3::Ptr< ns3::VirtualNetDevice >'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xae1e8ac>
  cls.add_constructor([param('ns3::Ptr< ns3::VirtualNetDevice > const', 'tunDevice'), param('ns3::Ptr< ns3::Socket > const', 's1uSocket')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1eb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1eccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1a6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae16eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1ea0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae1ee4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2216c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapSgw *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapSgw *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2260c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13055: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetS11SapSgw (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2278c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae22c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae22f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae272cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae275cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae275cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2790c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae27aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae27dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2a0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2a0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2a38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2a68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2a96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2a96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2272c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcS11SapMme *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcS11SapMme *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2ae8c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13080: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetS11SapMme (params?);
  [param('ns3::EpcS11SapMme *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2afec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2d18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2d2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTft const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2d54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2ddec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTft::PacketFilter')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft::PacketFilter' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2df6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae5f56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae5f90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTft::Direction')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft::Direction' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae5fa8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae5fa8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae5fdac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae5feec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae6306c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae631cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTft::PacketFilter const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft::PacketFilter const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae6348c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae63c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTft::Direction')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft::Direction' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2aeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae2aeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae63fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae6712c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae6728c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae673ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTft::Direction')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft::Direction' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae676cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae67b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae6c1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae6c84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae6ceec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae705ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae70c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae752ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae7596c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae75fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae796cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae79d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTftClassifier const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTftClassifier const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae7d3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae7dccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8002c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8002c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae804ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8078c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcTft::Direction')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft::Direction' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8078c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae80cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae80e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcUeNas const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcUeNas const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae830cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae83a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae83b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae83e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8818c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8864c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae887cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8892c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae88d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8c1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAsSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAsSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8c9ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13190: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetAsSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8cb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcUeNas::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcUeNas::State' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae8cfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae904ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9096c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae90c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae90fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAsSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAsSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9516c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13213: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetAsSapProvider (params?);
  [param('ns3::LteAsSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae952ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9544c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9588c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae95b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae95ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9906c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9962c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae997ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae99c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae99d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9c10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9ca6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9cbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9cd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9ce8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xae9cfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaecd38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2SapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2SapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaecdb4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13253: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetEpcX2SapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaecdccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed01ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed03ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed070c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed09ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed0d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2SapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2SapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed0e6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13270: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetEpcX2SapUser (params?);
  [param('ns3::EpcX2SapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed0fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverPreparationFailureParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverPreparationFailureParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed416c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed4b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed4c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed86ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::HandoverRequestAckParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::HandoverRequestAckParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed880c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaed0e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaedd1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeddacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::ResourceStatusUpdateParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::ResourceStatusUpdateParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeddc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaee164c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::SnStatusTransferParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::SnStatusTransferParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaee17ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaee61cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeContextReleaseParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeContextReleaseParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaee632c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaee6d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::UeDataParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::UeDataParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaee6e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2HandoverPreparationFailureHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2HandoverPreparationFailureHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeea82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef10ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef126c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef16ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef1b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef1f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef450c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef49cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef4e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef836c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef882c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef8cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13367: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaefc56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaefc6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaefcb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaefccac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeff12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeff2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeff70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeff88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2HandoverRequestAckHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2HandoverRequestAckHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaeffbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaef8c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf0352c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabAdmittedItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabAdmittedItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf0386c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf03dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf0728c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf0774c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabNotAdmittedItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabNotAdmittedItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf07c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3b16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3b62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3baec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3bfac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3f48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13446: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3fcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3fe6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf432cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabAdmittedItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabAdmittedItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4344c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4392c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf43aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf43f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabNotAdmittedItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabNotAdmittedItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf460ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4658c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4670c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2HandoverRequestHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2HandoverRequestHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf46a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4a3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4a54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf3f5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4ac2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4f10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4f5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4fa8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf4ff4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5242c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf528ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf52dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5628c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5674c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf56c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5a0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13544: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5a94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5aacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5af0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabToBeSetupItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5f0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5f58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5f70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5fb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5fcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6316c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf632ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6374c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf638cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf5a22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf63c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6608c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6620c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6656c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf66eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6904c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6948c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6994c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf69e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6d2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6d7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6dc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13619: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf724ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf7266c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf72aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf72c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf760ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf7622c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf7668c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf7680c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf76c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf76dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2LoadInformationHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2LoadInformationHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafad16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafadaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafadc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::CellInformationItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::CellInformationItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaf6dcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb132c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb17ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb1cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb518c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb5b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13687: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb850c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb894c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::CellInformationItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::CellInformationItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb8acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2ResourceStatusUpdateHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2ResourceStatusUpdateHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafb5c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafbc56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafbc6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::CellMeasurementResultItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::CellMeasurementResultItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafbcb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc108c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc154c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc1a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc1ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc63ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc686c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc6d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc920c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13753: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc9a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc9bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafc9f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::CellMeasurementResultItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::CellMeasurementResultItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafcd1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafcd6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafcd82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafcdc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafcde0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2SnStatusTransferHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2SnStatusTransferHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd118c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd1acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd1c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd40ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd434c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd480c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd4ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd81ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd866c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd8b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafd8fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafdc4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13827: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafdcd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafdceac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe030c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::EpcX2Sap::ErabsSubjectToStatusTransferItem >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafdc52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe06cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe084c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe0cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe0e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2UeContextReleaseHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2UeContextReleaseHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe51ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe5aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe5c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe80cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe858c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe8a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xafe8f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb01f3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb01f8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb01fd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02424c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:13896: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb024aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb024c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02908c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02920c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02966c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0297ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb029c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02c48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0242ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02cb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02ccec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02ce4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02f28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02f40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02f56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb02f98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb03312c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EventImpl const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EventImpl const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb03376c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb033fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0374ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0379ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb037e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb03d30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb03db2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb03dfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0404cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb04064c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0407ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb040bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb040d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb040eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0452ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb045a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0480cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb04896c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb04c14c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14026: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb04c76c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14031: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb04cdac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14036: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb05240c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb048d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb04cecc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14046: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb052c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb052dac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14051: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb05434c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0544ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14056: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb054aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0582ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0587ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb058c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb058dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb058f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb05b38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb05b50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb05b66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0543ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb05b9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::GtpuHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::GtpuHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb08f02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb08f8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb08fa4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb08fe8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09436c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09482c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb094cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0971cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09768c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb097b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb097f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09b4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09b9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09be6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09f34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09f80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb09fccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a41ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14182: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a4a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a4b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a4fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a716c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a75cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a774c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a7bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0a7d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ac1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ac32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ac78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ac90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0acd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0aceec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0af36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0af4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0af94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0afacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0aff2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b20cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b252c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b26ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b2b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b2c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::IntegerValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IntegerValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b540c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b58ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b802c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b850c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b880c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b8b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0b8fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0be34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0be68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.LongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0be80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0bebec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c156c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c16ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c184c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c1f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c522c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c596c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c5f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ca26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ca80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ca96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0caacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ff14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ff2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ff94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ffc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10422c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1043ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1044ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb104b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb104cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10936c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1094ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb109b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb109d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10d3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10dc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10dccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14341: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::GetProtocol (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingProtocol *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14346: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv4RoutingProtocol >', 'ns3::Ipv4RoutingProtocol *'],) in wrapper public: virtual retval? ???::GetRoutingProtocol (params?) const = 0;
  is_pure_virtual=True, is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c55cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0c5eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::IpL4Protocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::IpL4Protocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::IpL4Protocol *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14356: Warning: exception TypeLookupError(['ns3::Ptr< ns3::IpL4Protocol >', 'ns3::IpL4Protocol *'],) in wrapper public: virtual retval? ???::Insert (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1091ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb109aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10d84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11236c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11230c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1010cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10122c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10154c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1016cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb10182c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb101c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb101dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb101f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11830c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11862c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11862c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceAddress::InterfaceAddressScope_e' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb118c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ca5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb0ca5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11b04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11b18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11b44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11b76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11ba4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Header')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Header' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11ba4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4Route >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4Route >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11be6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11d1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11d30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11d60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11d76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11d8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11dbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11dd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb11de8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1211ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Ipv4RoutingProtocol >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Ipv4RoutingProtocol >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4RoutingProtocol *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14416: Warning: exception TypeLookupError(['ns3::Ptr< ns3::Ipv4RoutingProtocol >', 'ns3::Ipv4RoutingProtocol *'],) in wrapper public: virtual retval? ???::SetRoutingProtocol (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb121a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb121b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb121f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12134c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12448c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12490c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb124a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb124eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12804c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12876c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12b02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12b4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12bb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12bf0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12f0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb112c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12f44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12f72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12fa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12fd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb12feac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4MaskChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4MaskChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1335ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4MaskValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4MaskValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb133dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1382ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1389ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb138d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb138ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1391ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb13950c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1399ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb139cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17404c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Mask const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Mask const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1741cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4MulticastRoute const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4MulticastRoute const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17458c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb174ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17938c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned int, unsigned int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned int, unsigned int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17982c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb179e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17d32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17d4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17d92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17daac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb17df2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1810cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18122c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18164c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1817cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb181bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb181fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Route const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Route const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1844cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb184d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18824c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18886c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb188c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18b0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18b24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18b68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18b80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18bc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb18bf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1902ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb19042c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb190b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1943cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1948ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb194f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb19932c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1994ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1997ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb199acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb199f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb19c2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb19c60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb19c78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6PrefixChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6PrefixChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb19cf4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6PrefixValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6PrefixValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a07ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a0c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a436c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a470c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a488c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a4b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a4eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a736c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a76ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a79ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Prefix const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Prefix const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a7b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1a7f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1ab86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1abd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1b020c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1b038c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1b04ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1b090c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1b0a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1b0bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1b0f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1e57ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAmc const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAmc const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1e5dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1eb6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1eb8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1eba4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1ebeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1ef02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1ef4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1ef60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1efa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1efbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1eff6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f31ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f32ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f370c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAnr const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAnr const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f3acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f608c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f656c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f66ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAnrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAnrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f6b4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14780: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteAnrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1f6b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fb56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fb6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fbb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAnrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAnrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fbccc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14794: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteAnrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fe3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fee6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteChunkProcessor const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb20486c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fbccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteChunkProcessorCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessorCallback' => failure
'ns3::LteChunkProcessorCallback' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14816: Warning: exception TypeLookupError(['ns3::LteChunkProcessorCallback'],) in wrapper public: virtual retval? ???::AddCallback (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb20764c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb207b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb207c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb207e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb20b28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb20b64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteControlMessage::MessageType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage::MessageType' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb20bf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21044c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteControlMessage::MessageType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage::MessageType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2105cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbMac const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbMac const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21090c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb1fbb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2157cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb215aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb215e0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14866: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetFfMacCschedSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb215fac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14870: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetFfMacSchedSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21816c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14874: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbCmacSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbPhySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21830c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14878: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbPhySapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2184ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14882: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteMacSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21864c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb218b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb218cac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14891: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetFfMacCschedSapProvider (params?);
  [param('ns3::FfMacCschedSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb218e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb218fac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14895: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetFfMacSchedSapProvider (params?);
  [param('ns3::FfMacSchedSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c2cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14899: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbCmacSapUser (params?);
  [param('ns3::LteEnbCmacSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbPhySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c5cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14903: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbPhySapProvider (params?);
  [param('ns3::LteEnbPhySapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c8cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14907: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteMacSapUser (params?);
  [param('ns3::LteMacSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrc const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrc const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb218f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb215e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReportConfigEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReportConfigEutra' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21ca4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21cd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21ceac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21f02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21f18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21f2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21f44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21f74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21f8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21fbac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21fd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2220ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb22222c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb22268c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb22280c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb22296c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb222acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2SapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2SapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb222eac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14946: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetEpcX2SapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAnrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAnrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25806c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14950: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteAnrSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25820c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14954: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbCmacSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCphySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCphySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2583ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14958: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbCphySapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb21c90c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14962: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbRrcSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25834c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14966: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteFfrRrcSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2584ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14970: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteHandoverManagementSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25862c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:14974: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetS1SapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2587ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb258aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::UeManager >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::UeManager >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UeManager *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb258f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb258fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25d42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25d58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25d9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25db6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25dfcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26216c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2625cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2628cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb262c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb262dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb262f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2585ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25844c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26538c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2654ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2659ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2SapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2SapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb265b2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15021: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetEpcX2SapProvider (params?);
  [param('ns3::EpcX2SapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb265cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb265e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26980c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAnrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAnrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26998c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15029: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteAnrSapProvider (params?);
  [param('ns3::LteAnrSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb269b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCmacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCmacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb269c6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15033: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbCmacSapProvider (params?);
  [param('ns3::LteEnbCmacSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb269dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCphySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCphySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb269f4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15037: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbCphySapProvider (params?);
  [param('ns3::LteEnbCphySapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d24c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15041: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbRrcSapUser (params?);
  [param('ns3::LteEnbRrcSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d3cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d52c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15045: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteFfrRrcSapProvider (params?);
  [param('ns3::LteFfrRrcSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d80c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15049: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteHandoverManagementSapProvider (params?);
  [param('ns3::LteHandoverManagementSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26daec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15053: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteMacSapProvider (params?);
  [param('ns3::LteMacSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26dc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcEnbS1SapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcEnbS1SapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb269c4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15057: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetS1SapProvider (params?);
  [param('ns3::EpcEnbS1SapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb269c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26992c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26db8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcProtocolIdeal const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcProtocolIdeal const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb26d42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27316c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27392c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15082: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbRrcSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb273aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb273f6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15091: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetUeRrcSapProvider (params?);
  [param('uint16_t', 'rnti')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27612c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2762ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27670c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27688c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15099: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbRrcSapProvider (params?);
  [param('ns3::LteEnbRrcSapProvider *', 'p')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb276a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb276b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb276ccc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15103: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetUeRrcSapProvider (params?);
  [param('uint16_t', 'rnti'), param('ns3::LteUeRrcSapProvider *', 'p')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcProtocolReal const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcProtocolReal const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb276cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb276a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb269d8c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15119: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbRrcSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27936c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27976c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15128: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetUeRrcSapProvider (params?);
  [param('uint16_t', 'rnti')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27990c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb279a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb279eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27e08c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15136: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbRrcSapProvider (params?);
  [param('ns3::LteEnbRrcSapProvider *', 'p')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27e20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27e36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27e4cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15140: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetUeRrcSapProvider (params?);
  [param('uint16_t', 'rnti'), param('ns3::LteUeRrcSapProvider *', 'p')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27e4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27eccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2821ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb28266c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15162: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb27e52c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15167: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb282cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb282fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb28546c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2855ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb285a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb285bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb285f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2881cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15190: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2888cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb288a4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15195: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb28d16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb28d2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb28d74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb288b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb28dacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb28deec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb29238c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb29250c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb29292c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb292aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb292bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb292fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c516c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c52ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c568c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c580c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c5c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c5d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c822c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c83ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c850c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c88cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c8a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2c8ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15259: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?) = 0;
  is_pure_virtual=True, visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cbb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cbc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cbdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cf1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cf36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cf78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cf8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cfa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrDistributedAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrDistributedAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2cfd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d346c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15291: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d3aac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15296: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d34ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d3f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d712c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15306: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d782c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d79ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15311: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2dc0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2dc54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2dca6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2dcf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e142c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e15ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d3f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e19ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e1b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e1c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e1f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e410c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e424c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e462c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e47ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e4bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e4d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e71cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e734c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e74ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e786c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e79ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e7e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15376: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?);
  visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2eaaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrEnhancedAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrEnhancedAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2eaecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f078c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15393: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f0dcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15398: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f542c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f58ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f5a6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15408: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f918c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f930c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15413: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f58ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f98ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2f9dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2fc2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2fc76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2fc8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2fcd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3001ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb30032c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb30046c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb30084c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3009cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb300b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb300eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33408c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33448c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33460c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb334a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb334c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb334d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33714c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3372cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33774c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15478: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?);
  visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33a38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSoftAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSoftAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33a7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33afec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15495: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33e6ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15500: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb337a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2ea0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2e7fec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15510: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33ebac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33ed0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15515: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3422ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb342b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb342fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3454ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34566c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb345a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb345f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34b0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34b1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb33ee4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb2d3aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34b4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34b7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34b90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34bc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34bdec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34e28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34e40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34e56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34e92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34eaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb34ef2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15580: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?);
  visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb351b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFrHardAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFrHardAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb351f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb35120c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15597: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb355a0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15602: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb355fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb35952c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3596ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15612: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb359dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb359f2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15617: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb35c64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb35cacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb35cfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb35966c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36124c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3613ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36168c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb361b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb361c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb361dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3651cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36534c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36548c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36586c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3659ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb365dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb365f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36740c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36758c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3676ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb367aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb367c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36c0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15682: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?);
  visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36ccec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFrNoOpAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFrNoOpAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb37012c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3709cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15699: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb370fac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15704: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3a466c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3a4b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3a4cac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15714: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb37094c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb36c2ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15719: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3a84ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3a890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3a8e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3ab36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3ab7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3ab96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3abd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3af22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3af3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3af4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3af8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3afa4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3afb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb370b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3afeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b226c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b23cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b284c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b29cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b2b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b2eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b708c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b750c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15784: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?);
  visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3bb14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFrSoftAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFrSoftAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3bb56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3bbe0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15801: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3b764c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15806: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3be62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3beaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3bec6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15816: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c338c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c350c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15821: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c3c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c70ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c75cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c7aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c33ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3beb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3c7f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cb28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cb40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cb54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cb92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cbaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cbbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cbfcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cf16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cf56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cf6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cfb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cfcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3cfe4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d322c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d33ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d382c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15886: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?);
  visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d746c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFrStrictAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFrStrictAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d788c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3db14c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15903: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrRrcSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3db78c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15908: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3dbdcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3de2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3de42c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15918: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrRrcSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3deb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3db8cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15923: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3def4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41124c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< bool >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< bool >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41176c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb411c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41612c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4162ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4166cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb416b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb416ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb416e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41a20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41a38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41a4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41a8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpcX2Sap::LoadInformationParams')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcX2Sap::LoadInformationParams' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41aa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3db18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedDlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41ad4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41e18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41e30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41e46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41e82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41e9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb41ee2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::map< unsigned short, std::vector< double > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::map< unsigned short, std::vector< double > >' => failure
'std::map< unsigned short, std::vector< double > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:15988: Warning: exception TypeLookupError(['std::map< unsigned short, std::vector< double > >'],) in wrapper protected: virtual retval? ???::DoReportUlCqiInfo (params?);
  visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb421a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb421e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42674c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16005: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteHandoverManagementSapProvider (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4210cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d3aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d394c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16015: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteHandoverManagementSapUser (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb426f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42c2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42c42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42c58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHarqPhy const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHarqPhy const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42c8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42f1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42f32c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42f48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42f8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42fa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HarqProcessInfoList_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HarqProcessInfoList_t' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42fe8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb42ffec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43316c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HarqProcessInfoList_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HarqProcessInfoList_t' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43358c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4336ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43384c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb3d3b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb433b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb433f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43612c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43628c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4366ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43682c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43698c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb436dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb436f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4390ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43920c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43936c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4394cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43982c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4399ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb439b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb439c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb439dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43c08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43c9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43cb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43cc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43f0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43f38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43f38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43f80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43f96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43faac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb43fd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4440ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44436c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44436c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4447ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb444aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb444c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb444eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44824c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44856c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44882c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44898c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb448acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb448dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb448f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44b36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44b64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44b98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44baec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb44bd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4820ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48236c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48268c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48298c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb482aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb482c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb482f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4851ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4851ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48590c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb485bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb485bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48908c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4896ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb489b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb489f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48e4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48e9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb48ee6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb49234c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb49280c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb492ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4961ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb49666c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb496b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb496fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4974cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb49798c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb497e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::RadioBearerStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::RadioBearerStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb49e4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::RadioBearerStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::RadioBearerStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb49e9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb49ed6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a224c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a270c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a288c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a2b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a2e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a512c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a544c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a558c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a586c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a59ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a5ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a5e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a5fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4aa44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4aa5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4aaa2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4aabac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4aad0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a71ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcHelper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcHelper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcHelper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a748c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a77ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a796c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a7dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4a7f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b10cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b154c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b16cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b182c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b1cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b1e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b42ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b442c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b458c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b4a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b4b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b4fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b818c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b82ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b876c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b88ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b8d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4b8ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bc04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bc4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bc64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bcaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bcc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bcd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bf22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bf3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bf80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bf98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bfaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4bff6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4f710c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4f756c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4f76ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4f784c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4f7ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHexGridEnbTopologyHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHexGridEnbTopologyHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4fa6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4faf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4fd76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4fdc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteHelper >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteHelper >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHelper *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb4fdeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50426c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5043cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteInterference const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteInterference const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50470c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb504fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50534c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5056ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50598c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb505cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50c04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50c04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50c52c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50c7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50cb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50f30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50f7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50fc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb50ffac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb51530c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb51564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcp const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcp const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb51590c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5161ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5169ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16399: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLtePdcpSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb516b2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16403: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteRlcSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcp::Status')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcp::Status' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb516ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb51918c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb51964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5197cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb519c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcpSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcpSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb519dac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16420: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLtePdcpSapUser (params?);
  [param('ns3::LtePdcpSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb519f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb519eec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16424: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteRlcSapProvider (params?);
  [param('ns3::LteRlcSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb516aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5230ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5233ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcp::Status')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcp::Status' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb52350c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5237cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb523bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb523eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb52582c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb525b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePdcp::Status const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcp::Status const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb52872c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb528bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb516c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhy const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhy const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb52d64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb53214c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb53246c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5328ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb532dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56552c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56580c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb565dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb565f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5683ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56852c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb568c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb568dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56a4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56ac2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56d16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PacketBurst >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PacketBurst >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketBurst *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56d68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56da2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb56deec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57208c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5724ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57266c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb572acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb572f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5755ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57598c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb575b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57b22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57b3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57baac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57bd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57e10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57e3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57e74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57ea2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb57ed8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5840ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58440c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58458c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5849ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb584ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRadioBearerInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRadioBearerInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58802c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58888c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LtePdcp >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LtePdcp >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePdcp *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb588e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteRlc >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteRlc >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlc *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58c5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlc const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlc const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58cacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58f40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58fbcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16604: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteMacSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58fd4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16608: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteRlcSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb58feec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5953cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59554c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5959ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb595b2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16621: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteMacSapProvider (params?);
  [param('ns3::LteMacSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb595cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb595e0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16625: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteRlcSapUser (params?);
  [param('ns3::LteRlcSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb595f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59910c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb595acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5993cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59952c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59968c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5997ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb599d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59d06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59d5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59d8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcAm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcAm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb59ddac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5a068c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5a0e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d356c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d36cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d382c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d398c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d3fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d62cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d688c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d6b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d814c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcSm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcSm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d84ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5d8e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e060c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e0d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e442c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e458c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e46ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e484c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e4e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e918c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e974c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e9a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5e9fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcTm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcTm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5ea3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5eacec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f14cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f1bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f1d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f1e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f1fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f592c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f5eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f41ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f47ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRlcUm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRlcUm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5f4b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5fd4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb5fdc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb60238c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6024ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb60264c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6027ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb602dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6060ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6066ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb60698c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb606f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteSignalingRadioBearerInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSignalingRadioBearerInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb60a70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb60ac4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::LogicalChannelConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::LogicalChannelConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb60c0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb60c74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb63d1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb63d68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb63db4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb63de2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6421ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb64248c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6427ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb642acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb642fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6454ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb645a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AntennaModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AntennaModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AntennaModel *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16868: Warning: exception TypeLookupError(['ns3::Ptr< ns3::AntennaModel >', 'ns3::AntennaModel *'],) in wrapper public: virtual retval? ???::GetRxAntenna (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb64860c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6488ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb648c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumSignalParametersDataFrame >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumSignalParametersDataFrame >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumSignalParametersDataFrame *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb648f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb64b2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb64b58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb64b8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteHarqPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteHarqPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHarqPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb64bbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb64bf2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65022c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65058c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6508cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb650c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6560ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AntennaModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AntennaModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AntennaModel *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16901: Warning: exception TypeLookupError(['ns3::Ptr< ns3::AntennaModel >', 'ns3::AntennaModel *'],) in wrapper public: retval? ???::SetAntenna (params?);
  [param('ns3::Ptr< ns3::AntennaModel >', 'a')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6563ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PacketBurst >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PacketBurst >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketBurst *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65620c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65620c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6569cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb656ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb656e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65b08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65b38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65b78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyTxEndCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyTxEndCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65b90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65bd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyRxDataEndErrorCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyRxDataEndErrorCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb65becc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66032c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyRxDataEndOkCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyRxDataEndOkCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6604ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6608ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyRxCtrlEndOkCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyRxCtrlEndOkCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb660a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb660eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyRxCtrlEndErrorCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyRxCtrlEndErrorCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66304c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66348c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyRxPssCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyRxPssCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66360c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb663a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyDlHarqFeedbackCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyDlHarqFeedbackCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb663bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb663f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LtePhyUlHarqFeedbackCallback')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LtePhyUlHarqFeedbackCallback' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6661ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6665ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteSpectrumPhy::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy::State' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66676c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb666bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb666d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66a1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66a48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66a7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66aacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66ae2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66e12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66e48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66e76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66eacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb66edac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67112c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteChunkProcessor >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteChunkProcessor >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteChunkProcessor *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67140c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67176c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6718ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb671a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb671bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb671d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb671e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67402c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6741ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67430c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67446c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67476c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6748cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb674d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb674eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6794ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb67984c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6799cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteSpectrumSignalParameters const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumSignalParameters const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6ae14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6ae80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PacketBurst >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PacketBurst >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketBurst *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6aeccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteSpectrumSignalParametersDataFrame const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumSignalParametersDataFrame const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6b35cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6b3c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6b3fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6b768c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PacketBurst >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PacketBurst >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketBurst *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6bd02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteSpectrumSignalParametersDlCtrlFrame const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumSignalParametersDlCtrlFrame const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6bd8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6bdf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6c130c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6c198c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6c516c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteSpectrumSignalParametersUlSrsFrame const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumSignalParametersUlSrsFrame const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6c5b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6c824c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6c85ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteStatsCalculator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteStatsCalculator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6c8bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6cc4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6cc66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6ccacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6ccc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d00cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d024c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d06ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d0b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d0cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d416c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d462c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d4aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d4c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d4dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d920c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d938c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d97ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d996c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d9acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6d9eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6dc08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6dc4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6dc66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6dc7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6dcfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6df18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6df94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6dfacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6dfc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e43cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e454c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e46ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e4e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e4fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e712c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e78ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb6e7a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb71c20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb71c38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb71cb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb71cccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeMac const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeMac const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7213ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb721cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb721e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7242ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb724aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb724c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb724d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7271ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17177: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteMacSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72734c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17181: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUeCmacSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7274ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17185: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUePhySapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72738c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72780c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72798c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17194: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUeCmacSapUser (params?);
  [param('ns3::LteUeCmacSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb727b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb727c6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17198: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUePhySapProvider (params?);
  [param('ns3::LteUePhySapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhy const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhy const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb727dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72c7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72cacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::DlCqiLteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::DlCqiLteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlCqiLteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72cf0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72cf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb73054c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb730b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb73424c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb72794c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb645f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7347ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb73490c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb734ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7381ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb738a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb738dcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17250: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUeCphySapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb738f6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17254: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUePhySapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb73e12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb73e5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhy::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhy::State' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb73eaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb73ef4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xaca572c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb738fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb25836c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74264c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteUePowerControl >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteUePowerControl >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePowerControl *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb742bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb742f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74528c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74560c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74578c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb745f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74810c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7487ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74890c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb748bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74c18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74c2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74ca0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb74cb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7502ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb75040c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb750b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb750fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteHarqPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteHarqPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHarqPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7542cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb75462c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7547ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17343: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUeCphySapUser (params?);
  [param('ns3::LteUeCphySapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb75492c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePhySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb754a8c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17347: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUePhySapUser (params?);
  [param('ns3::LteUePhySapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb754c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb754d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7871ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78732c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78780c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78798c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb787e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb787fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78c46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78c5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78c74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78cb6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78ce4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78f44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78f72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78f9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78fb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb78fcac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUePowerControl const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePowerControl const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79328c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb793b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb793fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7964cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79698c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb796b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb796f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79974c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb799e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79f30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79f48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79f96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79faec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb79ffcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a416c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a464c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a4b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a4c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a710c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a728c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a76ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a786c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a7ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7a7e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7ac2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int16_t' => success ((<class 'pybindgen.typehandlers.inttype.Int16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7ac44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7ac8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int16_t' => success ((<class 'pybindgen.typehandlers.inttype.Int16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7aca2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7ace8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b002c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b048c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b060c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b0a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b0bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrc const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrc const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b306c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAsSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAsSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b38ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17483: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetAsSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b3a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b3dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b628c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b674c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b6c0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17507: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUeCmacSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b6dac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17511: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUeCphySapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b6f2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17515: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUeRrcSapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bb14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrc::State')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrc::State' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bb68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bbb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bbf0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bf4ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bf9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteAsSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteAsSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bfb2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17544: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetAsSapUser (params?);
  [param('ns3::LteAsSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7b6d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bfbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bfecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteMacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteMacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c104c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17552: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteMacSapProvider (params?);
  [param('ns3::LteMacSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c11cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCmacSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCmacSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c132c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17556: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUeCmacSapProvider (params?);
  [param('ns3::LteUeCmacSapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c14ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeCphySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeCphySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c160c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17560: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUeCphySapProvider (params?);
  [param('ns3::LteUeCphySapProvider *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c17ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c192c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17564: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUeRrcSapUser (params?);
  [param('ns3::LteUeRrcSapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c1acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c1c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c1f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7f96ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcProtocolIdeal const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcProtocolIdeal const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7f9cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7fd5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7c102c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17594: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUeRrcSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bffcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7fd92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7fda8c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17603: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUeRrcSapProvider (params?);
  [param('ns3::LteUeRrcSapProvider *', 'p')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7fdc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteUeRrc >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteUeRrc >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrc *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7fdecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcProtocolReal const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcProtocolReal const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80118c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb801a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80620c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17623: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteUeRrcSapUser (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80638c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80684c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteUeRrcSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrcSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8069cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17632: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteUeRrcSapProvider (params?);
  [param('ns3::LteUeRrcSapProvider *', 'p')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb806b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteUeRrc >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteUeRrc >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrc *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb806e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8068cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80b3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80b8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80bf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80e34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80e4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80e7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80eaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb80ef8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8112ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81162c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Mac48Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Mac48Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8117ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacStatsCalculator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacStatsCalculator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb811b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8154cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8157ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81590c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb815a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb815bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb815d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb815e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb815fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81816c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81846c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MacStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MacStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81872c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81872c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb818a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb818b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb818ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb818e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb818f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81b10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81b26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81b56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81b86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81bcac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81e18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81e30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81e76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81e8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81ed4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb81eecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82404c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8241ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82430c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82446c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8245cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82472c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb824a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MacStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MacStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb824cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb824cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82602c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82618c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8262ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82644c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8265ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MibLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MibLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82682c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MasterInformationBlock')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MasterInformationBlock' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb826f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82a42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MasterInformationBlock')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MasterInformationBlock' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82a5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MobilityModel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb7bfb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82acac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82ae2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82d2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82d5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82d92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb82ddec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb83314c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb83348c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb83394c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb833e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb833f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb83748c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb837d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb837ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb86f56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb86fc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8732ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb87346c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb873e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8783ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb87852c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb87b18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb87b86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Channel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Channel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Channel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb87f0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb87f6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb87fdcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8854ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb88564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb885ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb885e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb88868c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb888c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb88d10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb88d80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb88df0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89262c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb892d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89544c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb895b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb895e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb895e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89b1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89b6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89b9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89b9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89bcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89be8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89f38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89f50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89fb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb89fd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8a240c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8a258c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8a2c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8a2fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8a554c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8a56cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8aa48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8aa60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8d93ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NixVector const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8d9dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8df30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8df48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8df5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8dfa0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8dfb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NixVector >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NixVector >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e318c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e352c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e36ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e384c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e3cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e3e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e72ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e776c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e7c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t *' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e7dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8e7f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NoOpHandoverAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NoOpHandoverAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8ea2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8eabec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:17991: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteHandoverManagementSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8ee24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8ee70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8ee88c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18001: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteHandoverManagementSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8ead0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f228c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f270c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f288c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f29ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Node const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f2d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f55cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f5aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Application >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Application >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8f5d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fa10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fa3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fa74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Application >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Application >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Application *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fad8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fae0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fe3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fe46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fe8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8fed6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90124c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90170c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb901bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9050ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18077: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: retval? ???::RegisterDeviceAdditionListener (params?);
  [param('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'listener')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9058cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb905a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90a2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9053cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9053cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90a48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18085: Warning: exception TypeLookupError(['ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'],) in wrapper public: retval? ???::UnregisterDeviceAdditionListener (params?);
  [param('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'listener')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90ab4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90ac8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90d66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9101ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double const' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb910bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb910fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb90aa6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb94156c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb941a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb941eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb94608c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9461ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb94634c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb94672c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9468ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb946a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb946b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb946f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb94a6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactoryChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactoryChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb8ee8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactoryValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactoryValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb94e62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb94eb0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9511ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95158c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95170c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb951a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb951d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9581ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95852c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95886c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ObjectFactory const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ObjectFactory const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9589ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Packet const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95b1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95b6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95bb4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18196: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xb95bb2c>
  cls.add_constructor([param('uint8_t const *', 'buffer'), param('uint32_t', 'size'), param('bool', 'magic')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t const *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95bdac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18198: Warning: exception TypeConfigurationError('direction not given',) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xb95bbac>
  cls.add_constructor([param('uint8_t const *', 'buffer'), param('uint32_t', 'size')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95bfac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95f2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95f62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95f7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95fc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95fe0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96230c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96248c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96296c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb962aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb962f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9650ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketMetadata::ItemIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketMetadata::ItemIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb95bb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96582c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb965bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb965d4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18239: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb965ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream *' => failure
'std::ostream *' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18244: Warning: exception TypeLookupError(['std::ostream *'],) in wrapper public: retval? ???::CopyData (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9682ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96838c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96862c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96892c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb968d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96d26c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96d3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ByteTagIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ByteTagIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96d8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NixVector >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NixVector >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb96decc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PacketTagIterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketTagIterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb97028c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb965bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb97068c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb970b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb970f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9751ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb97564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9757cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb975c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb975e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9792ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18313: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::Print (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb97954c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18318: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::PrintByteTags (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9797ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18323: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: retval? ???::PrintPacketTags (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb979a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb979f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb97992c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9795cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9af3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9af54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9af84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Header &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Header &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9af9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9afe2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9affac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b248c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Trailer &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Trailer &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b260c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b2a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Tag &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Tag &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b2c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b50ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t *' => success ((<class 'pybindgen.typehandlers.inttype.UInt8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b526c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18360: Warning: exception TypeConfigurationError('direction not given',) in wrapper public: retval? ???::Serialize (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b53ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NixVector >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NixVector >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NixVector *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b56ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b59ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b5eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b942c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b98ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9b9dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bd28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bd40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bd56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bd6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bdaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bdc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bdd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9bdeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9c02ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9c0a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PfFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PfFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9c40cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9c496c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9c4e2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18429: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9c748c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18434: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9c7acc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18439: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9cc12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9cc5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9cc76c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18449: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9cce6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ccfec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18454: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d11ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d134c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18459: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d18cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d1a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d1b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyRxStatsCalculator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyRxStatsCalculator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d1e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d374c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyReceptionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyReceptionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d38cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d3d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PhyRxStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PhyRxStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyRxStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d704c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d704c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyReceptionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyReceptionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d732c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d760c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d7a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d7f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9dd12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9dd2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9dd70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9dd88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ddcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyReceptionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyReceptionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9dde6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e22cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PhyRxStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PhyRxStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyRxStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e25ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e25ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyReceptionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyReceptionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e28cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyStatsCalculator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyStatsCalculator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e2b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e538c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e584c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e5d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e91ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e96ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e982c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e998c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e9aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e9c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9e9dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ed12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PhyStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PhyStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ed40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ed40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ed72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ed88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ed9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9edb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9ede4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9edfac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2328c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba235ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PhyStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PhyStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2386c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2386c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba23b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba23e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2712c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2728c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba273ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2754c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba276ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba279ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PhyStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PhyStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba27c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba27c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba27f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2a0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2a22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2a50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2a66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2a96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2aacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2ae0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2af8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyTxStatsCalculator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTxStatsCalculator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2d30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2dc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyTransmissionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTransmissionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba2ddcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3022c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PhyTxStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PhyTxStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTxStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3050c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3050c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyTransmissionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTransmissionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3082c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba30b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba30f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3442c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba348ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba34a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba34ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3806c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba384cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyTransmissionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTransmissionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3864c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba38a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PhyTxStatsCalculator >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PhyTxStatsCalculator >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTxStatsCalculator *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba38d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba38d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PhyTransmissionStatParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PhyTransmissionStatParameters' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3b0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PointToPointEpcHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PointToPointEpcHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3b30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xb9d106c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3bc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3bc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3e0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3e0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3e68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3e9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3ec6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba3ec6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4122c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba414ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba414ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba41acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba41e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4518c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4558c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba456cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba45d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4a64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4ac0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4f0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PointerChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PointerChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4faac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba4ffec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PointerValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PointerValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba543cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba54eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba593ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba5974c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba598cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba59bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba5e0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba5e44c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba5e78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba5eacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba5edcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::PssFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PssFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba950cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba9598c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba95e4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18732: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba994ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18737: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba99aec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18742: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba9e14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba9e60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba9e78c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18752: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba9ee8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa102c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18757: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa172c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa18ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18762: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa108c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa1a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa1bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RachPreambleLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RachPreambleLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa1e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa44ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa496c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa4aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RadioBearerStatsCalculator const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RadioBearerStatsCalculator const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa4e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa874c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa8c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa8dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaa8f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaac08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaac1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaac34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaac4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaac7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaac94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaacaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaacc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaacd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaacecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab024c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab0a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab0b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab0ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab310c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab328c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab33ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab380c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab3a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab3b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab3fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab748c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab794c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab7b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbab7ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabb10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabb28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabb3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabb80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabb98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabbaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabbf0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabf0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabf20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabf62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabf7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabf90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbabfd2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac220c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac26cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac2b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac2d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac2e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac62ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac642c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac658c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac69ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac6bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac6d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac916c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac962c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac9aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac9d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbac9e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbacc2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbacc42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbacc58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbacc9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaccb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbaccc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbad00cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbad024c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbad03ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbad07cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbad094c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbad0aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbad0ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0906c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb094cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb09aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb09c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0c0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0c22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0c68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0c80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0c96c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0cacc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0cc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0cd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb0ceec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1022c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb103ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1050c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1066c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb107cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1092c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RarLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RarLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb10bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb154ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RarLteControlMessage::Rar')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RarLteControlMessage::Rar' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1566c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb15aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::RarLteControlMessage::Rar >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::RarLteControlMessage::Rar >' => failure
'std::_List_const_iterator< ns3::RarLteControlMessage::Rar >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18944: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::RarLteControlMessage::Rar >'],) in wrapper public: retval? ???::RarListBegin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::_List_const_iterator< ns3::RarLteControlMessage::Rar >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::_List_const_iterator< ns3::RarLteControlMessage::Rar >' => failure
'std::_List_const_iterator< ns3::RarLteControlMessage::Rar >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18949: Warning: exception TypeLookupError(['std::_List_const_iterator< ns3::RarLteControlMessage::Rar >'],) in wrapper public: retval? ???::RarListEnd (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1b30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1b48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RarLteControlMessage::Rar const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RarLteControlMessage::Rar const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1bbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1f0cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BuildRarListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BuildRarListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1b14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb1fe4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2332c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb237ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumChannel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumChannel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumChannel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb23acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb23e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2612c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2648c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2676c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::MobilityModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::MobilityModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MobilityModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb26c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2a18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2a70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AntennaModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AntennaModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AntennaModel *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19014: Warning: exception TypeLookupError(['ns3::Ptr< ns3::AntennaModel >', 'ns3::AntennaModel *'],) in wrapper public: virtual retval? ???::GetRxAntenna (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2f2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2f58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2f8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumModel const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumModel const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2fc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2ff6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3210c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3256c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb32a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb32eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb353cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3554c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb2adac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xba9ef0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb35acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3922c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb396ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19064: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb39d2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19069: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3d38c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19074: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3d9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3de8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb4202c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19084: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb39d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb4252c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19089: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb42acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb42c4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19094: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb4536c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb454ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb4564c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcAsn1Header const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcAsn1Header const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb4596c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7a2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7a78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7a90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7ad0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::DrbToAddMod > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::DrbToAddMod > *' => success ((<class 'pybindgen.container.ThisContainerPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7ae6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19119: Warning: exception TypeConfigurationError('transfer_ownership parameter was not given',) in wrapper protected: retval? ???::DeserializeDrbToAddModList (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::LogicalChannelConfig *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::LogicalChannelConfig *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d1cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19124: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeLogicalChannelConfig (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7ae4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasConfig *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasConfig *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7ad0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19129: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeMeasConfig (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb42b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb39d6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19134: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeMeasResults (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysicalConfigDedicated *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysicalConfigDedicated *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d44c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19139: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializePhysicalConfigDedicated (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t *' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntPtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t *' => success ((<class 'pybindgen.typehandlers.inttype.Int8PtrParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d86c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19149: Warning: exception TypeConfigurationError('direction not given',) in wrapper protected: retval? ???::DeserializeQoffsetRange (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RachConfigCommon *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RachConfigCommon *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dc2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19154: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeRachConfigCommon (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7ddac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommon *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommon *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7deec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19159: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeRadioResourceConfigCommon (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommonSib *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommonSib *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f1ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19164: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeRadioResourceConfigCommonSib (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f4ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19169: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeRadioResourceConfigDedicated (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::SrbToAddMod > *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::SrbToAddMod > *' => success ((<class 'pybindgen.container.ThisContainerPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f7ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19174: Warning: exception TypeConfigurationError('transfer_ownership parameter was not given',) in wrapper protected: retval? ???::DeserializeSrbToAddModList (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7fa0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1 *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7fb6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19179: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeSystemInformationBlockType1 (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7fd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType2 *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType2 *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7fe6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19184: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeSystemInformationBlockType2 (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7ffec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ThresholdEutra *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ThresholdEutra *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb881ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19189: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper protected: retval? ???::DeserializeThresholdEutra (params?);
  visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8834c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7fe0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7fbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19209: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper protected: virtual retval? ???::Print (params?) const;
  is_const=True, visibility='protected', is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7f20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19214: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper protected: retval? ???::Print (params?) const;
  is_const=True, visibility='protected')
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::DrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::DrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::LogicalChannelConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::LogicalChannelConfig' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7de8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7deec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasConfig' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7deac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysicalConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysicalConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7daec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7daec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7daac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7deec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RachConfigCommon')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RachConfigCommon' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7da6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommon')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommon' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7daac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigCommonSib')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigCommonSib' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7db8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::SrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::SrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7dd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType2')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType2' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7da4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ThresholdEutra')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ThresholdEutra' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcDlCcchMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcDlCcchMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7de8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb7d2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb42bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8814c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19311: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb889ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb88aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb88c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb88b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcDlDcchMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcDlDcchMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb88aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8a20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8a36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8a6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8804c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19343: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8ad8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8aecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8afcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8e0ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcUlCcchMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcUlCcchMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8aecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8e58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8e6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8ea4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8ef0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19375: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9478c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb948ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb94a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9492c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcUlDcchMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcUlDcchMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb948ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb970cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9722c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb975ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb8ef6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19407: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb97d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb97eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb97fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9a0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Sib1LteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Sib1LteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb97f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9a6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9aa8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::SystemInformationBlockType1')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::SystemInformationBlockType1' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9ac0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumChannel const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumChannel const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9e36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9e8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PropagationLossModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PropagationLossModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PropagationLossModel *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19445: Warning: exception TypeLookupError(['ns3::Ptr< ns3::PropagationLossModel >', 'ns3::PropagationLossModel *'],) in wrapper public: virtual retval? ???::AddPropagationLossModel (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba33ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb9ed2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba368c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumPropagationLossModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumPropagationLossModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumPropagationLossModel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba392c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba3c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba3f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PropagationDelayModel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PropagationDelayModel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PropagationDelayModel *' => failure ('')
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19465: Warning: exception TypeLookupError(['ns3::Ptr< ns3::PropagationDelayModel >', 'ns3::PropagationDelayModel *'],) in wrapper public: virtual retval? ???::SetPropagationDelayModel (params?) = 0;
  is_pure_virtual=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba77ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumSignalParameters >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumSignalParameters >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumSignalParameters *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba7acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SrsCqiRntiVsp const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SrsCqiRntiVsp const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba7dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbac2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbac7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StringChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StringChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbacf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::StringValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::StringValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbba716c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbaf88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbaff6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbb232c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbb24ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbb27ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbb2acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbb2f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbec2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbec62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const &' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbec7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TdBetFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TdBetFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbecb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf04ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf09ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19538: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf0fec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19543: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf364c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19548: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf3c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf816c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf82ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19558: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf89ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf8b6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19563: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbfc28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbf896c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19568: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbfc48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbfc5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbfc74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TdMtFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TdMtFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbfc9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbfcfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbff4cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19589: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbbffb0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19594: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc0316c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19599: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc037ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc03c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc03dec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19609: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc03fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc0814c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19614: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc086cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc0882c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19619: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc08e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc08fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc0c16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TdTbfqFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TdTbfqFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc0c48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc0cdcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc102ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19640: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc108ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19645: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc081ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19650: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc10e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1532c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc154ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19660: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc15bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc15d2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19665: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1844c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc185cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19670: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc18ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc18e4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc18fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TimeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TimeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1c6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc154ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbb3dfac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1c9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1cb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1ce4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1e18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1e48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1e78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1eaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Time const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Time const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1ec0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TtaFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TtaFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc1eeec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc2270c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc22bcc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19724: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc2522c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19729: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc256cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19734: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc25d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc5c1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc5c36c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19744: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc5ca6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc5cbec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19749: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6030c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6048c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:19754: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc60b8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc60d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc60e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeIdChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeIdChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc5cc4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeIdValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeIdValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6640c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc668ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6a02c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6a38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6a50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6a80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6ab2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6afec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6d34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6d68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc6d80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UintegerValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UintegerValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7106c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc714ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc71bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc71f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7510c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7540c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7572c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc75bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc75f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7928c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t const &' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7940c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlDciLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlDciLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc797ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7d14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7d5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7d76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2DChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2DChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc7deac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2DValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2DValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8070c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc80bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc842cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8466c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc847ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc84aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc84e0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc872cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8760c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8794c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector2D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector2D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc87acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3DChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3DChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8b2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3DValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3DValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8baec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8f04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8f6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8fa4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8fbcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc8fecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc9320c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc936ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc939ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc93d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Vector3D const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Vector3D const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc93eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::VirtualNetDevice const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::VirtualNetDevice const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc9928c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc99bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc99d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbccd9cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd00cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Channel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Channel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Channel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd090c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd0f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd462c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd4d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd4e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd952c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd966c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcd9eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcdc48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcdc92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcdcd4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbce076c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbce0e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbce558c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbce5c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcea3ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcea68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcea68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcea9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbceab2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice::PacketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice::PacketType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbceaccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcef08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcef36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcef36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcef66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcefaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcefd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcefd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf40cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf426c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf476c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf48cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf4f6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf70ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf77ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf794c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf7dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcf7f2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcfa64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcfa7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcfac0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcfaf6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcfd50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbcfd66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd0344c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd035ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd0736c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::Address const &, ns3::Address const &, unsigned short, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::Address const &, ns3::Address const &, unsigned short, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd074cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd07f8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd3512c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd3558c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd35cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::A2A4RsrqHandoverAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::A2A4RsrqHandoverAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd396ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbc2522c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20095: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteHandoverManagementSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd3d40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd3d8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd3da4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20105: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteHandoverManagementSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4216c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd425ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd42a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd42bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd42d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::A3RsrpHandoverAlgorithm const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::A3RsrpHandoverAlgorithm const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd450cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4596c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20132: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteHandoverManagementSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd3d8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd45f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteHandoverManagementSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHandoverManagementSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4a1ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20142: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteHandoverManagementSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4a8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4ad2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4d1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4d34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasResults')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasResults' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4d4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AddressChecker const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AddressChecker const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd4db6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AddressValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AddressValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd503cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd508ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd50d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5314c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd532ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd535ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd538cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd53cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::AttributeChecker const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::AttributeChecker const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeChecker *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5802c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5834c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd584cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::BsrLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::BsrLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5888c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacCeListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacCeListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5d1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5d68c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MacCeListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MacCeListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5d80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqaFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqaFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd5db4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd604ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6096c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20229: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd60fac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20234: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6460c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20239: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd64c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6b12c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6b2ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20249: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6b9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6bb2c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20254: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6bd0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6be6c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20259: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6e40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6e56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6e6cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlCqiLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlCqiLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd6e94c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda128c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda172c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CqiListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CqiListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda18ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda1bec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda554c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda59ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlDciListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlDciListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda5b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlHarqFeedbackLteControlMessage const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlHarqFeedbackLteControlMessage const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda5c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda954c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda99ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda9b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EmuEpcHelper const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EmuEpcHelper const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbda9eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdad80c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdadaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdadaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcTft >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcTft >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcTft *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdadf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdadf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdaf54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdaf88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdafb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdafb4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb310c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb33cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb33cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb3a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb3d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb910c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4InterfaceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4InterfaceContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb950c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDeviceContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDeviceContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb964c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdb9ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdbd3ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdbdccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc12ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc174c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FdBetFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FdBetFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc1aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc568c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc5b4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20382: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc91ac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20387: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc97ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20392: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc9aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdc9fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdcd14c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20402: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdcd84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdcd9cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20407: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd10ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd126c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20412: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd196c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd1aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd1c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FdMtFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FdMtFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd702c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd78cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdcd98c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20433: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdd7c0c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20438: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdda1ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20443: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdda88c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbddad4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbddaecc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20453: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe0e60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe0e78c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20458: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe0eeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1204c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20463: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdda30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbdcd8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe123ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FdTbfqFfMacScheduler const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FdTbfqFfMacScheduler const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1262c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe12c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1512c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20484: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacCschedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1576c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20489: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetFfMacSchedSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe15dac>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20494: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: virtual retval? ???::GetLteFfrSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1a40c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1a8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacCschedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacCschedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1aa4c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20504: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacCschedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1516c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1aeec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20509: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetFfMacSchedSapUser (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1d50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteFfrSapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteFfrSapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1d68c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20514: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: virtual retval? ???::SetLteFfrSapProvider (params?);
  is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1dd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1df0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2008c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::HandoverPreparationInfoHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::HandoverPreparationInfoHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe203ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe20cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe20e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::AsConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::AsConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe232cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::HandoverPreparationInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::HandoverPreparationInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2376c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe23c0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1d58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20550: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbd459ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::HandoverPreparationInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::HandoverPreparationInfo' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe23ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteDataRadioBearerInfo const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteDataRadioBearerInfo const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2832c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2866c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe28aac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::EpsBearer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpsBearer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2b16c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2b7ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2be8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::LogicalChannelConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::LogicalChannelConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2e54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe1af4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RlcConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RlcConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe2efcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe3466c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbPhy const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhy const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe34c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe3876c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe38a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe38d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< double >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< double >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe38eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe3b24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe3b56c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe3b6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::FfMacSchedSapProvider::SchedUlCqiInfoReqParameters' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe3ba4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe3bbac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe4020c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe40a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::UlDciLteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::UlDciLteControlMessage >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe40d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe4554c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int8_t' => success ((<class 'pybindgen.typehandlers.inttype.Int8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe45c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe4812c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe4884c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe48cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe7e1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe7e34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe7ea6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe7ebcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8330c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8346c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe835cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe83b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe83eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCphySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCphySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8744c>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20667: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbCphySapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbPhySapProvider *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhySapProvider *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe875ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20671: Warning: exception TypeConfigurationError('Either caller_owns_return or self.reference_existing_object must be given',) in wrapper public: retval? ???::GetLteEnbPhySapProvider (params?);
  [])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8778c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8744c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe87dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8a2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteSpectrumPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteSpectrumPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteSpectrumPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8a8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8ac8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8af8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8e30c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlDciLteControlMessage')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlDciLteControlMessage' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8e48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8e8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteControlMessage >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteControlMessage >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteControlMessage *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe8ebac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9118c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe912ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe91acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe91c2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe952ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9544c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe95b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::SpectrumValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe95ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9840c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage > >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9856c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe98aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::PacketBurst >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::PacketBurst >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::PacketBurst *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe98dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9f14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9f2cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9f7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< int >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< int >' => success ((<class 'pybindgen.container.ThisContainerParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9f92c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbe9fe0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteHarqPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteHarqPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteHarqPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea210c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea246c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbCphySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbCphySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea25ec>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20753: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbCphySapUser (params?);
  [param('ns3::LteEnbCphySapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea276c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteEnbPhySapUser *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhySapUser *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea28cc>))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20757: Warning: exception TypeConfigurationError('Missing transfer_ownership option',) in wrapper public: retval? ???::SetLteEnbPhySapUser (params?);
  [param('ns3::LteEnbPhySapUser *', 's')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea2a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea2bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea2fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea816c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea85cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('double')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'double' => success ((<class 'pybindgen.typehandlers.doubletype.DoubleParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea874c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea8bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeab08c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeab54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeab84c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbea28cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeabfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb082c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t const' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb098c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb30ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Channel >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Channel >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Channel *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb390c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb3f0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t const' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb808c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb878c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb8e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeb8fec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbebc6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbebcd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeed4ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbeed60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbef21ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbef28ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbef2fcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbef76ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbef7dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbefc6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbefccac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Node >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Node >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbefcfec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf0058c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf00c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf00dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf04bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv4Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv4Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf04cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf093ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ipv6Address')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ipv6Address' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf094ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf09b4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf09cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf0ca8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf0cd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf0cd6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf110cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1126c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1176c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf11e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1716c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf174cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf17cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1a4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1a7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1a7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1aaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteUeMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteUeMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1e18c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteUeRrc >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteUeRrc >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUeRrc *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1e6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteUePhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteUePhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteUePhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf1ebcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::EpcUeNas >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::EpcUeNas >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::EpcUeNas *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf2310c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf234ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf2396c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf23e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf23fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf2642c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf268ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf26a6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf26ecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteEnbNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteEnbNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf291cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteEnbNetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteEnbNetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbNetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf296ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf29a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::MeasurementReportHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::MeasurementReportHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf5746c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf57d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf57e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasurementReport')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasurementReport' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf5a2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf5a78c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf5ac4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21019: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf5e4cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasurementReport')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasurementReport' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf5e64c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionReconfigurationCompleteHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionReconfigurationCompleteHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf5e98c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf622ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf6246c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfigurationCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfigurationCompleted' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf628ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf62d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf6622c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf666ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21055: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf66f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfigurationCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfigurationCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf690ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionReconfigurationHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionReconfigurationHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf6680c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf69acc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf69c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::DrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::DrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf6e0ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf6e5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf6eb8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf6efac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf7552c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MeasConfig')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MeasConfig' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf759ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf75e8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::MobilityControlInfo')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::MobilityControlInfo' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf7934c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysicalConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysicalConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf797ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf79c8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf7d14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf7d5ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::SrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::SrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf7da6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf7dfac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8048c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8094c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21145: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf851cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReconfiguration')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReconfiguration' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8534c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionReestablishmentCompleteHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionReestablishmentCompleteHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8090c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf85d2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf85eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentComplete')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentComplete' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8930c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf897ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf89c6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8b14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21181: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8b9ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentComplete')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentComplete' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8bb2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionReestablishmentHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionReestablishmentHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8be6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8b1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8e70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishment')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishment' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8eaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbf8ef8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfc544c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfc590c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfc5dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21222: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfc864c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishment')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishment' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfc87cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionReestablishmentRejectHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionReestablishmentRejectHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfc8b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfcd46c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfcd5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentReject' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfcd7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfcdc2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd110c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21253: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd196c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentReject' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd1aec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionReestablishmentRequestHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionReestablishmentRequestHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd1e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd678c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd690c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentRequest' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd6d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReestablishmentCause')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReestablishmentCause' => success ((<class 'pybindgen.enum.ThisEnumReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfda20c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::ReestabUeIdentity')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::ReestabUeIdentity' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfd128c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfda8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfdad6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21294: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfdd5ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReestablishmentRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReestablishmentRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfdd76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionRejectHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionRejectHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfddaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe240c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe258c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReject' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe29cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe2e6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe634c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21325: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe690c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionReject')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionReject' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe6a8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionReleaseHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionReleaseHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe6dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfea72c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfea8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRelease')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRelease' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfeacec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfed1ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfed66c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21356: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfedecc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRelease')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRelease' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff206c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionRequestHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionRequestHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff23ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff2a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff2bcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRequest' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff2f4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 8u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 8u >' => failure
'std::bitset< 8u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21382: Warning: exception TypeLookupError(['std::bitset< 8u >'],) in wrapper public: retval? ???::GetMmec (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::bitset< 32u >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::bitset< 32u >' => failure
'std::bitset< 32u >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21387: Warning: exception TypeLookupError(['std::bitset< 32u >'],) in wrapper public: retval? ???::GetMtmsi (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff688c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff6d4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbffb22c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21402: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbffba8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionRequest')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionRequest' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbffbc0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionSetupCompleteHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionSetupCompleteHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbffe06c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbff674c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbffe54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetupCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetupCompleted' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbffe82c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbffecac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc00118c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc00164c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21438: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc001eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetupCompleted')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetupCompleted' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03a04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::RrcConnectionSetupHeader const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::RrcConnectionSetupHeader const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03a38c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03accc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Buffer::Iterator')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Buffer::Iterator' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03ae4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::DrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::DrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03d2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< unsigned char >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< unsigned char >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xbfe648c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetup')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetup' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03d6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::PhysicalConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::PhysicalConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03da4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RadioResourceConfigDedicated')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RadioResourceConfigDedicated' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc03deec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0413ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::LteRrcSap::SrbToAddMod >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::LteRrcSap::SrbToAddMod >' => success ((<class 'pybindgen.container.ThisContainerReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04186c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc041dac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04428c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04474c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::ostream &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::ostream &' => failure
'std::ostream &' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21504: Warning: exception TypeLookupError(['std::ostream &'],) in wrapper public: virtual retval? ???::Print (params?) const;
  is_const=True, is_virtual=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc044fac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::LteRrcSap::RrcConnectionSetup')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteRrcSap::RrcConnectionSetup' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04814c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::TypeId')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::TypeId' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0447ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc048b0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04b2ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04b5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04b5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04b90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteEnbMac >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteEnbMac >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbMac *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc04bf8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteEnbPhy >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteEnbPhy >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbPhy *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0514cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::LteEnbRrc >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::LteEnbRrc >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::LteEnbRrc *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0519ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc051d8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05626c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05672c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0568ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc056d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05b1ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint8_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint8_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05b36c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05b7cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05bc8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05be0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05e28c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05e74c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05e8cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc05ed2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06220c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06238c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0627ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc062cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc062e2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0652ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Config::MatchContainer const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Config::MatchContainer const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc065cac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< ns3::Ptr< ns3::Object > > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< ns3::Ptr< ns3::Object > > const &' => success ((<class 'pybindgen.container.ThisContainerRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06a50c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::vector< std::string > const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::vector< std::string > const &' => success ((<class 'pybindgen.container.ThisContainerRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06a8ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06aaec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21621: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >'],) in wrapper public: retval? ???::Begin (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06d34c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06d54c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06d6ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06afcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06d14c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06d9ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06de0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06df8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06f10c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06f58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06f70c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::CallbackBase const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::CallbackBase const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06f86c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for '__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >' => failure
'__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21642: Warning: exception TypeLookupError(['__gnu_cxx::__normal_iterator< ns3::Ptr< ns3::Object > const, std::vector< ns3::Ptr< ns3::Object > > >'],) in wrapper public: retval? ???::End (params?) const;
  is_const=True)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Object >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Object >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc07332c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0733cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc07380c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc07396c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc073dcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0a82ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0a876c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0a88ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::AttributeValue const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::AttributeValue const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc06fcec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Implementation const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Implementation const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0a88cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0ab2ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0ab42c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0ab5cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0aba6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0abbec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0abd8c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0ae24c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Fnv1a const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Fnv1a const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0ae60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0aef4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b30ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b328c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b372c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b38ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b3a4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b3eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Hash32 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Hash32 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b62cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Hash32Function_ptr')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Hash32Function_ptr' => failure
'ns3::Hash::Hash32Function_ptr' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21717: Warning: exception TypeLookupError(['ns3::Hash::Hash32Function_ptr'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xc0b682c>
  cls.add_constructor([param('ns3::Hash::Hash32Function_ptr', 'hp')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b6a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b6b6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0b6d0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0ba1cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Hash64 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Hash64 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0ba58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Hash64Function_ptr')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Hash64Function_ptr' => failure
'ns3::Hash::Hash64Function_ptr' did not match
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:21734: Warning: exception TypeLookupError(['ns3::Hash::Hash64Function_ptr'],) in wrapper <pybindgen.cppmethod.CppConstructor object at 0xc0baaec>
  cls.add_constructor([param('ns3::Hash::Hash64Function_ptr', 'hp')])
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0baccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0bae2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0bafcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0be48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0be60c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0be7ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0bec4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Hash::Function::Murmur3 const &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Hash::Function::Murmur3 const &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0bee2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c26ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c286c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c2a0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c2eac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('char const *')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'char const *' => success ((<class 'pybindgen.typehandlers.stringtype.CStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c704c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t const')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t const' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c71ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c768c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7c4c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cd1ac>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7bac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cda4c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cd90c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::SpectrumValue >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::SpectrumValue >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::SpectrumValue *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d216c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cd6cc>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cdaac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::UlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::UlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cdf4c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cdc6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::DlInfoListElement_s')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::DlInfoListElement_s' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7e0c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7cec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::list< ns3::Ptr< ns3::LteControlMessage >, std::allocator< ns3::Ptr< ns3::LteControlMessage > > >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::list< ns3::Ptr< ns3::LteControlMessage >, std::allocator< ns3::Ptr< ns3::LteControlMessage > > >' => failure
'std::list< ns3::Ptr< ns3::LteControlMessage >, std::allocator< ns3::Ptr< ns3::LteControlMessage > > >' did not match
/home/zwz/ns-3.22/ns-3.22/bindings/python/ns3modulegen_core_customizations.py:247: Warning: ***** Unable to register callback; parameter 'std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > > arg1' error (used in ns3::Callback< void, std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >): TypeLookupError(['std::list< ns3::Ptr< ns3::LteControlMessage >, std::allocator< ns3::Ptr< ns3::LteControlMessage > > >'],)
  Warning)
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => failure
'ns3::Callback< void, std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' did not match
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Callback< void, std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Callback< void, std::list<ns3::Ptr<ns3::LteControlMessage>, std::allocator<ns3::Ptr<ns3::LteControlMessage> > >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >' => success ((<class 'ns3modulegen_core_customizations.PythonCallbackParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d23ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cd58c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d296c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0da62c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d29cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0da6ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d28cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice::PacketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice::PacketType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0da7ac>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7ccc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e216c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e23cc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0dab0c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e234c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7dec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0da8ec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d204c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0da76c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0da7ec>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0c7eec>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::NetDevice >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::NetDevice >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e20ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Packet const >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Packet const >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Packet *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e21ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned short')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned short' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0dafcc>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e24ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e210c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NetDevice::PacketType')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NetDevice::PacketType' => success ((<class 'pybindgen.enum.ThisEnumParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e23cc>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cdeac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0da76c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cd48c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e224c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned int' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d296c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d2b2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e22ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0cdc8c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d2a2c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr< ns3::Socket >')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr< ns3::Socket >' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Socket *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0xb6e4bfcc>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0e24ac>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Address &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Address &' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc0d204c>))
Flushing to  <pybindgen.typehandlers.codesink.MemoryCodeSink object at 0x87df62c>
/home/zwz/ns-3.22/pybindgen-0.17.0.886/pybindgen/cppclass.py:3849: UserWarning: Returning shared pointers is dangerous!  The C++ API should be redesigned to avoid this situation.
  warnings.warn("Returning shared pointers is dangerous!"
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20842: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::AddLinkChangeCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > callback);
  is_virtual=True)
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20887: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::SetReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > cb);
  is_virtual=True)
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:20902: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::SetPromiscReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty > cb);
  is_virtual=True)
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::AddLinkChangeCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > callback);
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::SetPromiscReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty > cb);
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::SetReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > cb);
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcEnbS1SapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::EpcEnbS1SapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcEnbS1SapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::EpcEnbS1SapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcS11SapMme cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::EpcS11SapMme'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcS11SapSgw cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::EpcS11SapSgw'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcS1apSapEnb cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::EpcS1apSapEnb'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcS1apSapMme cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::EpcS1apSapMme'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcX2SapProvider cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::EpcX2SapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcX2SapUser cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::EpcX2SapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::FfMacCschedSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::FfMacCschedSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::FfMacCschedSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::FfMacCschedSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::FfMacSchedSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::FfMacSchedSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::FfMacSchedSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::FfMacSchedSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteAnrSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteAnrSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteAnrSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteAnrSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteAsSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteAsSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteAsSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteAsSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteEnbCmacSapProvider cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteEnbCmacSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteEnbCmacSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteEnbCmacSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteEnbCphySapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteEnbCphySapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteEnbPhySapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteEnbPhySapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteEnbPhySapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteEnbPhySapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteFfrRrcSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteFfrRrcSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteFfrRrcSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteFfrRrcSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteFfrSapProvider cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteFfrSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteGlobalPathlossDatabase cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteGlobalPathlossDatabase'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteHandoverManagementSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteHandoverManagementSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteHandoverManagementSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteHandoverManagementSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteMacSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteMacSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteMacSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteMacSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LtePdcpSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LtePdcpSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LtePdcpSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LtePdcpSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteRlcSapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteRlcSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteRlcSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteRlcSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUeCmacSapProvider cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteUeCmacSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUeCmacSapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteUeCmacSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUeCphySapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteUeCphySapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUeCphySapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteUeCphySapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUePhySapProvider cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteUePhySapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUePhySapUser cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteUePhySapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUeRrcSapProvider cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteUeRrcSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteUeRrcSapUser cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteUeRrcSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xa2ea04c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc7a3d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc7a3d6c>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint16_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint16_t' => success ((<class 'pybindgen.typehandlers.inttype.UInt16Return'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0xc7a3d6c>))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteEnbRrcSapProvider cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteEnbRrcSapProvider'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteEnbRrcSapUser cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteEnbRrcSapUser'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::Asn1Header cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::Asn1Header'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::EpcHelper cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::EpcHelper'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::FfMacScheduler cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::FfMacScheduler'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteFfrAlgorithm cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteFfrAlgorithm'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteHandoverAlgorithm cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::LteHandoverAlgorithm'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LtePhy cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LtePhy'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::LteRlc cannot be constructed (class has pure virtual methods)',) in wrapper <pybindgen.CppClass 'ns3::LteRlc'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:16929: Warning: exception CodeGenerationError('wrapper could not be generated',) in wrapper public: void ns3::LteSpectrumPhy::SetLtePhyRxCtrlEndOkCallback (ns3::LtePhyRxCtrlEndOkCallback c);
  [param('ns3::LtePhyRxCtrlEndOkCallback', 'c')])
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18560: Warning: exception SkipWrapper('overloading: removed the wrapper public: void ns3::PhyStatsCalculator::ReportUeSinr (ns3::Ptr< ns3::PhyStatsCalculator > phyStats, std::string path, uint16_t cellId, uint16_t rnti, double sinrLinear); because its method flags are different from existing ones.',) in wrapper public: void ns3::PhyStatsCalculator::ReportUeSinr (ns3::Ptr< ns3::PhyStatsCalculator > phyStats, std::string path, uint16_t cellId, uint16_t rnti, double sinrLinear);
  is_static=True)
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:18551: Warning: exception SkipWrapper('overloading: removed the wrapper public: void ns3::PhyStatsCalculator::ReportInterference (ns3::Ptr< ns3::PhyStatsCalculator > phyStats, std::string path, uint16_t cellId, ns3::Ptr< ns3::SpectrumValue > interference); because its method flags are different from existing ones.',) in wrapper public: void ns3::PhyStatsCalculator::ReportInterference (ns3::Ptr< ns3::PhyStatsCalculator > phyStats, std::string path, uint16_t cellId, ns3::Ptr< ns3::SpectrumValue > interference);
  is_static=True)
bindings/python/ns3modulegen-modular.py:30: UserWarning: exception CodeGenerationError('ns3::RrcAsn1Header cannot be constructed (have pure virtual methods but no helper class)',) in wrapper <pybindgen.CppClass 'ns3::RrcAsn1Header'>
  warnings.warn("exception %r in wrapper %s" % (exception, wrapper))
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2113: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::AddLinkChangeCallback (ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > callback);
  register_Ns3LteNetDevice_methods(root_module, root_module['ns3::LteNetDevice'])
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2113: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::SetReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > cb);
  register_Ns3LteNetDevice_methods(root_module, root_module['ns3::LteNetDevice'])
/home/zwz/ns-3.22/ns-3.22/src/lte/bindings/modulegen__gcc_ILP32.py:2113: Warning: exception NotSupportedError('Reverse wrappers for ns3::Callback<...> types (python using callbacks defined in C++) not implemented.',) in wrapper public: virtual void ns3::LteNetDevice::SetPromiscReceiveCallback (ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty > cb);
  register_Ns3LteNetDevice_methods(root_module, root_module['ns3::LteNetDevice'])
