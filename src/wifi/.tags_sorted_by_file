!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
callback_classes	bindings/callbacks_list.py	/^callback_classes = [$/;"	v
ErrorHandler	bindings/modulegen__gcc_ILP32.py	/^class ErrorHandler(pybindgen.settings.ErrorHandler):$/;"	c
handle_error	bindings/modulegen__gcc_ILP32.py	/^    def handle_error(self, wrapper, exception, traceback_):$/;"	m	class:ErrorHandler
main	bindings/modulegen__gcc_ILP32.py	/^def main():$/;"	f
module_init	bindings/modulegen__gcc_ILP32.py	/^def module_init():$/;"	f
register_Ns3AarfWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AarfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AarfcdWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AarfcdWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AddressChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3AddressValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Address_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Address_methods(root_module, cls):$/;"	f
register_Ns3AdhocWifiMac_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AdhocWifiMac_methods(root_module, cls):$/;"	f
register_Ns3AmpduSubframeHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AmpduSubframeHeader_methods(root_module, cls):$/;"	f
register_Ns3AmpduTag_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AmpduTag_methods(root_module, cls):$/;"	f
register_Ns3AmrrWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AmrrWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AmsduSubframeHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AmsduSubframeHeader_methods(root_module, cls):$/;"	f
register_Ns3ApWifiMac_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ApWifiMac_methods(root_module, cls):$/;"	f
register_Ns3AparfWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AparfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3ArfWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ArfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AsciiTraceHelperForDevice_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AsciiTraceHelperForDevice_methods(root_module, cls):$/;"	f
register_Ns3AsciiTraceHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AsciiTraceHelper_methods(root_module, cls):$/;"	f
register_Ns3AthstatsHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AthstatsHelper_methods(root_module, cls):$/;"	f
register_Ns3AthstatsWifiTraceSink_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AthstatsWifiTraceSink_methods(root_module, cls):$/;"	f
register_Ns3AttributeAccessor_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AttributeAccessor_methods(root_module, cls):$/;"	f
register_Ns3AttributeChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AttributeChecker_methods(root_module, cls):$/;"	f
register_Ns3AttributeConstructionListItem_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AttributeConstructionListItem_methods(root_module, cls):$/;"	f
register_Ns3AttributeConstructionList_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AttributeConstructionList_methods(root_module, cls):$/;"	f
register_Ns3AttributeValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3AttributeValue_methods(root_module, cls):$/;"	f
register_Ns3Bar_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Bar_methods(root_module, cls):$/;"	f
register_Ns3BlockAckAgreement_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3BlockAckAgreement_methods(root_module, cls):$/;"	f
register_Ns3BlockAckCache_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3BlockAckCache_methods(root_module, cls):$/;"	f
register_Ns3BlockAckManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3BlockAckManager_methods(root_module, cls):$/;"	f
register_Ns3BufferIterator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3BufferIterator_methods(root_module, cls):$/;"	f
register_Ns3Buffer_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Buffer_methods(root_module, cls):$/;"	f
register_Ns3ByteTagIteratorItem_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ByteTagIteratorItem_methods(root_module, cls):$/;"	f
register_Ns3ByteTagIterator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ByteTagIterator_methods(root_module, cls):$/;"	f
register_Ns3ByteTagListIteratorItem_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ByteTagListIteratorItem_methods(root_module, cls):$/;"	f
register_Ns3ByteTagListIterator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ByteTagListIterator_methods(root_module, cls):$/;"	f
register_Ns3ByteTagList_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ByteTagList_methods(root_module, cls):$/;"	f
register_Ns3CallbackBase_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CallbackBase_methods(root_module, cls):$/;"	f
register_Ns3CallbackChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CallbackChecker_methods(root_module, cls):$/;"	f
register_Ns3CallbackImplBase_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CallbackImplBase_methods(root_module, cls):$/;"	f
register_Ns3CallbackValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CallbackValue_methods(root_module, cls):$/;"	f
register_Ns3CapabilityInformation_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CapabilityInformation_methods(root_module, cls):$/;"	f
register_Ns3CaraWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CaraWifiManager_methods(root_module, cls):$/;"	f
register_Ns3Channel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Channel_methods(root_module, cls):$/;"	f
register_Ns3Chunk_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Chunk_methods(root_module, cls):$/;"	f
register_Ns3ConstantRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ConstantRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ConstantRateWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ConstantRateWifiManager_methods(root_module, cls):$/;"	f
register_Ns3ConstantSpeedPropagationDelayModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ConstantSpeedPropagationDelayModel_methods(root_module, cls):$/;"	f
register_Ns3Cost231PropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Cost231PropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3CtrlBAckRequestHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CtrlBAckRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3CtrlBAckResponseHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3CtrlBAckResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3DcaTxop_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3DcaTxop_methods(root_module, cls):$/;"	f
register_Ns3DcfManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3DcfManager_methods(root_module, cls):$/;"	f
register_Ns3DcfState_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3DcfState_methods(root_module, cls):$/;"	f
register_Ns3Dcf_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Dcf_methods(root_module, cls):$/;"	f
register_Ns3DeterministicRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3DeterministicRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3DoubleValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3DoubleValue_methods(root_module, cls):$/;"	f
register_Ns3DsssErrorRateModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3DsssErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3EdcaTxopN_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3EdcaTxopN_methods(root_module, cls):$/;"	f
register_Ns3EmpiricalRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3EmpiricalRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3EmptyAttributeValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3EmptyAttributeValue_methods(root_module, cls):$/;"	f
register_Ns3Empty_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Empty_methods(root_module, cls):$/;"	f
register_Ns3ErlangRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ErlangRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ErrorRateModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3EventId_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3EventId_methods(root_module, cls):$/;"	f
register_Ns3EventImpl_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3EventImpl_methods(root_module, cls):$/;"	f
register_Ns3ExponentialRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ExponentialRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ExtendedSupportedRatesIE_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ExtendedSupportedRatesIE_methods(root_module, cls):$/;"	f
register_Ns3FixedRssLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3FixedRssLossModel_methods(root_module, cls):$/;"	f
register_Ns3FriisPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3FriisPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3GammaRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3GammaRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionFnv1a_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HashFunctionFnv1a_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionHash32_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HashFunctionHash32_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionHash64_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HashFunctionHash64_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionMurmur3_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HashFunctionMurmur3_methods(root_module, cls):$/;"	f
register_Ns3HashImplementation_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HashImplementation_methods(root_module, cls):$/;"	f
register_Ns3Hasher_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Hasher_methods(root_module, cls):$/;"	f
register_Ns3Header_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Header_methods(root_module, cls):$/;"	f
register_Ns3HtCapabilitiesChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HtCapabilitiesChecker_methods(root_module, cls):$/;"	f
register_Ns3HtCapabilitiesValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HtCapabilitiesValue_methods(root_module, cls):$/;"	f
register_Ns3HtCapabilities_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HtCapabilities_methods(root_module, cls):$/;"	f
register_Ns3HtWifiMacHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3HtWifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3IdealWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3IdealWifiManager_methods(root_module, cls):$/;"	f
register_Ns3Int64x64_t_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Int64x64_t_methods(root_module, cls):$/;"	f
register_Ns3InterferenceHelperSnrPer_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3InterferenceHelperSnrPer_methods(root_module, cls):$/;"	f
register_Ns3InterferenceHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3InterferenceHelper_methods(root_module, cls):$/;"	f
register_Ns3Ipv4AddressChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv4AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv4AddressValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv4AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv4Address_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv4Address_methods(root_module, cls):$/;"	f
register_Ns3Ipv4MaskChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv4MaskChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv4MaskValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv4MaskValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv4Mask_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv4Mask_methods(root_module, cls):$/;"	f
register_Ns3Ipv6AddressChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv6AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv6AddressValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv6AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv6Address_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv6Address_methods(root_module, cls):$/;"	f
register_Ns3Ipv6PrefixChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv6PrefixChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv6PrefixValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv6PrefixValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv6Prefix_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ipv6Prefix_methods(root_module, cls):$/;"	f
register_Ns3ItuR1411LosPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ItuR1411LosPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3ItuR1411NlosOverRooftopPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ItuR1411NlosOverRooftopPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3JakesProcess_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3JakesProcess_methods(root_module, cls):$/;"	f
register_Ns3JakesPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3JakesPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3Kun2600MhzPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Kun2600MhzPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3LogDistancePropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3LogDistancePropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3LogNormalRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3LogNormalRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3Mac48AddressChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Mac48AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3Mac48AddressValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Mac48AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Mac48Address_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Mac48Address_methods(root_module, cls):$/;"	f
register_Ns3MacLowBlockAckEventListener_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MacLowBlockAckEventListener_methods(root_module, cls):$/;"	f
register_Ns3MacLowDcfListener_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MacLowDcfListener_methods(root_module, cls):$/;"	f
register_Ns3MacLowTransmissionListener_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MacLowTransmissionListener_methods(root_module, cls):$/;"	f
register_Ns3MacLowTransmissionParameters_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MacLowTransmissionParameters_methods(root_module, cls):$/;"	f
register_Ns3MacLow_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MacLow_methods(root_module, cls):$/;"	f
register_Ns3MacRxMiddle_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MacRxMiddle_methods(root_module, cls):$/;"	f
register_Ns3MatrixPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MatrixPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3MgtAddBaRequestHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtAddBaRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtAddBaResponseHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtAddBaResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtAssocRequestHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtAssocRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtAssocResponseHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtAssocResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtBeaconHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtBeaconHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtDelBaHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtDelBaHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtProbeRequestHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtProbeRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtProbeResponseHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MgtProbeResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3MinstrelWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MinstrelWifiManager_methods(root_module, cls):$/;"	f
register_Ns3MobilityModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MobilityModel_methods(root_module, cls):$/;"	f
register_Ns3MpduAggregator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MpduAggregator_methods(root_module, cls):$/;"	f
register_Ns3MpduStandardAggregator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MpduStandardAggregator_methods(root_module, cls):$/;"	f
register_Ns3MsduAggregator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3MsduAggregator_methods(root_module, cls):$/;"	f
register_Ns3NakagamiPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NakagamiPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3NetDeviceContainer_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NetDeviceContainer_methods(root_module, cls):$/;"	f
register_Ns3NetDevice_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NetDevice_methods(root_module, cls):$/;"	f
register_Ns3NistErrorRateModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NistErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3NixVector_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NixVector_methods(root_module, cls):$/;"	f
register_Ns3NodeContainer_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NodeContainer_methods(root_module, cls):$/;"	f
register_Ns3Node_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Node_methods(root_module, cls):$/;"	f
register_Ns3NormalRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NormalRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3NqosWifiMacHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3NqosWifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3ObjectAggregateIterator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ObjectAggregateIterator_methods(root_module, cls):$/;"	f
register_Ns3ObjectBase_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ObjectBase_methods(root_module, cls):$/;"	f
register_Ns3ObjectDeleter_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ObjectDeleter_methods(root_module, cls):$/;"	f
register_Ns3ObjectFactoryChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ObjectFactoryChecker_methods(root_module, cls):$/;"	f
register_Ns3ObjectFactoryValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ObjectFactoryValue_methods(root_module, cls):$/;"	f
register_Ns3ObjectFactory_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ObjectFactory_methods(root_module, cls):$/;"	f
register_Ns3Object_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Object_methods(root_module, cls):$/;"	f
register_Ns3OkumuraHataPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3OkumuraHataPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3OnoeWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3OnoeWifiManager_methods(root_module, cls):$/;"	f
register_Ns3OriginatorBlockAckAgreement_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3OriginatorBlockAckAgreement_methods(root_module, cls):$/;"	f
register_Ns3OutputStreamWrapper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3OutputStreamWrapper_methods(root_module, cls):$/;"	f
register_Ns3PacketMetadataItemIterator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PacketMetadataItemIterator_methods(root_module, cls):$/;"	f
register_Ns3PacketMetadataItem_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PacketMetadataItem_methods(root_module, cls):$/;"	f
register_Ns3PacketMetadata_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PacketMetadata_methods(root_module, cls):$/;"	f
register_Ns3PacketTagIteratorItem_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PacketTagIteratorItem_methods(root_module, cls):$/;"	f
register_Ns3PacketTagIterator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PacketTagIterator_methods(root_module, cls):$/;"	f
register_Ns3PacketTagListTagData_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PacketTagListTagData_methods(root_module, cls):$/;"	f
register_Ns3PacketTagList_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PacketTagList_methods(root_module, cls):$/;"	f
register_Ns3Packet_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Packet_methods(root_module, cls):$/;"	f
register_Ns3ParetoRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ParetoRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ParfWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ParfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3PcapFileWrapper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PcapFileWrapper_methods(root_module, cls):$/;"	f
register_Ns3PcapFile_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PcapFile_methods(root_module, cls):$/;"	f
register_Ns3PcapHelperForDevice_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PcapHelperForDevice_methods(root_module, cls):$/;"	f
register_Ns3PcapHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PcapHelper_methods(root_module, cls):$/;"	f
register_Ns3PropagationCache__Ns3JakesProcess_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PropagationCache__Ns3JakesProcess_methods(root_module, cls):$/;"	f
register_Ns3PropagationDelayModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PropagationDelayModel_methods(root_module, cls):$/;"	f
register_Ns3PropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3PropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3QosTag_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3QosTag_methods(root_module, cls):$/;"	f
register_Ns3QosWifiMacHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3QosWifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3RandomPropagationDelayModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3RandomPropagationDelayModel_methods(root_module, cls):$/;"	f
register_Ns3RandomPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3RandomPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3RandomVariableStream_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3RandomVariableStream_methods(root_module, cls):$/;"	f
register_Ns3RangePropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3RangePropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3RateInfo_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3RateInfo_methods(root_module, cls):$/;"	f
register_Ns3RegularWifiMac_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3RegularWifiMac_methods(root_module, cls):$/;"	f
register_Ns3RraaWifiManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3RraaWifiManager_methods(root_module, cls):$/;"	f
register_Ns3SequentialRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SequentialRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3AttributeAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeAccessor__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3AttributeAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeAccessor__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3AttributeChecker_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeChecker__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3AttributeChecker_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeChecker__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3AttributeValue_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeValue__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3AttributeValue_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeValue__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3CallbackImplBase_Ns3Empty_Ns3DefaultDeleter__lt__ns3CallbackImplBase__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3CallbackImplBase_Ns3Empty_Ns3DefaultDeleter__lt__ns3CallbackImplBase__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3EventImpl_Ns3Empty_Ns3DefaultDeleter__lt__ns3EventImpl__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3EventImpl_Ns3Empty_Ns3DefaultDeleter__lt__ns3EventImpl__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3HashImplementation_Ns3Empty_Ns3DefaultDeleter__lt__ns3HashImplementation__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3HashImplementation_Ns3Empty_Ns3DefaultDeleter__lt__ns3HashImplementation__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3InterferenceHelperEvent_Ns3Empty_Ns3DefaultDeleter__lt__ns3InterferenceHelperEvent__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3InterferenceHelperEvent_Ns3Empty_Ns3DefaultDeleter__lt__ns3InterferenceHelperEvent__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3NixVector_Ns3Empty_Ns3DefaultDeleter__lt__ns3NixVector__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3NixVector_Ns3Empty_Ns3DefaultDeleter__lt__ns3NixVector__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3Object_Ns3ObjectBase_Ns3ObjectDeleter_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3Object_Ns3ObjectBase_Ns3ObjectDeleter_methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3OutputStreamWrapper_Ns3Empty_Ns3DefaultDeleter__lt__ns3OutputStreamWrapper__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3OutputStreamWrapper_Ns3Empty_Ns3DefaultDeleter__lt__ns3OutputStreamWrapper__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3Packet_Ns3Empty_Ns3DefaultDeleter__lt__ns3Packet__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3Packet_Ns3Empty_Ns3DefaultDeleter__lt__ns3Packet__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3TraceSourceAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3TraceSourceAccessor__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3TraceSourceAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3TraceSourceAccessor__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3WifiInformationElement_Ns3Empty_Ns3DefaultDeleter__lt__ns3WifiInformationElement__gt___methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SimpleRefCount__Ns3WifiInformationElement_Ns3Empty_Ns3DefaultDeleter__lt__ns3WifiInformationElement__gt___methods(root_module, cls):$/;"	f
register_Ns3Simulator_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Simulator_methods(root_module, cls):$/;"	f
register_Ns3SnrTag_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SnrTag_methods(root_module, cls):$/;"	f
register_Ns3SsidChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SsidChecker_methods(root_module, cls):$/;"	f
register_Ns3SsidValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SsidValue_methods(root_module, cls):$/;"	f
register_Ns3Ssid_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Ssid_methods(root_module, cls):$/;"	f
register_Ns3StaWifiMac_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3StaWifiMac_methods(root_module, cls):$/;"	f
register_Ns3StatusCode_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3StatusCode_methods(root_module, cls):$/;"	f
register_Ns3SupportedRates_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3SupportedRates_methods(root_module, cls):$/;"	f
register_Ns3TagBuffer_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TagBuffer_methods(root_module, cls):$/;"	f
register_Ns3Tag_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Tag_methods(root_module, cls):$/;"	f
register_Ns3ThreeLogDistancePropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ThreeLogDistancePropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3TimeValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TimeValue_methods(root_module, cls):$/;"	f
register_Ns3TimeWithUnit_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TimeWithUnit_methods(root_module, cls):$/;"	f
register_Ns3Time_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Time_methods(root_module, cls):$/;"	f
register_Ns3TraceSourceAccessor_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TraceSourceAccessor_methods(root_module, cls):$/;"	f
register_Ns3Trailer_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Trailer_methods(root_module, cls):$/;"	f
register_Ns3TriangularRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TriangularRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3TwoRayGroundPropagationLossModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TwoRayGroundPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3TypeIdAttributeInformation_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TypeIdAttributeInformation_methods(root_module, cls):$/;"	f
register_Ns3TypeIdChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TypeIdChecker_methods(root_module, cls):$/;"	f
register_Ns3TypeIdTraceSourceInformation_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TypeIdTraceSourceInformation_methods(root_module, cls):$/;"	f
register_Ns3TypeIdValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TypeIdValue_methods(root_module, cls):$/;"	f
register_Ns3TypeId_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3TypeId_methods(root_module, cls):$/;"	f
register_Ns3UintegerValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3UintegerValue_methods(root_module, cls):$/;"	f
register_Ns3UniformRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3UniformRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3Vector2DChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Vector2DChecker_methods(root_module, cls):$/;"	f
register_Ns3Vector2DValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Vector2DValue_methods(root_module, cls):$/;"	f
register_Ns3Vector2D_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Vector2D_methods(root_module, cls):$/;"	f
register_Ns3Vector3DChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Vector3DChecker_methods(root_module, cls):$/;"	f
register_Ns3Vector3DValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Vector3DValue_methods(root_module, cls):$/;"	f
register_Ns3Vector3D_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3Vector3D_methods(root_module, cls):$/;"	f
register_Ns3WeibullRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WeibullRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3WifiActionHeaderActionValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiActionHeaderActionValue_methods(root_module, cls):$/;"	f
register_Ns3WifiActionHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiActionHeader_methods(root_module, cls):$/;"	f
register_Ns3WifiChannel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiChannel_methods(root_module, cls):$/;"	f
register_Ns3WifiHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiInformationElementVector_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiInformationElementVector_methods(root_module, cls):$/;"	f
register_Ns3WifiInformationElement_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiInformationElement_methods(root_module, cls):$/;"	f
register_Ns3WifiMacHeader_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiMacHeader_methods(root_module, cls):$/;"	f
register_Ns3WifiMacHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiMacQueue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiMacQueue_methods(root_module, cls):$/;"	f
register_Ns3WifiMacTrailer_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiMacTrailer_methods(root_module, cls):$/;"	f
register_Ns3WifiMac_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiMac_methods(root_module, cls):$/;"	f
register_Ns3WifiModeChecker_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiModeChecker_methods(root_module, cls):$/;"	f
register_Ns3WifiModeFactory_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiModeFactory_methods(root_module, cls):$/;"	f
register_Ns3WifiModeValue_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiModeValue_methods(root_module, cls):$/;"	f
register_Ns3WifiMode_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiMode_methods(root_module, cls):$/;"	f
register_Ns3WifiNetDevice_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiNetDevice_methods(root_module, cls):$/;"	f
register_Ns3WifiPhyHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiPhyHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiPhyListener_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiPhyListener_methods(root_module, cls):$/;"	f
register_Ns3WifiPhyStateHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiPhyStateHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiPhy_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiPhy_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStationInfo_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiRemoteStationInfo_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStationManager_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiRemoteStationManager_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStationState_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiRemoteStationState_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStation_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiRemoteStation_methods(root_module, cls):$/;"	f
register_Ns3WifiTxVector_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3WifiTxVector_methods(root_module, cls):$/;"	f
register_Ns3YansErrorRateModel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3YansErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3YansWifiChannelHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3YansWifiChannelHelper_methods(root_module, cls):$/;"	f
register_Ns3YansWifiChannel_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3YansWifiChannel_methods(root_module, cls):$/;"	f
register_Ns3YansWifiPhyHelper_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3YansWifiPhyHelper_methods(root_module, cls):$/;"	f
register_Ns3YansWifiPhy_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3YansWifiPhy_methods(root_module, cls):$/;"	f
register_Ns3ZetaRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ZetaRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ZipfRandomVariable_methods	bindings/modulegen__gcc_ILP32.py	/^def register_Ns3ZipfRandomVariable_methods(root_module, cls):$/;"	f
register_functions	bindings/modulegen__gcc_ILP32.py	/^def register_functions(root_module):$/;"	f
register_functions_ns3_FatalImpl	bindings/modulegen__gcc_ILP32.py	/^def register_functions_ns3_FatalImpl(module, root_module):$/;"	f
register_functions_ns3_Hash	bindings/modulegen__gcc_ILP32.py	/^def register_functions_ns3_Hash(module, root_module):$/;"	f
register_functions_ns3_Hash_Function	bindings/modulegen__gcc_ILP32.py	/^def register_functions_ns3_Hash_Function(module, root_module):$/;"	f
register_functions_ns3_internal	bindings/modulegen__gcc_ILP32.py	/^def register_functions_ns3_internal(module, root_module):$/;"	f
register_methods	bindings/modulegen__gcc_ILP32.py	/^def register_methods(root_module):$/;"	f
register_types	bindings/modulegen__gcc_ILP32.py	/^def register_types(module):$/;"	f
register_types_ns3_FatalImpl	bindings/modulegen__gcc_ILP32.py	/^def register_types_ns3_FatalImpl(module):$/;"	f
register_types_ns3_Hash	bindings/modulegen__gcc_ILP32.py	/^def register_types_ns3_Hash(module):$/;"	f
register_types_ns3_Hash_Function	bindings/modulegen__gcc_ILP32.py	/^def register_types_ns3_Hash_Function(module):$/;"	f
register_types_ns3_internal	bindings/modulegen__gcc_ILP32.py	/^def register_types_ns3_internal(module):$/;"	f
ErrorHandler	bindings/modulegen__gcc_LP64.py	/^class ErrorHandler(pybindgen.settings.ErrorHandler):$/;"	c
handle_error	bindings/modulegen__gcc_LP64.py	/^    def handle_error(self, wrapper, exception, traceback_):$/;"	m	class:ErrorHandler
main	bindings/modulegen__gcc_LP64.py	/^def main():$/;"	f
module_init	bindings/modulegen__gcc_LP64.py	/^def module_init():$/;"	f
register_Ns3AarfWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AarfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AarfcdWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AarfcdWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AddressChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3AddressValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Address_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Address_methods(root_module, cls):$/;"	f
register_Ns3AdhocWifiMac_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AdhocWifiMac_methods(root_module, cls):$/;"	f
register_Ns3AmpduSubframeHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AmpduSubframeHeader_methods(root_module, cls):$/;"	f
register_Ns3AmpduTag_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AmpduTag_methods(root_module, cls):$/;"	f
register_Ns3AmrrWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AmrrWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AmsduSubframeHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AmsduSubframeHeader_methods(root_module, cls):$/;"	f
register_Ns3ApWifiMac_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ApWifiMac_methods(root_module, cls):$/;"	f
register_Ns3AparfWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AparfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3ArfWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ArfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3AsciiTraceHelperForDevice_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AsciiTraceHelperForDevice_methods(root_module, cls):$/;"	f
register_Ns3AsciiTraceHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AsciiTraceHelper_methods(root_module, cls):$/;"	f
register_Ns3AthstatsHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AthstatsHelper_methods(root_module, cls):$/;"	f
register_Ns3AthstatsWifiTraceSink_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AthstatsWifiTraceSink_methods(root_module, cls):$/;"	f
register_Ns3AttributeAccessor_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AttributeAccessor_methods(root_module, cls):$/;"	f
register_Ns3AttributeChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AttributeChecker_methods(root_module, cls):$/;"	f
register_Ns3AttributeConstructionListItem_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AttributeConstructionListItem_methods(root_module, cls):$/;"	f
register_Ns3AttributeConstructionList_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AttributeConstructionList_methods(root_module, cls):$/;"	f
register_Ns3AttributeValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3AttributeValue_methods(root_module, cls):$/;"	f
register_Ns3Bar_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Bar_methods(root_module, cls):$/;"	f
register_Ns3BlockAckAgreement_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3BlockAckAgreement_methods(root_module, cls):$/;"	f
register_Ns3BlockAckCache_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3BlockAckCache_methods(root_module, cls):$/;"	f
register_Ns3BlockAckManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3BlockAckManager_methods(root_module, cls):$/;"	f
register_Ns3BufferIterator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3BufferIterator_methods(root_module, cls):$/;"	f
register_Ns3Buffer_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Buffer_methods(root_module, cls):$/;"	f
register_Ns3ByteTagIteratorItem_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ByteTagIteratorItem_methods(root_module, cls):$/;"	f
register_Ns3ByteTagIterator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ByteTagIterator_methods(root_module, cls):$/;"	f
register_Ns3ByteTagListIteratorItem_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ByteTagListIteratorItem_methods(root_module, cls):$/;"	f
register_Ns3ByteTagListIterator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ByteTagListIterator_methods(root_module, cls):$/;"	f
register_Ns3ByteTagList_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ByteTagList_methods(root_module, cls):$/;"	f
register_Ns3CallbackBase_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CallbackBase_methods(root_module, cls):$/;"	f
register_Ns3CallbackChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CallbackChecker_methods(root_module, cls):$/;"	f
register_Ns3CallbackImplBase_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CallbackImplBase_methods(root_module, cls):$/;"	f
register_Ns3CallbackValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CallbackValue_methods(root_module, cls):$/;"	f
register_Ns3CapabilityInformation_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CapabilityInformation_methods(root_module, cls):$/;"	f
register_Ns3CaraWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CaraWifiManager_methods(root_module, cls):$/;"	f
register_Ns3Channel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Channel_methods(root_module, cls):$/;"	f
register_Ns3Chunk_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Chunk_methods(root_module, cls):$/;"	f
register_Ns3ConstantRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ConstantRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ConstantRateWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ConstantRateWifiManager_methods(root_module, cls):$/;"	f
register_Ns3ConstantSpeedPropagationDelayModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ConstantSpeedPropagationDelayModel_methods(root_module, cls):$/;"	f
register_Ns3Cost231PropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Cost231PropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3CtrlBAckRequestHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CtrlBAckRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3CtrlBAckResponseHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3CtrlBAckResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3DcaTxop_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3DcaTxop_methods(root_module, cls):$/;"	f
register_Ns3DcfManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3DcfManager_methods(root_module, cls):$/;"	f
register_Ns3DcfState_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3DcfState_methods(root_module, cls):$/;"	f
register_Ns3Dcf_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Dcf_methods(root_module, cls):$/;"	f
register_Ns3DeterministicRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3DeterministicRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3DoubleValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3DoubleValue_methods(root_module, cls):$/;"	f
register_Ns3DsssErrorRateModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3DsssErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3EdcaTxopN_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3EdcaTxopN_methods(root_module, cls):$/;"	f
register_Ns3EmpiricalRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3EmpiricalRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3EmptyAttributeValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3EmptyAttributeValue_methods(root_module, cls):$/;"	f
register_Ns3Empty_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Empty_methods(root_module, cls):$/;"	f
register_Ns3ErlangRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ErlangRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ErrorRateModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3EventId_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3EventId_methods(root_module, cls):$/;"	f
register_Ns3EventImpl_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3EventImpl_methods(root_module, cls):$/;"	f
register_Ns3ExponentialRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ExponentialRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ExtendedSupportedRatesIE_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ExtendedSupportedRatesIE_methods(root_module, cls):$/;"	f
register_Ns3FixedRssLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3FixedRssLossModel_methods(root_module, cls):$/;"	f
register_Ns3FriisPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3FriisPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3GammaRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3GammaRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionFnv1a_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HashFunctionFnv1a_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionHash32_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HashFunctionHash32_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionHash64_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HashFunctionHash64_methods(root_module, cls):$/;"	f
register_Ns3HashFunctionMurmur3_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HashFunctionMurmur3_methods(root_module, cls):$/;"	f
register_Ns3HashImplementation_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HashImplementation_methods(root_module, cls):$/;"	f
register_Ns3Hasher_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Hasher_methods(root_module, cls):$/;"	f
register_Ns3Header_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Header_methods(root_module, cls):$/;"	f
register_Ns3HtCapabilitiesChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HtCapabilitiesChecker_methods(root_module, cls):$/;"	f
register_Ns3HtCapabilitiesValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HtCapabilitiesValue_methods(root_module, cls):$/;"	f
register_Ns3HtCapabilities_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HtCapabilities_methods(root_module, cls):$/;"	f
register_Ns3HtWifiMacHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3HtWifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3IdealWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3IdealWifiManager_methods(root_module, cls):$/;"	f
register_Ns3Int64x64_t_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Int64x64_t_methods(root_module, cls):$/;"	f
register_Ns3InterferenceHelperSnrPer_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3InterferenceHelperSnrPer_methods(root_module, cls):$/;"	f
register_Ns3InterferenceHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3InterferenceHelper_methods(root_module, cls):$/;"	f
register_Ns3Ipv4AddressChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv4AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv4AddressValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv4AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv4Address_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv4Address_methods(root_module, cls):$/;"	f
register_Ns3Ipv4MaskChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv4MaskChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv4MaskValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv4MaskValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv4Mask_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv4Mask_methods(root_module, cls):$/;"	f
register_Ns3Ipv6AddressChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv6AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv6AddressValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv6AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv6Address_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv6Address_methods(root_module, cls):$/;"	f
register_Ns3Ipv6PrefixChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv6PrefixChecker_methods(root_module, cls):$/;"	f
register_Ns3Ipv6PrefixValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv6PrefixValue_methods(root_module, cls):$/;"	f
register_Ns3Ipv6Prefix_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ipv6Prefix_methods(root_module, cls):$/;"	f
register_Ns3ItuR1411LosPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ItuR1411LosPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3ItuR1411NlosOverRooftopPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ItuR1411NlosOverRooftopPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3JakesProcess_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3JakesProcess_methods(root_module, cls):$/;"	f
register_Ns3JakesPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3JakesPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3Kun2600MhzPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Kun2600MhzPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3LogDistancePropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3LogDistancePropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3LogNormalRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3LogNormalRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3Mac48AddressChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Mac48AddressChecker_methods(root_module, cls):$/;"	f
register_Ns3Mac48AddressValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Mac48AddressValue_methods(root_module, cls):$/;"	f
register_Ns3Mac48Address_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Mac48Address_methods(root_module, cls):$/;"	f
register_Ns3MacLowBlockAckEventListener_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MacLowBlockAckEventListener_methods(root_module, cls):$/;"	f
register_Ns3MacLowDcfListener_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MacLowDcfListener_methods(root_module, cls):$/;"	f
register_Ns3MacLowTransmissionListener_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MacLowTransmissionListener_methods(root_module, cls):$/;"	f
register_Ns3MacLowTransmissionParameters_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MacLowTransmissionParameters_methods(root_module, cls):$/;"	f
register_Ns3MacLow_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MacLow_methods(root_module, cls):$/;"	f
register_Ns3MacRxMiddle_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MacRxMiddle_methods(root_module, cls):$/;"	f
register_Ns3MatrixPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MatrixPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3MgtAddBaRequestHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtAddBaRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtAddBaResponseHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtAddBaResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtAssocRequestHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtAssocRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtAssocResponseHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtAssocResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtBeaconHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtBeaconHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtDelBaHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtDelBaHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtProbeRequestHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtProbeRequestHeader_methods(root_module, cls):$/;"	f
register_Ns3MgtProbeResponseHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MgtProbeResponseHeader_methods(root_module, cls):$/;"	f
register_Ns3MinstrelWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MinstrelWifiManager_methods(root_module, cls):$/;"	f
register_Ns3MobilityModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MobilityModel_methods(root_module, cls):$/;"	f
register_Ns3MpduAggregator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MpduAggregator_methods(root_module, cls):$/;"	f
register_Ns3MpduStandardAggregator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MpduStandardAggregator_methods(root_module, cls):$/;"	f
register_Ns3MsduAggregator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3MsduAggregator_methods(root_module, cls):$/;"	f
register_Ns3NakagamiPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NakagamiPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3NetDeviceContainer_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NetDeviceContainer_methods(root_module, cls):$/;"	f
register_Ns3NetDevice_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NetDevice_methods(root_module, cls):$/;"	f
register_Ns3NistErrorRateModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NistErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3NixVector_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NixVector_methods(root_module, cls):$/;"	f
register_Ns3NodeContainer_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NodeContainer_methods(root_module, cls):$/;"	f
register_Ns3Node_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Node_methods(root_module, cls):$/;"	f
register_Ns3NormalRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NormalRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3NqosWifiMacHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3NqosWifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3ObjectAggregateIterator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ObjectAggregateIterator_methods(root_module, cls):$/;"	f
register_Ns3ObjectBase_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ObjectBase_methods(root_module, cls):$/;"	f
register_Ns3ObjectDeleter_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ObjectDeleter_methods(root_module, cls):$/;"	f
register_Ns3ObjectFactoryChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ObjectFactoryChecker_methods(root_module, cls):$/;"	f
register_Ns3ObjectFactoryValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ObjectFactoryValue_methods(root_module, cls):$/;"	f
register_Ns3ObjectFactory_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ObjectFactory_methods(root_module, cls):$/;"	f
register_Ns3Object_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Object_methods(root_module, cls):$/;"	f
register_Ns3OkumuraHataPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3OkumuraHataPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3OnoeWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3OnoeWifiManager_methods(root_module, cls):$/;"	f
register_Ns3OriginatorBlockAckAgreement_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3OriginatorBlockAckAgreement_methods(root_module, cls):$/;"	f
register_Ns3OutputStreamWrapper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3OutputStreamWrapper_methods(root_module, cls):$/;"	f
register_Ns3PacketMetadataItemIterator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PacketMetadataItemIterator_methods(root_module, cls):$/;"	f
register_Ns3PacketMetadataItem_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PacketMetadataItem_methods(root_module, cls):$/;"	f
register_Ns3PacketMetadata_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PacketMetadata_methods(root_module, cls):$/;"	f
register_Ns3PacketTagIteratorItem_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PacketTagIteratorItem_methods(root_module, cls):$/;"	f
register_Ns3PacketTagIterator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PacketTagIterator_methods(root_module, cls):$/;"	f
register_Ns3PacketTagListTagData_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PacketTagListTagData_methods(root_module, cls):$/;"	f
register_Ns3PacketTagList_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PacketTagList_methods(root_module, cls):$/;"	f
register_Ns3Packet_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Packet_methods(root_module, cls):$/;"	f
register_Ns3ParetoRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ParetoRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ParfWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ParfWifiManager_methods(root_module, cls):$/;"	f
register_Ns3PcapFileWrapper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PcapFileWrapper_methods(root_module, cls):$/;"	f
register_Ns3PcapFile_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PcapFile_methods(root_module, cls):$/;"	f
register_Ns3PcapHelperForDevice_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PcapHelperForDevice_methods(root_module, cls):$/;"	f
register_Ns3PcapHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PcapHelper_methods(root_module, cls):$/;"	f
register_Ns3PropagationCache__Ns3JakesProcess_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PropagationCache__Ns3JakesProcess_methods(root_module, cls):$/;"	f
register_Ns3PropagationDelayModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PropagationDelayModel_methods(root_module, cls):$/;"	f
register_Ns3PropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3PropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3QosTag_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3QosTag_methods(root_module, cls):$/;"	f
register_Ns3QosWifiMacHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3QosWifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3RandomPropagationDelayModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3RandomPropagationDelayModel_methods(root_module, cls):$/;"	f
register_Ns3RandomPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3RandomPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3RandomVariableStream_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3RandomVariableStream_methods(root_module, cls):$/;"	f
register_Ns3RangePropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3RangePropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3RateInfo_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3RateInfo_methods(root_module, cls):$/;"	f
register_Ns3RegularWifiMac_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3RegularWifiMac_methods(root_module, cls):$/;"	f
register_Ns3RraaWifiManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3RraaWifiManager_methods(root_module, cls):$/;"	f
register_Ns3SequentialRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SequentialRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3AttributeAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeAccessor__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3AttributeAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeAccessor__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3AttributeChecker_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeChecker__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3AttributeChecker_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeChecker__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3AttributeValue_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeValue__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3AttributeValue_Ns3Empty_Ns3DefaultDeleter__lt__ns3AttributeValue__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3CallbackImplBase_Ns3Empty_Ns3DefaultDeleter__lt__ns3CallbackImplBase__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3CallbackImplBase_Ns3Empty_Ns3DefaultDeleter__lt__ns3CallbackImplBase__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3EventImpl_Ns3Empty_Ns3DefaultDeleter__lt__ns3EventImpl__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3EventImpl_Ns3Empty_Ns3DefaultDeleter__lt__ns3EventImpl__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3HashImplementation_Ns3Empty_Ns3DefaultDeleter__lt__ns3HashImplementation__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3HashImplementation_Ns3Empty_Ns3DefaultDeleter__lt__ns3HashImplementation__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3InterferenceHelperEvent_Ns3Empty_Ns3DefaultDeleter__lt__ns3InterferenceHelperEvent__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3InterferenceHelperEvent_Ns3Empty_Ns3DefaultDeleter__lt__ns3InterferenceHelperEvent__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3NixVector_Ns3Empty_Ns3DefaultDeleter__lt__ns3NixVector__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3NixVector_Ns3Empty_Ns3DefaultDeleter__lt__ns3NixVector__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3Object_Ns3ObjectBase_Ns3ObjectDeleter_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3Object_Ns3ObjectBase_Ns3ObjectDeleter_methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3OutputStreamWrapper_Ns3Empty_Ns3DefaultDeleter__lt__ns3OutputStreamWrapper__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3OutputStreamWrapper_Ns3Empty_Ns3DefaultDeleter__lt__ns3OutputStreamWrapper__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3Packet_Ns3Empty_Ns3DefaultDeleter__lt__ns3Packet__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3Packet_Ns3Empty_Ns3DefaultDeleter__lt__ns3Packet__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3TraceSourceAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3TraceSourceAccessor__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3TraceSourceAccessor_Ns3Empty_Ns3DefaultDeleter__lt__ns3TraceSourceAccessor__gt___methods(root_module, cls):$/;"	f
register_Ns3SimpleRefCount__Ns3WifiInformationElement_Ns3Empty_Ns3DefaultDeleter__lt__ns3WifiInformationElement__gt___methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SimpleRefCount__Ns3WifiInformationElement_Ns3Empty_Ns3DefaultDeleter__lt__ns3WifiInformationElement__gt___methods(root_module, cls):$/;"	f
register_Ns3Simulator_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Simulator_methods(root_module, cls):$/;"	f
register_Ns3SnrTag_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SnrTag_methods(root_module, cls):$/;"	f
register_Ns3SsidChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SsidChecker_methods(root_module, cls):$/;"	f
register_Ns3SsidValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SsidValue_methods(root_module, cls):$/;"	f
register_Ns3Ssid_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Ssid_methods(root_module, cls):$/;"	f
register_Ns3StaWifiMac_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3StaWifiMac_methods(root_module, cls):$/;"	f
register_Ns3StatusCode_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3StatusCode_methods(root_module, cls):$/;"	f
register_Ns3SupportedRates_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3SupportedRates_methods(root_module, cls):$/;"	f
register_Ns3TagBuffer_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TagBuffer_methods(root_module, cls):$/;"	f
register_Ns3Tag_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Tag_methods(root_module, cls):$/;"	f
register_Ns3ThreeLogDistancePropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ThreeLogDistancePropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3TimeValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TimeValue_methods(root_module, cls):$/;"	f
register_Ns3TimeWithUnit_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TimeWithUnit_methods(root_module, cls):$/;"	f
register_Ns3Time_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Time_methods(root_module, cls):$/;"	f
register_Ns3TraceSourceAccessor_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TraceSourceAccessor_methods(root_module, cls):$/;"	f
register_Ns3Trailer_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Trailer_methods(root_module, cls):$/;"	f
register_Ns3TriangularRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TriangularRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3TwoRayGroundPropagationLossModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TwoRayGroundPropagationLossModel_methods(root_module, cls):$/;"	f
register_Ns3TypeIdAttributeInformation_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TypeIdAttributeInformation_methods(root_module, cls):$/;"	f
register_Ns3TypeIdChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TypeIdChecker_methods(root_module, cls):$/;"	f
register_Ns3TypeIdTraceSourceInformation_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TypeIdTraceSourceInformation_methods(root_module, cls):$/;"	f
register_Ns3TypeIdValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TypeIdValue_methods(root_module, cls):$/;"	f
register_Ns3TypeId_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3TypeId_methods(root_module, cls):$/;"	f
register_Ns3UintegerValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3UintegerValue_methods(root_module, cls):$/;"	f
register_Ns3UniformRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3UniformRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3Vector2DChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Vector2DChecker_methods(root_module, cls):$/;"	f
register_Ns3Vector2DValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Vector2DValue_methods(root_module, cls):$/;"	f
register_Ns3Vector2D_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Vector2D_methods(root_module, cls):$/;"	f
register_Ns3Vector3DChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Vector3DChecker_methods(root_module, cls):$/;"	f
register_Ns3Vector3DValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Vector3DValue_methods(root_module, cls):$/;"	f
register_Ns3Vector3D_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3Vector3D_methods(root_module, cls):$/;"	f
register_Ns3WeibullRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WeibullRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3WifiActionHeaderActionValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiActionHeaderActionValue_methods(root_module, cls):$/;"	f
register_Ns3WifiActionHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiActionHeader_methods(root_module, cls):$/;"	f
register_Ns3WifiChannel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiChannel_methods(root_module, cls):$/;"	f
register_Ns3WifiHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiInformationElementVector_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiInformationElementVector_methods(root_module, cls):$/;"	f
register_Ns3WifiInformationElement_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiInformationElement_methods(root_module, cls):$/;"	f
register_Ns3WifiMacHeader_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiMacHeader_methods(root_module, cls):$/;"	f
register_Ns3WifiMacHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiMacHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiMacQueue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiMacQueue_methods(root_module, cls):$/;"	f
register_Ns3WifiMacTrailer_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiMacTrailer_methods(root_module, cls):$/;"	f
register_Ns3WifiMac_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiMac_methods(root_module, cls):$/;"	f
register_Ns3WifiModeChecker_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiModeChecker_methods(root_module, cls):$/;"	f
register_Ns3WifiModeFactory_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiModeFactory_methods(root_module, cls):$/;"	f
register_Ns3WifiModeValue_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiModeValue_methods(root_module, cls):$/;"	f
register_Ns3WifiMode_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiMode_methods(root_module, cls):$/;"	f
register_Ns3WifiNetDevice_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiNetDevice_methods(root_module, cls):$/;"	f
register_Ns3WifiPhyHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiPhyHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiPhyListener_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiPhyListener_methods(root_module, cls):$/;"	f
register_Ns3WifiPhyStateHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiPhyStateHelper_methods(root_module, cls):$/;"	f
register_Ns3WifiPhy_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiPhy_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStationInfo_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiRemoteStationInfo_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStationManager_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiRemoteStationManager_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStationState_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiRemoteStationState_methods(root_module, cls):$/;"	f
register_Ns3WifiRemoteStation_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiRemoteStation_methods(root_module, cls):$/;"	f
register_Ns3WifiTxVector_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3WifiTxVector_methods(root_module, cls):$/;"	f
register_Ns3YansErrorRateModel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3YansErrorRateModel_methods(root_module, cls):$/;"	f
register_Ns3YansWifiChannelHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3YansWifiChannelHelper_methods(root_module, cls):$/;"	f
register_Ns3YansWifiChannel_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3YansWifiChannel_methods(root_module, cls):$/;"	f
register_Ns3YansWifiPhyHelper_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3YansWifiPhyHelper_methods(root_module, cls):$/;"	f
register_Ns3YansWifiPhy_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3YansWifiPhy_methods(root_module, cls):$/;"	f
register_Ns3ZetaRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ZetaRandomVariable_methods(root_module, cls):$/;"	f
register_Ns3ZipfRandomVariable_methods	bindings/modulegen__gcc_LP64.py	/^def register_Ns3ZipfRandomVariable_methods(root_module, cls):$/;"	f
register_functions	bindings/modulegen__gcc_LP64.py	/^def register_functions(root_module):$/;"	f
register_functions_ns3_FatalImpl	bindings/modulegen__gcc_LP64.py	/^def register_functions_ns3_FatalImpl(module, root_module):$/;"	f
register_functions_ns3_Hash	bindings/modulegen__gcc_LP64.py	/^def register_functions_ns3_Hash(module, root_module):$/;"	f
register_functions_ns3_Hash_Function	bindings/modulegen__gcc_LP64.py	/^def register_functions_ns3_Hash_Function(module, root_module):$/;"	f
register_functions_ns3_internal	bindings/modulegen__gcc_LP64.py	/^def register_functions_ns3_internal(module, root_module):$/;"	f
register_methods	bindings/modulegen__gcc_LP64.py	/^def register_methods(root_module):$/;"	f
register_types	bindings/modulegen__gcc_LP64.py	/^def register_types(module):$/;"	f
register_types_ns3_FatalImpl	bindings/modulegen__gcc_LP64.py	/^def register_types_ns3_FatalImpl(module):$/;"	f
register_types_ns3_Hash	bindings/modulegen__gcc_LP64.py	/^def register_types_ns3_Hash(module):$/;"	f
register_types_ns3_Hash_Function	bindings/modulegen__gcc_LP64.py	/^def register_types_ns3_Hash_Function(module):$/;"	f
register_types_ns3_internal	bindings/modulegen__gcc_LP64.py	/^def register_types_ns3_internal(module):$/;"	f
post_register_types	bindings/modulegen_customizations.py	/^def post_register_types(root_module):$/;"	f
CalcPsr	examples/wifi-phy-test.cc	/^double CalcPsr (struct PsrExperiment::Output output, struct PsrExperiment::Input input)$/;"	f
CollisionExperiment	examples/wifi-phy-test.cc	/^CollisionExperiment::CollisionExperiment ()$/;"	f	class:CollisionExperiment
CollisionExperiment	examples/wifi-phy-test.cc	/^class CollisionExperiment$/;"	c	file:
Input	examples/wifi-phy-test.cc	/^  struct Input$/;"	s	class:CollisionExperiment	file:
Input	examples/wifi-phy-test.cc	/^  struct Input$/;"	s	class:PsrExperiment	file:
Input	examples/wifi-phy-test.cc	/^CollisionExperiment::Input::Input ()$/;"	f	class:CollisionExperiment::Input
Input	examples/wifi-phy-test.cc	/^PsrExperiment::Input::Input ()$/;"	f	class:PsrExperiment::Input
Output	examples/wifi-phy-test.cc	/^  struct Output$/;"	s	class:CollisionExperiment	file:
Output	examples/wifi-phy-test.cc	/^  struct Output$/;"	s	class:PsrExperiment	file:
PrintPsr	examples/wifi-phy-test.cc	/^static void PrintPsr (int argc, char *argv[])$/;"	f	file:
PrintPsrVsCollisionInterval	examples/wifi-phy-test.cc	/^static void PrintPsrVsCollisionInterval (int argc, char *argv[])$/;"	f	file:
PrintPsrVsDistance	examples/wifi-phy-test.cc	/^static void PrintPsrVsDistance (int argc, char *argv[])$/;"	f	file:
PrintSizeVsRange	examples/wifi-phy-test.cc	/^static void PrintSizeVsRange (int argc, char *argv[])$/;"	f	file:
PsrExperiment	examples/wifi-phy-test.cc	/^PsrExperiment::PsrExperiment ()$/;"	f	class:PsrExperiment
PsrExperiment	examples/wifi-phy-test.cc	/^class PsrExperiment$/;"	c	file:
Receive	examples/wifi-phy-test.cc	/^CollisionExperiment::Receive (Ptr<Packet> p, double snr, WifiMode mode, enum WifiPreamble preamble)$/;"	f	class:CollisionExperiment
Receive	examples/wifi-phy-test.cc	/^PsrExperiment::Receive (Ptr<Packet> p, double snr, WifiMode mode, enum WifiPreamble preamble)$/;"	f	class:PsrExperiment
Run	examples/wifi-phy-test.cc	/^CollisionExperiment::Run (struct CollisionExperiment::Input input)$/;"	f	class:CollisionExperiment
Run	examples/wifi-phy-test.cc	/^PsrExperiment::Run (struct PsrExperiment::Input input)$/;"	f	class:PsrExperiment
Send	examples/wifi-phy-test.cc	/^PsrExperiment::Send (void)$/;"	f	class:PsrExperiment
SendA	examples/wifi-phy-test.cc	/^CollisionExperiment::SendA (void) const$/;"	f	class:CollisionExperiment
SendB	examples/wifi-phy-test.cc	/^CollisionExperiment::SendB (void) const$/;"	f	class:CollisionExperiment
distance	examples/wifi-phy-test.cc	/^    double distance;$/;"	m	struct:PsrExperiment::Input	file:
interval	examples/wifi-phy-test.cc	/^    Time interval;$/;"	m	struct:CollisionExperiment::Input	file:
m_flowIdA	examples/wifi-phy-test.cc	/^  uint32_t m_flowIdA;$/;"	m	class:CollisionExperiment	file:
m_flowIdB	examples/wifi-phy-test.cc	/^  uint32_t m_flowIdB;$/;"	m	class:CollisionExperiment	file:
m_input	examples/wifi-phy-test.cc	/^  struct Input m_input;$/;"	m	class:CollisionExperiment	typeref:struct:CollisionExperiment::Input	file:
m_input	examples/wifi-phy-test.cc	/^  struct Input m_input;$/;"	m	class:PsrExperiment	typeref:struct:PsrExperiment::Input	file:
m_output	examples/wifi-phy-test.cc	/^  struct Output m_output;$/;"	m	class:CollisionExperiment	typeref:struct:CollisionExperiment::Output	file:
m_output	examples/wifi-phy-test.cc	/^  struct Output m_output;$/;"	m	class:PsrExperiment	typeref:struct:PsrExperiment::Output	file:
m_tx	examples/wifi-phy-test.cc	/^  Ptr<WifiPhy> m_tx;$/;"	m	class:PsrExperiment	file:
m_txA	examples/wifi-phy-test.cc	/^  Ptr<WifiPhy> m_txA;$/;"	m	class:CollisionExperiment	file:
m_txB	examples/wifi-phy-test.cc	/^  Ptr<WifiPhy> m_txB;$/;"	m	class:CollisionExperiment	file:
main	examples/wifi-phy-test.cc	/^int main (int argc, char *argv[])$/;"	f
nPackets	examples/wifi-phy-test.cc	/^    uint32_t nPackets;$/;"	m	struct:CollisionExperiment::Input	file:
nPackets	examples/wifi-phy-test.cc	/^    uint32_t nPackets;$/;"	m	struct:PsrExperiment::Input	file:
packetSize	examples/wifi-phy-test.cc	/^    uint32_t packetSize;$/;"	m	struct:PsrExperiment::Input	file:
packetSizeA	examples/wifi-phy-test.cc	/^    uint32_t packetSizeA;$/;"	m	struct:CollisionExperiment::Input	file:
packetSizeB	examples/wifi-phy-test.cc	/^    uint32_t packetSizeB;$/;"	m	struct:CollisionExperiment::Input	file:
received	examples/wifi-phy-test.cc	/^    uint32_t received;$/;"	m	struct:PsrExperiment::Output	file:
receivedA	examples/wifi-phy-test.cc	/^    uint32_t receivedA;$/;"	m	struct:CollisionExperiment::Output	file:
receivedB	examples/wifi-phy-test.cc	/^    uint32_t receivedB;$/;"	m	struct:CollisionExperiment::Output	file:
txMode	examples/wifi-phy-test.cc	/^    std::string txMode;$/;"	m	struct:PsrExperiment::Input	file:
txModeA	examples/wifi-phy-test.cc	/^    std::string txModeA;$/;"	m	struct:CollisionExperiment::Input	file:
txModeB	examples/wifi-phy-test.cc	/^    std::string txModeB;$/;"	m	struct:CollisionExperiment::Input	file:
txPowerLevel	examples/wifi-phy-test.cc	/^    uint8_t txPowerLevel;$/;"	m	struct:PsrExperiment::Input	file:
txPowerLevelA	examples/wifi-phy-test.cc	/^    uint8_t txPowerLevelA;$/;"	m	struct:CollisionExperiment::Input	file:
txPowerLevelB	examples/wifi-phy-test.cc	/^    uint8_t txPowerLevelB;$/;"	m	struct:CollisionExperiment::Input	file:
xA	examples/wifi-phy-test.cc	/^    double xA;$/;"	m	struct:CollisionExperiment::Input	file:
xB	examples/wifi-phy-test.cc	/^    double xB;$/;"	m	struct:CollisionExperiment::Input	file:
AthstatsHelper	helper/athstats-helper.cc	/^AthstatsHelper::AthstatsHelper ()$/;"	f	class:ns3::AthstatsHelper
AthstatsWifiTraceSink	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::AthstatsWifiTraceSink ()$/;"	f	class:ns3::AthstatsWifiTraceSink
DevRxTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::DevRxTrace (std::string context, Ptr<const Packet> p)$/;"	f	class:ns3::AthstatsWifiTraceSink
DevTxTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::DevTxTrace (std::string context, Ptr<const Packet> p)$/;"	f	class:ns3::AthstatsWifiTraceSink
EnableAthstats	helper/athstats-helper.cc	/^AthstatsHelper::EnableAthstats (std::string filename,  uint32_t nodeid, uint32_t deviceid)$/;"	f	class:ns3::AthstatsHelper
EnableAthstats	helper/athstats-helper.cc	/^AthstatsHelper::EnableAthstats (std::string filename, NetDeviceContainer d)$/;"	f	class:ns3::AthstatsHelper
EnableAthstats	helper/athstats-helper.cc	/^AthstatsHelper::EnableAthstats (std::string filename, NodeContainer n)$/;"	f	class:ns3::AthstatsHelper
EnableAthstats	helper/athstats-helper.cc	/^AthstatsHelper::EnableAthstats (std::string filename, Ptr<NetDevice> nd)$/;"	f	class:ns3::AthstatsHelper
GetTypeId	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::GetTypeId (void)$/;"	f	class:ns3::AthstatsWifiTraceSink
Open	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::Open (std::string const &name)$/;"	f	class:ns3::AthstatsWifiTraceSink
PhyRxErrorTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::PhyRxErrorTrace (std::string context, Ptr<const Packet> packet, double snr)$/;"	f	class:ns3::AthstatsWifiTraceSink
PhyRxOkTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::PhyRxOkTrace (std::string context, Ptr<const Packet> packet, double snr, WifiMode mode, enum WifiPreamble preamble)$/;"	f	class:ns3::AthstatsWifiTraceSink
PhyStateTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::PhyStateTrace (std::string context, Time start, Time duration, enum WifiPhy::State state)$/;"	f	class:ns3::AthstatsWifiTraceSink
PhyTxTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::PhyTxTrace (std::string context, Ptr<const Packet> packet, WifiMode mode, WifiPreamble preamble, uint8_t txPower)$/;"	f	class:ns3::AthstatsWifiTraceSink
ResetCounters	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::ResetCounters ()$/;"	f	class:ns3::AthstatsWifiTraceSink
TxDataFailedTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::TxDataFailedTrace (std::string context, Mac48Address address)$/;"	f	class:ns3::AthstatsWifiTraceSink
TxFinalDataFailedTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::TxFinalDataFailedTrace (std::string context, Mac48Address address)$/;"	f	class:ns3::AthstatsWifiTraceSink
TxFinalRtsFailedTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::TxFinalRtsFailedTrace (std::string context, Mac48Address address)$/;"	f	class:ns3::AthstatsWifiTraceSink
TxRtsFailedTrace	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::TxRtsFailedTrace (std::string context, Mac48Address address)$/;"	f	class:ns3::AthstatsWifiTraceSink
WriteStats	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::WriteStats ()$/;"	f	class:ns3::AthstatsWifiTraceSink
ns3	helper/athstats-helper.cc	/^namespace ns3 {$/;"	n	file:
~AthstatsWifiTraceSink	helper/athstats-helper.cc	/^AthstatsWifiTraceSink::~AthstatsWifiTraceSink ()$/;"	f	class:ns3::AthstatsWifiTraceSink
ATHSTATS_HELPER_H	helper/athstats-helper.h	22;"	d
AthstatsHelper	helper/athstats-helper.h	/^class AthstatsHelper$/;"	c	namespace:ns3
AthstatsWifiTraceSink	helper/athstats-helper.h	/^class AthstatsWifiTraceSink  : public Object$/;"	c	namespace:ns3
m_exceededRetryCount	helper/athstats-helper.h	/^  uint32_t m_exceededRetryCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_interval	helper/athstats-helper.h	/^  Time m_interval;$/;"	m	class:ns3::AthstatsHelper
m_interval	helper/athstats-helper.h	/^  Time m_interval;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_longRetryCount	helper/athstats-helper.h	/^  uint32_t m_longRetryCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_phyRxErrorCount	helper/athstats-helper.h	/^  uint32_t m_phyRxErrorCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_phyRxOkCount	helper/athstats-helper.h	/^  uint32_t m_phyRxOkCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_phyTxCount	helper/athstats-helper.h	/^  uint32_t m_phyTxCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_rxCount	helper/athstats-helper.h	/^  uint32_t m_rxCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_shortRetryCount	helper/athstats-helper.h	/^  uint32_t m_shortRetryCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_txCount	helper/athstats-helper.h	/^  uint32_t m_txCount;$/;"	m	class:ns3::AthstatsWifiTraceSink
m_writer	helper/athstats-helper.h	/^  std::ofstream *m_writer;$/;"	m	class:ns3::AthstatsWifiTraceSink
ns3	helper/athstats-helper.h	/^namespace ns3 {$/;"	n
Default	helper/ht-wifi-mac-helper.cc	/^HtWifiMacHelper::Default (void)$/;"	f	class:ns3::HtWifiMacHelper
HtWifiMacHelper	helper/ht-wifi-mac-helper.cc	/^HtWifiMacHelper::HtWifiMacHelper ()$/;"	f	class:ns3::HtWifiMacHelper
ns3	helper/ht-wifi-mac-helper.cc	/^namespace ns3 {$/;"	n	file:
~HtWifiMacHelper	helper/ht-wifi-mac-helper.cc	/^HtWifiMacHelper::~HtWifiMacHelper ()$/;"	f	class:ns3::HtWifiMacHelper
HT_WIFI_MAC_HELPER_H	helper/ht-wifi-mac-helper.h	21;"	d
HtWifiMacHelper	helper/ht-wifi-mac-helper.h	/^class HtWifiMacHelper : public QosWifiMacHelper$/;"	c	namespace:ns3
ns3	helper/ht-wifi-mac-helper.h	/^namespace ns3 {$/;"	n
Create	helper/nqos-wifi-mac-helper.cc	/^NqosWifiMacHelper::Create (void) const$/;"	f	class:ns3::NqosWifiMacHelper
Default	helper/nqos-wifi-mac-helper.cc	/^NqosWifiMacHelper::Default (void)$/;"	f	class:ns3::NqosWifiMacHelper
NqosWifiMacHelper	helper/nqos-wifi-mac-helper.cc	/^NqosWifiMacHelper::NqosWifiMacHelper ()$/;"	f	class:ns3::NqosWifiMacHelper
SetType	helper/nqos-wifi-mac-helper.cc	/^NqosWifiMacHelper::SetType (std::string type,$/;"	f	class:ns3::NqosWifiMacHelper
ns3	helper/nqos-wifi-mac-helper.cc	/^namespace ns3 {$/;"	n	file:
~NqosWifiMacHelper	helper/nqos-wifi-mac-helper.cc	/^NqosWifiMacHelper::~NqosWifiMacHelper ()$/;"	f	class:ns3::NqosWifiMacHelper
NQOS_WIFI_MAC_HELPER_H	helper/nqos-wifi-mac-helper.h	21;"	d
NqosWifiMacHelper	helper/nqos-wifi-mac-helper.h	/^class NqosWifiMacHelper : public WifiMacHelper$/;"	c	namespace:ns3
m_mac	helper/nqos-wifi-mac-helper.h	/^  ObjectFactory m_mac;$/;"	m	class:ns3::NqosWifiMacHelper
ns3	helper/nqos-wifi-mac-helper.h	/^namespace ns3 {$/;"	n
Create	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::Create (void) const$/;"	f	class:ns3::QosWifiMacHelper
Default	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::Default (void)$/;"	f	class:ns3::QosWifiMacHelper
QosWifiMacHelper	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::QosWifiMacHelper ()$/;"	f	class:ns3::QosWifiMacHelper
SetBlockAckInactivityTimeoutForAc	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::SetBlockAckInactivityTimeoutForAc (enum AcIndex ac, uint16_t timeout)$/;"	f	class:ns3::QosWifiMacHelper
SetBlockAckThresholdForAc	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::SetBlockAckThresholdForAc (enum AcIndex ac, uint8_t threshold)$/;"	f	class:ns3::QosWifiMacHelper
SetMpduAggregatorForAc	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::SetMpduAggregatorForAc (enum AcIndex ac, std::string name,$/;"	f	class:ns3::QosWifiMacHelper
SetMsduAggregatorForAc	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::SetMsduAggregatorForAc (AcIndex ac, std::string type,$/;"	f	class:ns3::QosWifiMacHelper
SetType	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::SetType (std::string type,$/;"	f	class:ns3::QosWifiMacHelper
Setup	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::Setup (Ptr<WifiMac> mac, enum AcIndex ac, std::string dcaAttrName) const$/;"	f	class:ns3::QosWifiMacHelper
ns3	helper/qos-wifi-mac-helper.cc	/^namespace ns3 {$/;"	n	file:
~QosWifiMacHelper	helper/qos-wifi-mac-helper.cc	/^QosWifiMacHelper::~QosWifiMacHelper ()$/;"	f	class:ns3::QosWifiMacHelper
QOS_WIFI_MAC_HELPER_H	helper/qos-wifi-mac-helper.h	21;"	d
QosWifiMacHelper	helper/qos-wifi-mac-helper.h	/^class QosWifiMacHelper : public WifiMacHelper$/;"	c	namespace:ns3
m_aggregators	helper/qos-wifi-mac-helper.h	/^  std::map<AcIndex, ObjectFactory> m_aggregators; \/\/!<$/;"	m	class:ns3::QosWifiMacHelper
m_bAckInactivityTimeouts	helper/qos-wifi-mac-helper.h	/^  std::map<AcIndex, uint16_t> m_bAckInactivityTimeouts;$/;"	m	class:ns3::QosWifiMacHelper
m_bAckThresholds	helper/qos-wifi-mac-helper.h	/^  std::map<AcIndex, uint8_t> m_bAckThresholds;$/;"	m	class:ns3::QosWifiMacHelper
m_mac	helper/qos-wifi-mac-helper.h	/^  ObjectFactory m_mac;$/;"	m	class:ns3::QosWifiMacHelper
m_mpduAggregator	helper/qos-wifi-mac-helper.h	/^  ObjectFactory m_mpduAggregator;                 \/\/!<$/;"	m	class:ns3::QosWifiMacHelper
ns3	helper/qos-wifi-mac-helper.h	/^namespace ns3 {$/;"	n
AssignStreams	helper/wifi-helper.cc	/^WifiHelper::AssignStreams (NetDeviceContainer c, int64_t stream)$/;"	f	class:ns3::WifiHelper
Default	helper/wifi-helper.cc	/^WifiHelper::Default (void)$/;"	f	class:ns3::WifiHelper
EnableLogComponents	helper/wifi-helper.cc	/^WifiHelper::EnableLogComponents (void)$/;"	f	class:ns3::WifiHelper
Install	helper/wifi-helper.cc	/^WifiHelper::Install (const WifiPhyHelper &phy,$/;"	f	class:ns3::WifiHelper
Install	helper/wifi-helper.cc	/^WifiHelper::Install (const WifiPhyHelper &phyHelper,$/;"	f	class:ns3::WifiHelper
SetRemoteStationManager	helper/wifi-helper.cc	/^WifiHelper::SetRemoteStationManager (std::string type,$/;"	f	class:ns3::WifiHelper
SetStandard	helper/wifi-helper.cc	/^WifiHelper::SetStandard (enum WifiPhyStandard standard)$/;"	f	class:ns3::WifiHelper
WifiHelper	helper/wifi-helper.cc	/^WifiHelper::WifiHelper ()$/;"	f	class:ns3::WifiHelper
ns3	helper/wifi-helper.cc	/^namespace ns3 {$/;"	n	file:
~WifiHelper	helper/wifi-helper.cc	/^WifiHelper::~WifiHelper ()$/;"	f	class:ns3::WifiHelper
~WifiMacHelper	helper/wifi-helper.cc	/^WifiMacHelper::~WifiMacHelper ()$/;"	f	class:ns3::WifiMacHelper
~WifiPhyHelper	helper/wifi-helper.cc	/^WifiPhyHelper::~WifiPhyHelper ()$/;"	f	class:ns3::WifiPhyHelper
WIFI_HELPER_H	helper/wifi-helper.h	23;"	d
WifiHelper	helper/wifi-helper.h	/^class WifiHelper$/;"	c	namespace:ns3
WifiMacHelper	helper/wifi-helper.h	/^class WifiMacHelper$/;"	c	namespace:ns3
WifiPhyHelper	helper/wifi-helper.h	/^class WifiPhyHelper$/;"	c	namespace:ns3
m_standard	helper/wifi-helper.h	/^  enum WifiPhyStandard m_standard;$/;"	m	class:ns3::WifiHelper	typeref:enum:ns3::WifiHelper::WifiPhyStandard
m_stationManager	helper/wifi-helper.h	/^  ObjectFactory m_stationManager;$/;"	m	class:ns3::WifiHelper
ns3	helper/wifi-helper.h	/^namespace ns3 {$/;"	n
AddPropagationLoss	helper/yans-wifi-helper.cc	/^YansWifiChannelHelper::AddPropagationLoss (std::string type,$/;"	f	class:ns3::YansWifiChannelHelper
AsciiPhyReceiveSinkWithContext	helper/yans-wifi-helper.cc	/^AsciiPhyReceiveSinkWithContext ($/;"	f	namespace:ns3
AsciiPhyReceiveSinkWithoutContext	helper/yans-wifi-helper.cc	/^AsciiPhyReceiveSinkWithoutContext ($/;"	f	namespace:ns3
AsciiPhyTransmitSinkWithContext	helper/yans-wifi-helper.cc	/^AsciiPhyTransmitSinkWithContext ($/;"	f	namespace:ns3
AsciiPhyTransmitSinkWithoutContext	helper/yans-wifi-helper.cc	/^AsciiPhyTransmitSinkWithoutContext ($/;"	f	namespace:ns3
AssignStreams	helper/yans-wifi-helper.cc	/^YansWifiChannelHelper::AssignStreams (Ptr<YansWifiChannel> c, int64_t stream)$/;"	f	class:ns3::YansWifiChannelHelper
Create	helper/yans-wifi-helper.cc	/^YansWifiChannelHelper::Create (void) const$/;"	f	class:ns3::YansWifiChannelHelper
Create	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::Create (Ptr<Node> node, Ptr<NetDevice> device) const$/;"	f	class:ns3::YansWifiPhyHelper
Default	helper/yans-wifi-helper.cc	/^YansWifiChannelHelper::Default (void)$/;"	f	class:ns3::YansWifiChannelHelper
Default	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::Default (void)$/;"	f	class:ns3::YansWifiPhyHelper
EnableAsciiInternal	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::EnableAsciiInternal ($/;"	f	class:ns3::YansWifiPhyHelper
EnablePcapInternal	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::EnablePcapInternal (std::string prefix, Ptr<NetDevice> nd, bool promiscuous, bool explicitFilename)$/;"	f	class:ns3::YansWifiPhyHelper
GetPcapDataLinkType	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::GetPcapDataLinkType (void) const$/;"	f	class:ns3::YansWifiPhyHelper
PcapSniffRxEvent	helper/yans-wifi-helper.cc	/^PcapSniffRxEvent ($/;"	f	namespace:ns3
PcapSniffTxEvent	helper/yans-wifi-helper.cc	/^PcapSniffTxEvent ($/;"	f	namespace:ns3
Set	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::Set (std::string name, const AttributeValue &v)$/;"	f	class:ns3::YansWifiPhyHelper
SetChannel	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::SetChannel (Ptr<YansWifiChannel> channel)$/;"	f	class:ns3::YansWifiPhyHelper
SetChannel	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::SetChannel (std::string channelName)$/;"	f	class:ns3::YansWifiPhyHelper
SetErrorRateModel	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::SetErrorRateModel (std::string name,$/;"	f	class:ns3::YansWifiPhyHelper
SetPcapDataLinkType	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::SetPcapDataLinkType (enum SupportedPcapDataLinkTypes dlt)$/;"	f	class:ns3::YansWifiPhyHelper
SetPropagationDelay	helper/yans-wifi-helper.cc	/^YansWifiChannelHelper::SetPropagationDelay (std::string type,$/;"	f	class:ns3::YansWifiChannelHelper
YansWifiChannelHelper	helper/yans-wifi-helper.cc	/^YansWifiChannelHelper::YansWifiChannelHelper ()$/;"	f	class:ns3::YansWifiChannelHelper
YansWifiPhyHelper	helper/yans-wifi-helper.cc	/^YansWifiPhyHelper::YansWifiPhyHelper ()$/;"	f	class:ns3::YansWifiPhyHelper
ns3	helper/yans-wifi-helper.cc	/^namespace ns3 {$/;"	n	file:
DLT_IEEE802_11	helper/yans-wifi-helper.h	/^    DLT_IEEE802_11       = PcapHelper::DLT_IEEE802_11,       \/**< IEEE 802.11 Wireless LAN headers on packets *\/$/;"	e	enum:ns3::YansWifiPhyHelper::SupportedPcapDataLinkTypes
DLT_IEEE802_11_RADIO	helper/yans-wifi-helper.h	/^    DLT_IEEE802_11_RADIO = PcapHelper::DLT_IEEE802_11_RADIO  \/**< Include Radiotap link layer information *\/$/;"	e	enum:ns3::YansWifiPhyHelper::SupportedPcapDataLinkTypes
DLT_PRISM_HEADER	helper/yans-wifi-helper.h	/^    DLT_PRISM_HEADER     = PcapHelper::DLT_PRISM_HEADER,     \/**< Include Prism monitor mode information *\/$/;"	e	enum:ns3::YansWifiPhyHelper::SupportedPcapDataLinkTypes
SupportedPcapDataLinkTypes	helper/yans-wifi-helper.h	/^  enum SupportedPcapDataLinkTypes$/;"	g	class:ns3::YansWifiPhyHelper
YANS_WIFI_HELPER_H	helper/yans-wifi-helper.h	21;"	d
YansWifiChannelHelper	helper/yans-wifi-helper.h	/^class YansWifiChannelHelper$/;"	c	namespace:ns3
YansWifiPhyHelper	helper/yans-wifi-helper.h	/^class YansWifiPhyHelper : public WifiPhyHelper,$/;"	c	namespace:ns3
m_channel	helper/yans-wifi-helper.h	/^  Ptr<YansWifiChannel> m_channel;$/;"	m	class:ns3::YansWifiPhyHelper
m_errorRateModel	helper/yans-wifi-helper.h	/^  ObjectFactory m_errorRateModel;$/;"	m	class:ns3::YansWifiPhyHelper
m_pcapDlt	helper/yans-wifi-helper.h	/^  uint32_t m_pcapDlt;$/;"	m	class:ns3::YansWifiPhyHelper
m_phy	helper/yans-wifi-helper.h	/^  ObjectFactory m_phy;$/;"	m	class:ns3::YansWifiPhyHelper
m_propagationDelay	helper/yans-wifi-helper.h	/^  ObjectFactory m_propagationDelay;$/;"	m	class:ns3::YansWifiChannelHelper
m_propagationLoss	helper/yans-wifi-helper.h	/^  std::vector<ObjectFactory> m_propagationLoss;$/;"	m	class:ns3::YansWifiChannelHelper
ns3	helper/yans-wifi-helper.h	/^namespace ns3 {$/;"	n
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
AarfWifiManager	model/aarf-wifi-manager.cc	/^AarfWifiManager::AarfWifiManager ()$/;"	f	class:ns3::AarfWifiManager
AarfWifiRemoteStation	model/aarf-wifi-manager.cc	/^struct AarfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
DoCreateStation	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AarfWifiManager
DoGetDataTxVector	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::AarfWifiManager
DoGetRtsTxVector	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AarfWifiManager
DoReportDataFailed	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AarfWifiManager
DoReportDataOk	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::AarfWifiManager
DoReportFinalDataFailed	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfWifiManager
DoReportFinalRtsFailed	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfWifiManager
DoReportRtsFailed	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfWifiManager
DoReportRtsOk	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::AarfWifiManager
DoReportRxOk	model/aarf-wifi-manager.cc	/^AarfWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::AarfWifiManager
GetTypeId	model/aarf-wifi-manager.cc	/^AarfWifiManager::GetTypeId (void)$/;"	f	class:ns3::AarfWifiManager
IsLowLatency	model/aarf-wifi-manager.cc	/^AarfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AarfWifiManager
Max	model/aarf-wifi-manager.cc	28;"	d	file:
Min	model/aarf-wifi-manager.cc	27;"	d	file:
m_failed	model/aarf-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_rate	model/aarf-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_recovery	model/aarf-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_retry	model/aarf-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_success	model/aarf-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_successThreshold	model/aarf-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_timer	model/aarf-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
m_timerTimeout	model/aarf-wifi-manager.cc	/^  uint32_t m_timerTimeout;$/;"	m	struct:ns3::AarfWifiRemoteStation	file:
ns3	model/aarf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~AarfWifiManager	model/aarf-wifi-manager.cc	/^AarfWifiManager::~AarfWifiManager ()$/;"	f	class:ns3::AarfWifiManager
AARF_WIFI_MANAGER_H	model/aarf-wifi-manager.h	21;"	d
AarfWifiManager	model/aarf-wifi-manager.h	/^class AarfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
m_maxSuccessThreshold	model/aarf-wifi-manager.h	/^  uint32_t m_maxSuccessThreshold;$/;"	m	class:ns3::AarfWifiManager
m_minSuccessThreshold	model/aarf-wifi-manager.h	/^  uint32_t m_minSuccessThreshold;$/;"	m	class:ns3::AarfWifiManager
m_minTimerThreshold	model/aarf-wifi-manager.h	/^  uint32_t m_minTimerThreshold;$/;"	m	class:ns3::AarfWifiManager
m_successK	model/aarf-wifi-manager.h	/^  double m_successK;$/;"	m	class:ns3::AarfWifiManager
m_timerK	model/aarf-wifi-manager.h	/^  double m_timerK;$/;"	m	class:ns3::AarfWifiManager
ns3	model/aarf-wifi-manager.h	/^namespace ns3 {$/;"	n
AarfcdWifiManager	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::AarfcdWifiManager ()$/;"	f	class:ns3::AarfcdWifiManager
AarfcdWifiRemoteStation	model/aarfcd-wifi-manager.cc	/^struct AarfcdWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
CheckRts	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::CheckRts (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
DoCreateStation	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AarfcdWifiManager
DoGetDataTxVector	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::AarfcdWifiManager
DoGetRtsTxVector	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AarfcdWifiManager
DoNeedRts	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoNeedRts (WifiRemoteStation *st,$/;"	f	class:ns3::AarfcdWifiManager
DoReportDataFailed	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AarfcdWifiManager
DoReportDataOk	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::AarfcdWifiManager
DoReportFinalDataFailed	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
DoReportFinalRtsFailed	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
DoReportRtsFailed	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
DoReportRtsOk	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::AarfcdWifiManager
DoReportRxOk	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::AarfcdWifiManager
GetTypeId	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::GetTypeId (void)$/;"	f	class:ns3::AarfcdWifiManager
IncreaseRtsWnd	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::IncreaseRtsWnd (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
IsLowLatency	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AarfcdWifiManager
Max	model/aarfcd-wifi-manager.cc	31;"	d	file:
Min	model/aarfcd-wifi-manager.cc	30;"	d	file:
ResetRtsWnd	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::ResetRtsWnd (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
TurnOffRts	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::TurnOffRts (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
TurnOnRts	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::TurnOnRts (AarfcdWifiRemoteStation *station)$/;"	f	class:ns3::AarfcdWifiManager
m_failed	model/aarfcd-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_haveASuccess	model/aarfcd-wifi-manager.cc	/^  bool m_haveASuccess;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_justModifyRate	model/aarfcd-wifi-manager.cc	/^  bool m_justModifyRate;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rate	model/aarfcd-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_recovery	model/aarfcd-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_retry	model/aarfcd-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rtsCounter	model/aarfcd-wifi-manager.cc	/^  uint32_t m_rtsCounter;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rtsOn	model/aarfcd-wifi-manager.cc	/^  bool m_rtsOn;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_rtsWnd	model/aarfcd-wifi-manager.cc	/^  uint32_t m_rtsWnd;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_success	model/aarfcd-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_successThreshold	model/aarfcd-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_timer	model/aarfcd-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
m_timerTimeout	model/aarfcd-wifi-manager.cc	/^  uint32_t m_timerTimeout;$/;"	m	struct:ns3::AarfcdWifiRemoteStation	file:
ns3	model/aarfcd-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~AarfcdWifiManager	model/aarfcd-wifi-manager.cc	/^AarfcdWifiManager::~AarfcdWifiManager ()$/;"	f	class:ns3::AarfcdWifiManager
AARFCD_WIFI_MANAGER_H	model/aarfcd-wifi-manager.h	21;"	d
AarfcdWifiManager	model/aarfcd-wifi-manager.h	/^class AarfcdWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
m_maxRtsWnd	model/aarfcd-wifi-manager.h	/^  uint32_t m_maxRtsWnd;$/;"	m	class:ns3::AarfcdWifiManager
m_maxSuccessThreshold	model/aarfcd-wifi-manager.h	/^  uint32_t m_maxSuccessThreshold;$/;"	m	class:ns3::AarfcdWifiManager
m_minRtsWnd	model/aarfcd-wifi-manager.h	/^  uint32_t m_minRtsWnd;$/;"	m	class:ns3::AarfcdWifiManager
m_minSuccessThreshold	model/aarfcd-wifi-manager.h	/^  uint32_t m_minSuccessThreshold;$/;"	m	class:ns3::AarfcdWifiManager
m_minTimerThreshold	model/aarfcd-wifi-manager.h	/^  uint32_t m_minTimerThreshold;$/;"	m	class:ns3::AarfcdWifiManager
m_successK	model/aarfcd-wifi-manager.h	/^  double m_successK;$/;"	m	class:ns3::AarfcdWifiManager
m_timerK	model/aarfcd-wifi-manager.h	/^  double m_timerK;$/;"	m	class:ns3::AarfcdWifiManager
m_turnOffRtsAfterRateDecrease	model/aarfcd-wifi-manager.h	/^  bool m_turnOffRtsAfterRateDecrease;$/;"	m	class:ns3::AarfcdWifiManager
m_turnOnRtsAfterRateIncrease	model/aarfcd-wifi-manager.h	/^  bool m_turnOnRtsAfterRateIncrease;$/;"	m	class:ns3::AarfcdWifiManager
ns3	model/aarfcd-wifi-manager.h	/^namespace ns3 {$/;"	n
AdhocWifiMac	model/adhoc-wifi-mac.cc	/^AdhocWifiMac::AdhocWifiMac ()$/;"	f	class:ns3::AdhocWifiMac
Enqueue	model/adhoc-wifi-mac.cc	/^AdhocWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to)$/;"	f	class:ns3::AdhocWifiMac
GetTypeId	model/adhoc-wifi-mac.cc	/^AdhocWifiMac::GetTypeId (void)$/;"	f	class:ns3::AdhocWifiMac
Receive	model/adhoc-wifi-mac.cc	/^AdhocWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::AdhocWifiMac
SetAddress	model/adhoc-wifi-mac.cc	/^AdhocWifiMac::SetAddress (Mac48Address address)$/;"	f	class:ns3::AdhocWifiMac
SetLinkUpCallback	model/adhoc-wifi-mac.cc	/^AdhocWifiMac::SetLinkUpCallback (Callback<void> linkUp)$/;"	f	class:ns3::AdhocWifiMac
ns3	model/adhoc-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
~AdhocWifiMac	model/adhoc-wifi-mac.cc	/^AdhocWifiMac::~AdhocWifiMac ()$/;"	f	class:ns3::AdhocWifiMac
ADHOC_WIFI_MAC_H	model/adhoc-wifi-mac.h	23;"	d
AdhocWifiMac	model/adhoc-wifi-mac.h	/^class AdhocWifiMac : public RegularWifiMac$/;"	c	namespace:ns3
ns3	model/adhoc-wifi-mac.h	/^namespace ns3 {$/;"	n
AmpduSubframeHeader	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::AmpduSubframeHeader ()$/;"	f	class:ns3::AmpduSubframeHeader
Deserialize	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::AmpduSubframeHeader
GetCrc	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetCrc (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetInstanceTypeId	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetLength	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetLength (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetSerializedSize	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetSerializedSize () const$/;"	f	class:ns3::AmpduSubframeHeader
GetSig	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetSig (void) const$/;"	f	class:ns3::AmpduSubframeHeader
GetTypeId	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::GetTypeId ()$/;"	f	class:ns3::AmpduSubframeHeader
Print	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::Print (std::ostream &os) const$/;"	f	class:ns3::AmpduSubframeHeader
Serialize	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::AmpduSubframeHeader
SetCrc	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::SetCrc (uint8_t crc)$/;"	f	class:ns3::AmpduSubframeHeader
SetLength	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::SetLength (uint16_t length)$/;"	f	class:ns3::AmpduSubframeHeader
SetSig	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::SetSig ()$/;"	f	class:ns3::AmpduSubframeHeader
ns3	model/ampdu-subframe-header.cc	/^namespace ns3 {$/;"	n	file:
~AmpduSubframeHeader	model/ampdu-subframe-header.cc	/^AmpduSubframeHeader::~AmpduSubframeHeader ()$/;"	f	class:ns3::AmpduSubframeHeader
AMPDU_SUBFRAME_HEADER_H	model/ampdu-subframe-header.h	21;"	d
AmpduSubframeHeader	model/ampdu-subframe-header.h	/^class AmpduSubframeHeader : public Header$/;"	c	namespace:ns3
m_crc	model/ampdu-subframe-header.h	/^  uint8_t m_crc;     \/\/!< CRC field$/;"	m	class:ns3::AmpduSubframeHeader
m_length	model/ampdu-subframe-header.h	/^  uint16_t m_length; \/\/!< length field$/;"	m	class:ns3::AmpduSubframeHeader
m_sig	model/ampdu-subframe-header.h	/^  uint8_t m_sig;     \/\/!< SIG field$/;"	m	class:ns3::AmpduSubframeHeader
ns3	model/ampdu-subframe-header.h	/^namespace ns3 {$/;"	n
AmpduTag	model/ampdu-tag.cc	/^AmpduTag::AmpduTag ()$/;"	f	class:ns3::AmpduTag
Deserialize	model/ampdu-tag.cc	/^AmpduTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::AmpduTag
GetAmpdu	model/ampdu-tag.cc	/^AmpduTag::GetAmpdu () const$/;"	f	class:ns3::AmpduTag
GetInstanceTypeId	model/ampdu-tag.cc	/^AmpduTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::AmpduTag
GetNoOfMpdus	model/ampdu-tag.cc	/^AmpduTag::GetNoOfMpdus () const$/;"	f	class:ns3::AmpduTag
GetSerializedSize	model/ampdu-tag.cc	/^AmpduTag::GetSerializedSize (void) const$/;"	f	class:ns3::AmpduTag
GetTypeId	model/ampdu-tag.cc	/^AmpduTag::GetTypeId (void)$/;"	f	class:ns3::AmpduTag
Print	model/ampdu-tag.cc	/^AmpduTag::Print (std::ostream &os) const$/;"	f	class:ns3::AmpduTag
Serialize	model/ampdu-tag.cc	/^AmpduTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::AmpduTag
SetAmpdu	model/ampdu-tag.cc	/^AmpduTag::SetAmpdu (bool supported)$/;"	f	class:ns3::AmpduTag
SetNoOfMpdus	model/ampdu-tag.cc	/^AmpduTag::SetNoOfMpdus (uint8_t noofmpdus)$/;"	f	class:ns3::AmpduTag
ns3	model/ampdu-tag.cc	/^namespace ns3 {$/;"	n	file:
AMPDU_TAG_H	model/ampdu-tag.h	21;"	d
AmpduTag	model/ampdu-tag.h	/^class AmpduTag : public Tag$/;"	c	namespace:ns3
m_ampdu	model/ampdu-tag.h	/^  uint8_t m_ampdu;     \/\/!< Flag whether it is an A-MPDU$/;"	m	class:ns3::AmpduTag
m_noOfMpdus	model/ampdu-tag.h	/^  uint8_t m_noOfMpdus; \/\/!< number of MPDUs in the A-MPDU$/;"	m	class:ns3::AmpduTag
ns3	model/ampdu-tag.h	/^namespace ns3 {$/;"	n
AmrrWifiManager	model/amrr-wifi-manager.cc	/^AmrrWifiManager::AmrrWifiManager ()$/;"	f	class:ns3::AmrrWifiManager
AmrrWifiRemoteStation	model/amrr-wifi-manager.cc	/^struct AmrrWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
DecreaseRate	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DecreaseRate (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
DoCreateStation	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AmrrWifiManager
DoGetDataTxVector	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::AmrrWifiManager
DoGetRtsTxVector	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AmrrWifiManager
DoReportDataFailed	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AmrrWifiManager
DoReportDataOk	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::AmrrWifiManager
DoReportFinalDataFailed	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AmrrWifiManager
DoReportFinalRtsFailed	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
DoReportRtsFailed	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
DoReportRtsOk	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::AmrrWifiManager
DoReportRxOk	model/amrr-wifi-manager.cc	/^AmrrWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::AmrrWifiManager
GetTypeId	model/amrr-wifi-manager.cc	/^AmrrWifiManager::GetTypeId (void)$/;"	f	class:ns3::AmrrWifiManager
IncreaseRate	model/amrr-wifi-manager.cc	/^AmrrWifiManager::IncreaseRate (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
IsEnough	model/amrr-wifi-manager.cc	/^AmrrWifiManager::IsEnough (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsFailure	model/amrr-wifi-manager.cc	/^AmrrWifiManager::IsFailure (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsLowLatency	model/amrr-wifi-manager.cc	/^AmrrWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AmrrWifiManager
IsMaxRate	model/amrr-wifi-manager.cc	/^AmrrWifiManager::IsMaxRate (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsMinRate	model/amrr-wifi-manager.cc	/^AmrrWifiManager::IsMinRate (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
IsSuccess	model/amrr-wifi-manager.cc	/^AmrrWifiManager::IsSuccess (AmrrWifiRemoteStation *station) const$/;"	f	class:ns3::AmrrWifiManager
Min	model/amrr-wifi-manager.cc	27;"	d	file:
ResetCnt	model/amrr-wifi-manager.cc	/^AmrrWifiManager::ResetCnt (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
UpdateMode	model/amrr-wifi-manager.cc	/^AmrrWifiManager::UpdateMode (AmrrWifiRemoteStation *station)$/;"	f	class:ns3::AmrrWifiManager
m_nextModeUpdate	model/amrr-wifi-manager.cc	/^  Time m_nextModeUpdate;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_recovery	model/amrr-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_retry	model/amrr-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_success	model/amrr-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_successThreshold	model/amrr-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_tx_err	model/amrr-wifi-manager.cc	/^  uint32_t m_tx_err;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_tx_ok	model/amrr-wifi-manager.cc	/^  uint32_t m_tx_ok;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_tx_retr	model/amrr-wifi-manager.cc	/^  uint32_t m_tx_retr;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
m_txrate	model/amrr-wifi-manager.cc	/^  uint32_t m_txrate;$/;"	m	struct:ns3::AmrrWifiRemoteStation	file:
ns3	model/amrr-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
AMRR_WIFI_MANAGER_H	model/amrr-wifi-manager.h	21;"	d
AmrrWifiManager	model/amrr-wifi-manager.h	/^class AmrrWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
m_failureRatio	model/amrr-wifi-manager.h	/^  double m_failureRatio;$/;"	m	class:ns3::AmrrWifiManager
m_maxSuccessThreshold	model/amrr-wifi-manager.h	/^  uint32_t m_maxSuccessThreshold;$/;"	m	class:ns3::AmrrWifiManager
m_minSuccessThreshold	model/amrr-wifi-manager.h	/^  uint32_t m_minSuccessThreshold;$/;"	m	class:ns3::AmrrWifiManager
m_successRatio	model/amrr-wifi-manager.h	/^  double m_successRatio;$/;"	m	class:ns3::AmrrWifiManager
m_updatePeriod	model/amrr-wifi-manager.h	/^  Time m_updatePeriod;$/;"	m	class:ns3::AmrrWifiManager
ns3	model/amrr-wifi-manager.h	/^namespace ns3 {$/;"	n
AmsduSubframeHeader	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::AmsduSubframeHeader ()$/;"	f	class:ns3::AmsduSubframeHeader
Deserialize	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::AmsduSubframeHeader
GetDestinationAddr	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetDestinationAddr (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetInstanceTypeId	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetLength	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetLength (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetSerializedSize	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetSerializedSize () const$/;"	f	class:ns3::AmsduSubframeHeader
GetSourceAddr	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetSourceAddr (void) const$/;"	f	class:ns3::AmsduSubframeHeader
GetTypeId	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::GetTypeId ()$/;"	f	class:ns3::AmsduSubframeHeader
Print	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::Print (std::ostream &os) const$/;"	f	class:ns3::AmsduSubframeHeader
Serialize	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::AmsduSubframeHeader
SetDestinationAddr	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::SetDestinationAddr (Mac48Address to)$/;"	f	class:ns3::AmsduSubframeHeader
SetLength	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::SetLength (uint16_t length)$/;"	f	class:ns3::AmsduSubframeHeader
SetSourceAddr	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::SetSourceAddr (Mac48Address from)$/;"	f	class:ns3::AmsduSubframeHeader
ns3	model/amsdu-subframe-header.cc	/^namespace ns3 {$/;"	n	file:
~AmsduSubframeHeader	model/amsdu-subframe-header.cc	/^AmsduSubframeHeader::~AmsduSubframeHeader ()$/;"	f	class:ns3::AmsduSubframeHeader
AMSDU_SUBFRAME_HEADER_H	model/amsdu-subframe-header.h	21;"	d
AmsduSubframeHeader	model/amsdu-subframe-header.h	/^class AmsduSubframeHeader : public Header$/;"	c	namespace:ns3
m_da	model/amsdu-subframe-header.h	/^  Mac48Address m_da;$/;"	m	class:ns3::AmsduSubframeHeader
m_length	model/amsdu-subframe-header.h	/^  uint16_t m_length;$/;"	m	class:ns3::AmsduSubframeHeader
m_sa	model/amsdu-subframe-header.h	/^  Mac48Address m_sa;$/;"	m	class:ns3::AmsduSubframeHeader
ns3	model/amsdu-subframe-header.h	/^namespace ns3 {$/;"	n
ApWifiMac	model/ap-wifi-mac.cc	/^ApWifiMac::ApWifiMac ()$/;"	f	class:ns3::ApWifiMac
AssignStreams	model/ap-wifi-mac.cc	/^ApWifiMac::AssignStreams (int64_t stream)$/;"	f	class:ns3::ApWifiMac
DeaggregateAmsduAndForward	model/ap-wifi-mac.cc	/^ApWifiMac::DeaggregateAmsduAndForward (Ptr<Packet> aggregatedPacket,$/;"	f	class:ns3::ApWifiMac
DoDispose	model/ap-wifi-mac.cc	/^ApWifiMac::DoDispose ()$/;"	f	class:ns3::ApWifiMac
DoInitialize	model/ap-wifi-mac.cc	/^ApWifiMac::DoInitialize (void)$/;"	f	class:ns3::ApWifiMac
Enqueue	model/ap-wifi-mac.cc	/^ApWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to)$/;"	f	class:ns3::ApWifiMac
Enqueue	model/ap-wifi-mac.cc	/^ApWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to, Mac48Address from)$/;"	f	class:ns3::ApWifiMac
ForwardDown	model/ap-wifi-mac.cc	/^ApWifiMac::ForwardDown (Ptr<const Packet> packet, Mac48Address from,$/;"	f	class:ns3::ApWifiMac
GetBeaconGeneration	model/ap-wifi-mac.cc	/^ApWifiMac::GetBeaconGeneration (void) const$/;"	f	class:ns3::ApWifiMac
GetBeaconInterval	model/ap-wifi-mac.cc	/^ApWifiMac::GetBeaconInterval (void) const$/;"	f	class:ns3::ApWifiMac
GetHtCapabilities	model/ap-wifi-mac.cc	/^ApWifiMac::GetHtCapabilities (void) const$/;"	f	class:ns3::ApWifiMac
GetSupportedRates	model/ap-wifi-mac.cc	/^ApWifiMac::GetSupportedRates (void) const$/;"	f	class:ns3::ApWifiMac
GetTypeId	model/ap-wifi-mac.cc	/^ApWifiMac::GetTypeId (void)$/;"	f	class:ns3::ApWifiMac
Receive	model/ap-wifi-mac.cc	/^ApWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::ApWifiMac
SendAssocResp	model/ap-wifi-mac.cc	/^ApWifiMac::SendAssocResp (Mac48Address to, bool success)$/;"	f	class:ns3::ApWifiMac
SendOneBeacon	model/ap-wifi-mac.cc	/^ApWifiMac::SendOneBeacon (void)$/;"	f	class:ns3::ApWifiMac
SendProbeResp	model/ap-wifi-mac.cc	/^ApWifiMac::SendProbeResp (Mac48Address to)$/;"	f	class:ns3::ApWifiMac
SetAddress	model/ap-wifi-mac.cc	/^ApWifiMac::SetAddress (Mac48Address address)$/;"	f	class:ns3::ApWifiMac
SetBeaconGeneration	model/ap-wifi-mac.cc	/^ApWifiMac::SetBeaconGeneration (bool enable)$/;"	f	class:ns3::ApWifiMac
SetBeaconInterval	model/ap-wifi-mac.cc	/^ApWifiMac::SetBeaconInterval (Time interval)$/;"	f	class:ns3::ApWifiMac
SetLinkUpCallback	model/ap-wifi-mac.cc	/^ApWifiMac::SetLinkUpCallback (Callback<void> linkUp)$/;"	f	class:ns3::ApWifiMac
SetWifiRemoteStationManager	model/ap-wifi-mac.cc	/^ApWifiMac::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> stationManager)$/;"	f	class:ns3::ApWifiMac
StartBeaconing	model/ap-wifi-mac.cc	/^ApWifiMac::StartBeaconing (void)$/;"	f	class:ns3::ApWifiMac
SupportsSendFrom	model/ap-wifi-mac.cc	/^ApWifiMac::SupportsSendFrom (void) const$/;"	f	class:ns3::ApWifiMac
TxFailed	model/ap-wifi-mac.cc	/^ApWifiMac::TxFailed (const WifiMacHeader &hdr)$/;"	f	class:ns3::ApWifiMac
TxOk	model/ap-wifi-mac.cc	/^ApWifiMac::TxOk (const WifiMacHeader &hdr)$/;"	f	class:ns3::ApWifiMac
ns3	model/ap-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
~ApWifiMac	model/ap-wifi-mac.cc	/^ApWifiMac::~ApWifiMac ()$/;"	f	class:ns3::ApWifiMac
AP_WIFI_MAC_H	model/ap-wifi-mac.h	23;"	d
ApWifiMac	model/ap-wifi-mac.h	/^class ApWifiMac : public RegularWifiMac$/;"	c	namespace:ns3
m_beaconDca	model/ap-wifi-mac.h	/^  Ptr<DcaTxop> m_beaconDca; \/\/!< Dedicated DcaTxop for beacons$/;"	m	class:ns3::ApWifiMac
m_beaconEvent	model/ap-wifi-mac.h	/^  EventId m_beaconEvent; \/\/!< Event to generate one beacon$/;"	m	class:ns3::ApWifiMac
m_beaconInterval	model/ap-wifi-mac.h	/^  Time m_beaconInterval; \/\/!< Interval between beacons$/;"	m	class:ns3::ApWifiMac
m_beaconJitter	model/ap-wifi-mac.h	/^  Ptr<UniformRandomVariable> m_beaconJitter; \/\/!< UniformRandomVariable used to randomize the time of the first beacon$/;"	m	class:ns3::ApWifiMac
m_enableBeaconGeneration	model/ap-wifi-mac.h	/^  bool m_enableBeaconGeneration; \/\/!< Flag if beacons are being generated$/;"	m	class:ns3::ApWifiMac
m_enableBeaconJitter	model/ap-wifi-mac.h	/^  bool m_enableBeaconJitter; \/\/!< Flag if the first beacon should be generated at random time$/;"	m	class:ns3::ApWifiMac
ns3	model/ap-wifi-mac.h	/^namespace ns3 {$/;"	n
AparfWifiManager	model/aparf-wifi-manager.cc	/^AparfWifiManager::AparfWifiManager ()$/;"	f	class:ns3::AparfWifiManager
AparfWifiRemoteStation	model/aparf-wifi-manager.cc	/^AparfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
CheckInit	model/aparf-wifi-manager.cc	/^AparfWifiManager::CheckInit (AparfWifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
DoCreateStation	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::AparfWifiManager
DoGetDataTxVector	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::AparfWifiManager
DoGetRtsTxVector	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::AparfWifiManager
DoReportDataFailed	model/aparf-wifi-manager.cc	/^void AparfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::AparfWifiManager
DoReportDataOk	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoReportDataOk (WifiRemoteStation *st, double ackSnr,$/;"	f	class:ns3::AparfWifiManager
DoReportFinalDataFailed	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
DoReportFinalRtsFailed	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
DoReportRtsFailed	model/aparf-wifi-manager.cc	/^void AparfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::AparfWifiManager
DoReportRtsOk	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoReportRtsOk (WifiRemoteStation *station, double ctsSnr,$/;"	f	class:ns3::AparfWifiManager
DoReportRxOk	model/aparf-wifi-manager.cc	/^AparfWifiManager::DoReportRxOk (WifiRemoteStation *station, double rxSnr, WifiMode txMode)$/;"	f	class:ns3::AparfWifiManager
GetTypeId	model/aparf-wifi-manager.cc	/^AparfWifiManager::GetTypeId (void)$/;"	f	class:ns3::AparfWifiManager
IsLowLatency	model/aparf-wifi-manager.cc	/^AparfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::AparfWifiManager
Min	model/aparf-wifi-manager.cc	26;"	d	file:
SetupPhy	model/aparf-wifi-manager.cc	/^AparfWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::AparfWifiManager
m_aparfState	model/aparf-wifi-manager.cc	/^  AparfWifiManager::State m_aparfState; \/\/!< The estimated state of the channel.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_failThreshold	model/aparf-wifi-manager.cc	/^  uint32_t m_failThreshold; \/\/!< The minimum number of failed transmissions to try a new power or rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_initialized	model/aparf-wifi-manager.cc	/^  bool m_initialized; \/\/!< For initializing variables.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_nFailed	model/aparf-wifi-manager.cc	/^  uint32_t m_nFailed; \/\/!< Number of failed transmission attempts.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_nSuccess	model/aparf-wifi-manager.cc	/^  uint32_t m_nSuccess; \/\/!< Number of successful transmission attempts.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_nSupported	model/aparf-wifi-manager.cc	/^  uint32_t m_nSupported; \/\/!< Number of supported rates by the remote station.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_pCount	model/aparf-wifi-manager.cc	/^  uint32_t m_pCount; \/\/!< Number of power changes.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_power	model/aparf-wifi-manager.cc	/^  uint8_t m_power; \/\/!< Current power.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_rate	model/aparf-wifi-manager.cc	/^  uint32_t m_rate; \/\/!< Current rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_rateCrit	model/aparf-wifi-manager.cc	/^  uint32_t m_rateCrit; \/\/!< Critical rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
m_successThreshold	model/aparf-wifi-manager.cc	/^  uint32_t m_successThreshold; \/\/!< The minimum number of successful transmissions to try a new power or rate.$/;"	m	struct:ns3::AparfWifiRemoteStation	file:
ns3	model/aparf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~AparfWifiManager	model/aparf-wifi-manager.cc	/^AparfWifiManager::~AparfWifiManager ()$/;"	f	class:ns3::AparfWifiManager
APARF_WIFI_MANAGER_H	model/aparf-wifi-manager.h	21;"	d
AparfWifiManager	model/aparf-wifi-manager.h	/^class AparfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
High	model/aparf-wifi-manager.h	/^    High,$/;"	e	enum:ns3::AparfWifiManager::State
Low	model/aparf-wifi-manager.h	/^    Low,$/;"	e	enum:ns3::AparfWifiManager::State
PowerChangeTracedCallback	model/aparf-wifi-manager.h	/^  typedef void (*PowerChangeTracedCallback)(const uint8_t power, const Mac48Address remoteAddress);$/;"	t	class:ns3::AparfWifiManager
RateChangeTracedCallback	model/aparf-wifi-manager.h	/^  typedef void (*RateChangeTracedCallback)(const uint32_t rate, const Mac48Address remoteAddress);$/;"	t	class:ns3::AparfWifiManager
Spread	model/aparf-wifi-manager.h	/^    Spread$/;"	e	enum:ns3::AparfWifiManager::State
State	model/aparf-wifi-manager.h	/^  enum State$/;"	g	class:ns3::AparfWifiManager
m_failMax	model/aparf-wifi-manager.h	/^  uint32_t m_failMax; \/\/!< The minimum number of failed transmissions to try a new power or rate.$/;"	m	class:ns3::AparfWifiManager
m_nPower	model/aparf-wifi-manager.h	/^  uint32_t m_nPower;$/;"	m	class:ns3::AparfWifiManager
m_powerChange	model/aparf-wifi-manager.h	/^  TracedCallback<uint8_t, Mac48Address> m_powerChange;$/;"	m	class:ns3::AparfWifiManager
m_powerDec	model/aparf-wifi-manager.h	/^  uint32_t m_powerDec; \/\/!< Step size for decrement the power.$/;"	m	class:ns3::AparfWifiManager
m_powerInc	model/aparf-wifi-manager.h	/^  uint32_t m_powerInc; \/\/!< Step size for increment the power.$/;"	m	class:ns3::AparfWifiManager
m_powerMax	model/aparf-wifi-manager.h	/^  uint32_t m_powerMax; \/\/!< The maximum number of power changes.$/;"	m	class:ns3::AparfWifiManager
m_rateChange	model/aparf-wifi-manager.h	/^  TracedCallback<uint32_t, Mac48Address> m_rateChange;$/;"	m	class:ns3::AparfWifiManager
m_rateDec	model/aparf-wifi-manager.h	/^  uint32_t m_rateDec; \/\/!< Step size for decrement the rate.$/;"	m	class:ns3::AparfWifiManager
m_rateInc	model/aparf-wifi-manager.h	/^  uint32_t m_rateInc; \/\/!< Step size for increment the rate.$/;"	m	class:ns3::AparfWifiManager
m_succesMax1	model/aparf-wifi-manager.h	/^  uint32_t m_succesMax1; \/\/!< The minimum number of successful transmissions in \\"High\\" state to try a new power or rate.$/;"	m	class:ns3::AparfWifiManager
m_succesMax2	model/aparf-wifi-manager.h	/^  uint32_t m_succesMax2; \/\/!< The minimum number of successful transmissions in \\"Low\\" state to try a new power or rate.$/;"	m	class:ns3::AparfWifiManager
ns3	model/aparf-wifi-manager.h	/^namespace ns3 {$/;"	n
ArfWifiManager	model/arf-wifi-manager.cc	/^ArfWifiManager::ArfWifiManager ()$/;"	f	class:ns3::ArfWifiManager
ArfWifiRemoteStation	model/arf-wifi-manager.cc	/^struct ArfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
DoCreateStation	model/arf-wifi-manager.cc	/^ArfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::ArfWifiManager
DoGetDataTxVector	model/arf-wifi-manager.cc	/^ArfWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::ArfWifiManager
DoGetRtsTxVector	model/arf-wifi-manager.cc	/^ArfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ArfWifiManager
DoReportDataFailed	model/arf-wifi-manager.cc	/^ArfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::ArfWifiManager
DoReportDataOk	model/arf-wifi-manager.cc	/^void ArfWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::ArfWifiManager
DoReportFinalDataFailed	model/arf-wifi-manager.cc	/^ArfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ArfWifiManager
DoReportFinalRtsFailed	model/arf-wifi-manager.cc	/^ArfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ArfWifiManager
DoReportRtsFailed	model/arf-wifi-manager.cc	/^ArfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ArfWifiManager
DoReportRtsOk	model/arf-wifi-manager.cc	/^void ArfWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::ArfWifiManager
DoReportRxOk	model/arf-wifi-manager.cc	/^ArfWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::ArfWifiManager
GetTypeId	model/arf-wifi-manager.cc	/^ArfWifiManager::GetTypeId (void)$/;"	f	class:ns3::ArfWifiManager
IsLowLatency	model/arf-wifi-manager.cc	/^ArfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::ArfWifiManager
Min	model/arf-wifi-manager.cc	26;"	d	file:
m_failed	model/arf-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_rate	model/arf-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_recovery	model/arf-wifi-manager.cc	/^  bool m_recovery;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_retry	model/arf-wifi-manager.cc	/^  uint32_t m_retry;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_success	model/arf-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_successThreshold	model/arf-wifi-manager.cc	/^  uint32_t m_successThreshold;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_timer	model/arf-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
m_timerTimeout	model/arf-wifi-manager.cc	/^  uint32_t m_timerTimeout;$/;"	m	struct:ns3::ArfWifiRemoteStation	file:
ns3	model/arf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~ArfWifiManager	model/arf-wifi-manager.cc	/^ArfWifiManager::~ArfWifiManager ()$/;"	f	class:ns3::ArfWifiManager
ARF_WIFI_MANAGER_H	model/arf-wifi-manager.h	21;"	d
ArfWifiManager	model/arf-wifi-manager.h	/^class ArfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
m_successThreshold	model/arf-wifi-manager.h	/^  uint32_t m_successThreshold;$/;"	m	class:ns3::ArfWifiManager
m_timerThreshold	model/arf-wifi-manager.h	/^  uint32_t m_timerThreshold;$/;"	m	class:ns3::ArfWifiManager
ns3	model/arf-wifi-manager.h	/^namespace ns3 {$/;"	n
BlockAckAgreement	model/block-ack-agreement.cc	/^BlockAckAgreement::BlockAckAgreement ()$/;"	f	class:ns3::BlockAckAgreement
BlockAckAgreement	model/block-ack-agreement.cc	/^BlockAckAgreement::BlockAckAgreement (Mac48Address peer, uint8_t tid)$/;"	f	class:ns3::BlockAckAgreement
GetBufferSize	model/block-ack-agreement.cc	/^BlockAckAgreement::GetBufferSize (void) const$/;"	f	class:ns3::BlockAckAgreement
GetPeer	model/block-ack-agreement.cc	/^BlockAckAgreement::GetPeer (void) const$/;"	f	class:ns3::BlockAckAgreement
GetStartingSequence	model/block-ack-agreement.cc	/^BlockAckAgreement::GetStartingSequence (void) const$/;"	f	class:ns3::BlockAckAgreement
GetStartingSequenceControl	model/block-ack-agreement.cc	/^BlockAckAgreement::GetStartingSequenceControl (void) const$/;"	f	class:ns3::BlockAckAgreement
GetTid	model/block-ack-agreement.cc	/^BlockAckAgreement::GetTid (void) const$/;"	f	class:ns3::BlockAckAgreement
GetTimeout	model/block-ack-agreement.cc	/^BlockAckAgreement::GetTimeout (void) const$/;"	f	class:ns3::BlockAckAgreement
GetWinEnd	model/block-ack-agreement.cc	/^BlockAckAgreement::GetWinEnd (void) const$/;"	f	class:ns3::BlockAckAgreement
IsAmsduSupported	model/block-ack-agreement.cc	/^BlockAckAgreement::IsAmsduSupported (void) const$/;"	f	class:ns3::BlockAckAgreement
IsHtSupported	model/block-ack-agreement.cc	/^BlockAckAgreement::IsHtSupported (void) const$/;"	f	class:ns3::BlockAckAgreement
IsImmediateBlockAck	model/block-ack-agreement.cc	/^BlockAckAgreement::IsImmediateBlockAck (void) const$/;"	f	class:ns3::BlockAckAgreement
SetAmsduSupport	model/block-ack-agreement.cc	/^BlockAckAgreement::SetAmsduSupport (bool supported)$/;"	f	class:ns3::BlockAckAgreement
SetBufferSize	model/block-ack-agreement.cc	/^BlockAckAgreement::SetBufferSize (uint16_t bufferSize)$/;"	f	class:ns3::BlockAckAgreement
SetDelayedBlockAck	model/block-ack-agreement.cc	/^BlockAckAgreement::SetDelayedBlockAck (void)$/;"	f	class:ns3::BlockAckAgreement
SetHtSupported	model/block-ack-agreement.cc	/^BlockAckAgreement::SetHtSupported (bool htSupported)$/;"	f	class:ns3::BlockAckAgreement
SetImmediateBlockAck	model/block-ack-agreement.cc	/^BlockAckAgreement::SetImmediateBlockAck (void)$/;"	f	class:ns3::BlockAckAgreement
SetStartingSequence	model/block-ack-agreement.cc	/^BlockAckAgreement::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::BlockAckAgreement
SetTimeout	model/block-ack-agreement.cc	/^BlockAckAgreement::SetTimeout (uint16_t timeout)$/;"	f	class:ns3::BlockAckAgreement
SetWinEnd	model/block-ack-agreement.cc	/^BlockAckAgreement::SetWinEnd (uint16_t seq)$/;"	f	class:ns3::BlockAckAgreement
ns3	model/block-ack-agreement.cc	/^namespace ns3 {$/;"	n	file:
~BlockAckAgreement	model/block-ack-agreement.cc	/^BlockAckAgreement::~BlockAckAgreement ()$/;"	f	class:ns3::BlockAckAgreement
BLOCK_ACK_AGREEMENT_H	model/block-ack-agreement.h	21;"	d
BlockAckAgreement	model/block-ack-agreement.h	/^class BlockAckAgreement$/;"	c	namespace:ns3
m_amsduSupported	model/block-ack-agreement.h	/^  uint8_t m_amsduSupported;  \/\/!< Flag whether MSDU aggregation is supported$/;"	m	class:ns3::BlockAckAgreement
m_blockAckPolicy	model/block-ack-agreement.h	/^  uint8_t m_blockAckPolicy;  \/\/!< Type of block ack: immediate or delayed$/;"	m	class:ns3::BlockAckAgreement
m_bufferSize	model/block-ack-agreement.h	/^  uint16_t m_bufferSize;     \/\/!< Buffer size$/;"	m	class:ns3::BlockAckAgreement
m_htSupported	model/block-ack-agreement.h	/^  uint8_t m_htSupported;     \/\/!< Flag whether HT is supported$/;"	m	class:ns3::BlockAckAgreement
m_inactivityEvent	model/block-ack-agreement.h	/^  EventId m_inactivityEvent; \/\/!<$/;"	m	class:ns3::BlockAckAgreement
m_peer	model/block-ack-agreement.h	/^  Mac48Address m_peer;       \/\/!< Peer address$/;"	m	class:ns3::BlockAckAgreement
m_startingSeq	model/block-ack-agreement.h	/^  uint16_t m_startingSeq;    \/\/!< Starting squence control$/;"	m	class:ns3::BlockAckAgreement
m_tid	model/block-ack-agreement.h	/^  uint8_t m_tid;             \/\/!< Traffic ID$/;"	m	class:ns3::BlockAckAgreement
m_timeout	model/block-ack-agreement.h	/^  uint16_t m_timeout;        \/\/!< Timeout$/;"	m	class:ns3::BlockAckAgreement
m_winEnd	model/block-ack-agreement.h	/^  uint16_t m_winEnd;         \/\/!< Ending sequence number$/;"	m	class:ns3::BlockAckAgreement
ns3	model/block-ack-agreement.h	/^namespace ns3 {$/;"	n
FillBlockAckBitmap	model/block-ack-cache.cc	/^BlockAckCache::FillBlockAckBitmap (CtrlBAckResponseHeader *blockAckHeader)$/;"	f	class:ns3::BlockAckCache
GetWinStart	model/block-ack-cache.cc	/^BlockAckCache::GetWinStart ()$/;"	f	class:ns3::BlockAckCache
Init	model/block-ack-cache.cc	/^BlockAckCache::Init (uint16_t winStart, uint16_t winSize)$/;"	f	class:ns3::BlockAckCache
IsInWindow	model/block-ack-cache.cc	/^BlockAckCache::IsInWindow (uint16_t seq)$/;"	f	class:ns3::BlockAckCache
ResetPortionOfBitmap	model/block-ack-cache.cc	/^BlockAckCache::ResetPortionOfBitmap (uint16_t start, uint16_t end)$/;"	f	class:ns3::BlockAckCache
UpdateWithBlockAckReq	model/block-ack-cache.cc	/^BlockAckCache::UpdateWithBlockAckReq (uint16_t startingSeq)$/;"	f	class:ns3::BlockAckCache
UpdateWithMpdu	model/block-ack-cache.cc	/^BlockAckCache::UpdateWithMpdu (const WifiMacHeader *hdr)$/;"	f	class:ns3::BlockAckCache
WINSIZE_ASSERT	model/block-ack-cache.cc	26;"	d	file:
ns3	model/block-ack-cache.cc	/^namespace ns3 {$/;"	n	file:
BLOCK_ACK_CACHE_H	model/block-ack-cache.h	21;"	d
BlockAckCache	model/block-ack-cache.h	/^class BlockAckCache$/;"	c	namespace:ns3
m_bitmap	model/block-ack-cache.h	/^  uint16_t m_bitmap[4096];$/;"	m	class:ns3::BlockAckCache
m_winEnd	model/block-ack-cache.h	/^  uint16_t m_winEnd;$/;"	m	class:ns3::BlockAckCache
m_winSize	model/block-ack-cache.h	/^  uint8_t m_winSize;$/;"	m	class:ns3::BlockAckCache
m_winStart	model/block-ack-cache.h	/^  uint16_t m_winStart;$/;"	m	class:ns3::BlockAckCache
ns3	model/block-ack-cache.h	/^namespace ns3 {$/;"	n
AlreadyExists	model/block-ack-manager.cc	/^BlockAckManager::AlreadyExists(uint16_t currentSeq, Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
Bar	model/block-ack-manager.cc	/^Bar::Bar ()$/;"	f	class:ns3::Bar
Bar	model/block-ack-manager.cc	/^Bar::Bar (Ptr<const Packet> bar, Mac48Address recipient, uint8_t tid, bool immediate)$/;"	f	class:ns3::Bar
BlockAckManager	model/block-ack-manager.cc	/^BlockAckManager::BlockAckManager ()$/;"	f	class:ns3::BlockAckManager
CleanupBuffers	model/block-ack-manager.cc	/^BlockAckManager::CleanupBuffers (void)$/;"	f	class:ns3::BlockAckManager
CompleteAmpduExchange	model/block-ack-manager.cc	/^BlockAckManager::CompleteAmpduExchange(Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
CreateAgreement	model/block-ack-manager.cc	/^BlockAckManager::CreateAgreement (const MgtAddBaRequestHeader *reqHdr, Mac48Address recipient)$/;"	f	class:ns3::BlockAckManager
DestroyAgreement	model/block-ack-manager.cc	/^BlockAckManager::DestroyAgreement (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
ExistsAgreement	model/block-ack-manager.cc	/^BlockAckManager::ExistsAgreement (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
ExistsAgreementInState	model/block-ack-manager.cc	/^BlockAckManager::ExistsAgreementInState (Mac48Address recipient, uint8_t tid,$/;"	f	class:ns3::BlockAckManager
GetNBufferedPackets	model/block-ack-manager.cc	/^BlockAckManager::GetNBufferedPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
GetNRetryNeededPackets	model/block-ack-manager.cc	/^BlockAckManager::GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
GetNextPacket	model/block-ack-manager.cc	/^BlockAckManager::GetNextPacket (WifiMacHeader &hdr)$/;"	f	class:ns3::BlockAckManager
GetNextPacketSize	model/block-ack-manager.cc	/^BlockAckManager::GetNextPacketSize (void) const$/;"	f	class:ns3::BlockAckManager
GetSeqNumOfNextRetryPacket	model/block-ack-manager.cc	/^BlockAckManager::GetSeqNumOfNextRetryPacket (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::BlockAckManager
HasBar	model/block-ack-manager.cc	/^BlockAckManager::HasBar (struct Bar &bar)$/;"	f	class:ns3::BlockAckManager
HasOtherFragments	model/block-ack-manager.cc	/^BlockAckManager::HasOtherFragments (uint16_t sequenceNumber) const$/;"	f	class:ns3::BlockAckManager
HasPackets	model/block-ack-manager.cc	/^BlockAckManager::HasPackets (void) const$/;"	f	class:ns3::BlockAckManager
InactivityTimeout	model/block-ack-manager.cc	/^BlockAckManager::InactivityTimeout (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
InsertInRetryQueue	model/block-ack-manager.cc	/^BlockAckManager::InsertInRetryQueue (PacketQueueI item)$/;"	f	class:ns3::BlockAckManager
Item	model/block-ack-manager.cc	/^BlockAckManager::Item::Item ()$/;"	f	class:ns3::BlockAckManager::Item
Item	model/block-ack-manager.cc	/^BlockAckManager::Item::Item (Ptr<const Packet> packet, const WifiMacHeader &hdr, Time tStamp)$/;"	f	class:ns3::BlockAckManager::Item
NeedBarRetransmission	model/block-ack-manager.cc	/^bool BlockAckManager::NeedBarRetransmission (uint8_t tid, uint16_t seqNumber, Mac48Address recipient)$/;"	f	class:ns3::BlockAckManager
NotifyAgreementEstablished	model/block-ack-manager.cc	/^BlockAckManager::NotifyAgreementEstablished (Mac48Address recipient, uint8_t tid, uint16_t startingSeq)$/;"	f	class:ns3::BlockAckManager
NotifyAgreementUnsuccessful	model/block-ack-manager.cc	/^BlockAckManager::NotifyAgreementUnsuccessful (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
NotifyGotBlockAck	model/block-ack-manager.cc	/^BlockAckManager::NotifyGotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address recipient, WifiMode txMode)$/;"	f	class:ns3::BlockAckManager
NotifyMpduTransmission	model/block-ack-manager.cc	/^BlockAckManager::NotifyMpduTransmission (Mac48Address recipient, uint8_t tid, uint16_t nextSeqNumber, enum WifiMacHeader::QosAckPolicy policy)$/;"	f	class:ns3::BlockAckManager
PeekNextPacket	model/block-ack-manager.cc	/^BlockAckManager::PeekNextPacket (WifiMacHeader &hdr, Mac48Address recipient, uint8_t tid, Time *tstamp)$/;"	f	class:ns3::BlockAckManager
RemovePacket	model/block-ack-manager.cc	/^BlockAckManager::RemovePacket (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::BlockAckManager
ScheduleBlockAckReqIfNeeded	model/block-ack-manager.cc	/^BlockAckManager::ScheduleBlockAckReqIfNeeded (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
SetBlockAckInactivityCallback	model/block-ack-manager.cc	/^BlockAckManager::SetBlockAckInactivityCallback (Callback<void, Mac48Address, uint8_t, bool> callback)$/;"	f	class:ns3::BlockAckManager
SetBlockAckThreshold	model/block-ack-manager.cc	/^BlockAckManager::SetBlockAckThreshold (uint8_t nPackets)$/;"	f	class:ns3::BlockAckManager
SetBlockAckType	model/block-ack-manager.cc	/^BlockAckManager::SetBlockAckType (enum BlockAckType bAckType)$/;"	f	class:ns3::BlockAckManager
SetBlockDestinationCallback	model/block-ack-manager.cc	/^BlockAckManager::SetBlockDestinationCallback (Callback<void, Mac48Address, uint8_t> callback)$/;"	f	class:ns3::BlockAckManager
SetMaxPacketDelay	model/block-ack-manager.cc	/^BlockAckManager::SetMaxPacketDelay (Time maxDelay)$/;"	f	class:ns3::BlockAckManager
SetQueue	model/block-ack-manager.cc	/^BlockAckManager::SetQueue (Ptr<WifiMacQueue> queue)$/;"	f	class:ns3::BlockAckManager
SetTxFailedCallback	model/block-ack-manager.cc	/^BlockAckManager::SetTxFailedCallback (TxFailed callback)$/;"	f	class:ns3::BlockAckManager
SetTxMiddle	model/block-ack-manager.cc	/^BlockAckManager::SetTxMiddle (MacTxMiddle* txMiddle)$/;"	f	class:ns3::BlockAckManager
SetTxOkCallback	model/block-ack-manager.cc	/^BlockAckManager::SetTxOkCallback (TxOk callback)$/;"	f	class:ns3::BlockAckManager
SetUnblockDestinationCallback	model/block-ack-manager.cc	/^BlockAckManager::SetUnblockDestinationCallback (Callback<void, Mac48Address, uint8_t> callback)$/;"	f	class:ns3::BlockAckManager
SetWifiRemoteStationManager	model/block-ack-manager.cc	/^BlockAckManager::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> manager)$/;"	f	class:ns3::BlockAckManager
StorePacket	model/block-ack-manager.cc	/^BlockAckManager::StorePacket (Ptr<const Packet> packet, const WifiMacHeader &hdr, Time tStamp)$/;"	f	class:ns3::BlockAckManager
SwitchToBlockAckIfNeeded	model/block-ack-manager.cc	/^BlockAckManager::SwitchToBlockAckIfNeeded (Mac48Address recipient, uint8_t tid, uint16_t startingSeq)$/;"	f	class:ns3::BlockAckManager
TearDownBlockAck	model/block-ack-manager.cc	/^BlockAckManager::TearDownBlockAck (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::BlockAckManager
UpdateAgreement	model/block-ack-manager.cc	/^BlockAckManager::UpdateAgreement (const MgtAddBaResponseHeader *respHdr, Mac48Address recipient)$/;"	f	class:ns3::BlockAckManager
ns3	model/block-ack-manager.cc	/^namespace ns3 {$/;"	n	file:
~BlockAckManager	model/block-ack-manager.cc	/^BlockAckManager::~BlockAckManager ()$/;"	f	class:ns3::BlockAckManager
Agreements	model/block-ack-manager.h	/^                   std::pair<OriginatorBlockAckAgreement, PacketQueue> > Agreements;$/;"	t	class:ns3::BlockAckManager
AgreementsCI	model/block-ack-manager.h	/^                   std::pair<OriginatorBlockAckAgreement, PacketQueue> >::const_iterator AgreementsCI;$/;"	t	class:ns3::BlockAckManager
AgreementsI	model/block-ack-manager.h	/^                   std::pair<OriginatorBlockAckAgreement, PacketQueue> >::iterator AgreementsI;$/;"	t	class:ns3::BlockAckManager
BLOCK_ACK_MANAGER_H	model/block-ack-manager.h	21;"	d
Bar	model/block-ack-manager.h	/^struct Bar$/;"	s	namespace:ns3
BlockAckManager	model/block-ack-manager.h	/^class BlockAckManager$/;"	c	namespace:ns3
Item	model/block-ack-manager.h	/^  struct Item$/;"	s	class:ns3::BlockAckManager
PacketQueue	model/block-ack-manager.h	/^  typedef std::list<Item> PacketQueue;$/;"	t	class:ns3::BlockAckManager
PacketQueueCI	model/block-ack-manager.h	/^  typedef std::list<Item>::const_iterator PacketQueueCI;$/;"	t	class:ns3::BlockAckManager
PacketQueueI	model/block-ack-manager.h	/^  typedef std::list<Item>::iterator PacketQueueI;$/;"	t	class:ns3::BlockAckManager
TxFailed	model/block-ack-manager.h	/^  typedef Callback <void, const WifiMacHeader&> TxFailed;$/;"	t	class:ns3::BlockAckManager
TxOk	model/block-ack-manager.h	/^  typedef Callback <void, const WifiMacHeader&> TxOk;$/;"	t	class:ns3::BlockAckManager
bar	model/block-ack-manager.h	/^  Ptr<const Packet> bar;$/;"	m	struct:ns3::Bar
hdr	model/block-ack-manager.h	/^    WifiMacHeader hdr;$/;"	m	struct:ns3::BlockAckManager::Item
immediate	model/block-ack-manager.h	/^  bool immediate;$/;"	m	struct:ns3::Bar
m_address	model/block-ack-manager.h	/^  Mac48Address m_address;$/;"	m	class:ns3::BlockAckManager
m_agreements	model/block-ack-manager.h	/^  Agreements m_agreements;$/;"	m	class:ns3::BlockAckManager
m_bars	model/block-ack-manager.h	/^  std::list<Bar> m_bars;$/;"	m	class:ns3::BlockAckManager
m_blockAckInactivityTimeout	model/block-ack-manager.h	/^  Callback<void, Mac48Address, uint8_t, bool> m_blockAckInactivityTimeout;$/;"	m	class:ns3::BlockAckManager
m_blockAckThreshold	model/block-ack-manager.h	/^  uint8_t m_blockAckThreshold;$/;"	m	class:ns3::BlockAckManager
m_blockAckType	model/block-ack-manager.h	/^  enum BlockAckType m_blockAckType;$/;"	m	class:ns3::BlockAckManager	typeref:enum:ns3::BlockAckManager::BlockAckType
m_blockPackets	model/block-ack-manager.h	/^  Callback<void, Mac48Address, uint8_t> m_blockPackets;$/;"	m	class:ns3::BlockAckManager
m_maxDelay	model/block-ack-manager.h	/^  Time m_maxDelay;$/;"	m	class:ns3::BlockAckManager
m_queue	model/block-ack-manager.h	/^  Ptr<WifiMacQueue> m_queue;$/;"	m	class:ns3::BlockAckManager
m_retryPackets	model/block-ack-manager.h	/^  std::list<PacketQueueI> m_retryPackets;$/;"	m	class:ns3::BlockAckManager
m_stationManager	model/block-ack-manager.h	/^  Ptr<WifiRemoteStationManager> m_stationManager; \/\/!<$/;"	m	class:ns3::BlockAckManager
m_txFailedCallback	model/block-ack-manager.h	/^  TxFailed m_txFailedCallback;$/;"	m	class:ns3::BlockAckManager
m_txMiddle	model/block-ack-manager.h	/^  MacTxMiddle* m_txMiddle;$/;"	m	class:ns3::BlockAckManager
m_txOkCallback	model/block-ack-manager.h	/^  TxOk m_txOkCallback;$/;"	m	class:ns3::BlockAckManager
m_unblockPackets	model/block-ack-manager.h	/^  Callback<void, Mac48Address, uint8_t> m_unblockPackets;$/;"	m	class:ns3::BlockAckManager
ns3	model/block-ack-manager.h	/^namespace ns3 {$/;"	n
packet	model/block-ack-manager.h	/^    Ptr<const Packet> packet;$/;"	m	struct:ns3::BlockAckManager::Item
recipient	model/block-ack-manager.h	/^  Mac48Address recipient;$/;"	m	struct:ns3::Bar
tid	model/block-ack-manager.h	/^  uint8_t tid;$/;"	m	struct:ns3::Bar
timestamp	model/block-ack-manager.h	/^    Time timestamp;$/;"	m	struct:ns3::BlockAckManager::Item
CapabilityInformation	model/capability-information.cc	/^CapabilityInformation::CapabilityInformation ()$/;"	f	class:ns3::CapabilityInformation
Clear	model/capability-information.cc	/^CapabilityInformation::Clear (uint8_t n)$/;"	f	class:ns3::CapabilityInformation
Deserialize	model/capability-information.cc	/^CapabilityInformation::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::CapabilityInformation
GetSerializedSize	model/capability-information.cc	/^CapabilityInformation::GetSerializedSize (void) const$/;"	f	class:ns3::CapabilityInformation
Is	model/capability-information.cc	/^CapabilityInformation::Is (uint8_t n) const$/;"	f	class:ns3::CapabilityInformation
IsEss	model/capability-information.cc	/^CapabilityInformation::IsEss (void) const$/;"	f	class:ns3::CapabilityInformation
IsIbss	model/capability-information.cc	/^CapabilityInformation::IsIbss (void) const$/;"	f	class:ns3::CapabilityInformation
Serialize	model/capability-information.cc	/^CapabilityInformation::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::CapabilityInformation
Set	model/capability-information.cc	/^CapabilityInformation::Set (uint8_t n)$/;"	f	class:ns3::CapabilityInformation
SetEss	model/capability-information.cc	/^CapabilityInformation::SetEss (void)$/;"	f	class:ns3::CapabilityInformation
SetIbss	model/capability-information.cc	/^CapabilityInformation::SetIbss (void)$/;"	f	class:ns3::CapabilityInformation
ns3	model/capability-information.cc	/^namespace ns3 {$/;"	n	file:
CAPABILITY_INFORMATION_H	model/capability-information.h	21;"	d
CapabilityInformation	model/capability-information.h	/^class CapabilityInformation$/;"	c	namespace:ns3
m_capability	model/capability-information.h	/^  uint16_t m_capability;$/;"	m	class:ns3::CapabilityInformation
ns3	model/capability-information.h	/^namespace ns3 {$/;"	n
CaraWifiManager	model/cara-wifi-manager.cc	/^CaraWifiManager::CaraWifiManager ()$/;"	f	class:ns3::CaraWifiManager
CaraWifiRemoteStation	model/cara-wifi-manager.cc	/^struct CaraWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
DoCreateStation	model/cara-wifi-manager.cc	/^CaraWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::CaraWifiManager
DoGetDataTxVector	model/cara-wifi-manager.cc	/^CaraWifiManager::DoGetDataTxVector (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoGetRtsTxVector	model/cara-wifi-manager.cc	/^CaraWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoNeedRts	model/cara-wifi-manager.cc	/^CaraWifiManager::DoNeedRts (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoReportDataFailed	model/cara-wifi-manager.cc	/^CaraWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportDataOk	model/cara-wifi-manager.cc	/^CaraWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoReportFinalDataFailed	model/cara-wifi-manager.cc	/^CaraWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportFinalRtsFailed	model/cara-wifi-manager.cc	/^CaraWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportRtsFailed	model/cara-wifi-manager.cc	/^CaraWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::CaraWifiManager
DoReportRtsOk	model/cara-wifi-manager.cc	/^CaraWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
DoReportRxOk	model/cara-wifi-manager.cc	/^CaraWifiManager::DoReportRxOk (WifiRemoteStation *st,$/;"	f	class:ns3::CaraWifiManager
GetTypeId	model/cara-wifi-manager.cc	/^CaraWifiManager::GetTypeId (void)$/;"	f	class:ns3::CaraWifiManager
IsLowLatency	model/cara-wifi-manager.cc	/^CaraWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::CaraWifiManager
Min	model/cara-wifi-manager.cc	28;"	d	file:
m_failed	model/cara-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
m_rate	model/cara-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
m_success	model/cara-wifi-manager.cc	/^  uint32_t m_success;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
m_timer	model/cara-wifi-manager.cc	/^  uint32_t m_timer;$/;"	m	struct:ns3::CaraWifiRemoteStation	file:
ns3	model/cara-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~CaraWifiManager	model/cara-wifi-manager.cc	/^CaraWifiManager::~CaraWifiManager ()$/;"	f	class:ns3::CaraWifiManager
CARA_WIFI_MANAGER_H	model/cara-wifi-manager.h	21;"	d
CaraWifiManager	model/cara-wifi-manager.h	/^class CaraWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
m_failureThreshold	model/cara-wifi-manager.h	/^  uint32_t m_failureThreshold;$/;"	m	class:ns3::CaraWifiManager
m_probeThreshold	model/cara-wifi-manager.h	/^  uint32_t m_probeThreshold;$/;"	m	class:ns3::CaraWifiManager
m_successThreshold	model/cara-wifi-manager.h	/^  uint32_t m_successThreshold;$/;"	m	class:ns3::CaraWifiManager
m_timerTimeout	model/cara-wifi-manager.h	/^  uint32_t m_timerTimeout;$/;"	m	class:ns3::CaraWifiManager
ns3	model/cara-wifi-manager.h	/^namespace ns3 {$/;"	n
ConstantRateWifiManager	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::ConstantRateWifiManager ()$/;"	f	class:ns3::ConstantRateWifiManager
DoCreateStation	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::ConstantRateWifiManager
DoGetDataTxVector	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::ConstantRateWifiManager
DoGetRtsTxVector	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportDataFailed	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportDataOk	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::ConstantRateWifiManager
DoReportFinalDataFailed	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportFinalRtsFailed	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportRtsFailed	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ConstantRateWifiManager
DoReportRtsOk	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::ConstantRateWifiManager
DoReportRxOk	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::ConstantRateWifiManager
GetTypeId	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::GetTypeId (void)$/;"	f	class:ns3::ConstantRateWifiManager
IsLowLatency	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::ConstantRateWifiManager
Min	model/constant-rate-wifi-manager.cc	27;"	d	file:
ns3	model/constant-rate-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~ConstantRateWifiManager	model/constant-rate-wifi-manager.cc	/^ConstantRateWifiManager::~ConstantRateWifiManager ()$/;"	f	class:ns3::ConstantRateWifiManager
CONSTANT_RATE_WIFI_MANAGER_H	model/constant-rate-wifi-manager.h	21;"	d
ConstantRateWifiManager	model/constant-rate-wifi-manager.h	/^class ConstantRateWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
m_ctlMode	model/constant-rate-wifi-manager.h	/^  WifiMode m_ctlMode; \/\/!< Wifi mode for request control frames$/;"	m	class:ns3::ConstantRateWifiManager
m_dataMode	model/constant-rate-wifi-manager.h	/^  WifiMode m_dataMode; \/\/!< Wifi mode for unicast DATA frames$/;"	m	class:ns3::ConstantRateWifiManager
ns3	model/constant-rate-wifi-manager.h	/^namespace ns3 {$/;"	n
CtrlBAckRequestHeader	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::CtrlBAckRequestHeader ()$/;"	f	class:ns3::CtrlBAckRequestHeader
CtrlBAckResponseHeader	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::CtrlBAckResponseHeader ()$/;"	f	class:ns3::CtrlBAckResponseHeader
Deserialize	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::CtrlBAckRequestHeader
Deserialize	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::CtrlBAckResponseHeader
DeserializeBitmap	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::DeserializeBitmap (Buffer::Iterator start)$/;"	f	class:ns3::CtrlBAckResponseHeader
GetBaControl	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetBaControl (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetBarControl	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::GetBarControl (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetBitmap	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetBitmap (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetCompressedBitmap	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetCompressedBitmap (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetInstanceTypeId	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetInstanceTypeId	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetSerializedSize	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::GetSerializedSize () const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetSerializedSize	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetStartingSequence	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::GetStartingSequence (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetStartingSequence	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetStartingSequence (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetStartingSequenceControl	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::GetStartingSequenceControl (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetStartingSequenceControl	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetStartingSequenceControl (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetTidInfo	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::GetTidInfo (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
GetTidInfo	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetTidInfo (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
GetTypeId	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::GetTypeId (void)$/;"	f	class:ns3::CtrlBAckRequestHeader
GetTypeId	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::GetTypeId (void)$/;"	f	class:ns3::CtrlBAckResponseHeader
IndexInBitmap	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::IndexInBitmap (uint16_t seq) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsBasic	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::IsBasic (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
IsBasic	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::IsBasic (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsCompressed	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::IsCompressed (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
IsCompressed	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::IsCompressed (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsFragmentReceived	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::IsFragmentReceived (uint16_t seq, uint8_t frag) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsInBitmap	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::IsInBitmap (uint16_t seq) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsMultiTid	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::IsMultiTid (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
IsMultiTid	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::IsMultiTid (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
IsPacketReceived	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::IsPacketReceived (uint16_t seq) const$/;"	f	class:ns3::CtrlBAckResponseHeader
MustSendHtImmediateAck	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::MustSendHtImmediateAck (void) const$/;"	f	class:ns3::CtrlBAckRequestHeader
MustSendHtImmediateAck	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::MustSendHtImmediateAck (void) const$/;"	f	class:ns3::CtrlBAckResponseHeader
Print	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::CtrlBAckRequestHeader
Print	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::CtrlBAckResponseHeader
ResetBitmap	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::ResetBitmap (void)$/;"	f	class:ns3::CtrlBAckResponseHeader
Serialize	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::CtrlBAckRequestHeader
Serialize	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::CtrlBAckResponseHeader
SerializeBitmap	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SerializeBitmap (Buffer::Iterator start) const$/;"	f	class:ns3::CtrlBAckResponseHeader
SetBaControl	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetBaControl (uint16_t ba)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetBarControl	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::SetBarControl (uint16_t bar)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetHtImmediateAck	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::SetHtImmediateAck (bool immediateAck)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetHtImmediateAck	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetHtImmediateAck (bool immediateAck)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetReceivedFragment	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetReceivedFragment (uint16_t seq, uint8_t frag)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetReceivedPacket	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetReceivedPacket (uint16_t seq)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetStartingSequence	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetStartingSequence	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetStartingSequenceControl	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::SetStartingSequenceControl (uint16_t seqControl)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetStartingSequenceControl	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetStartingSequenceControl (uint16_t seqControl)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetTidInfo	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::SetTidInfo (uint8_t tid)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetTidInfo	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetTidInfo (uint8_t tid)$/;"	f	class:ns3::CtrlBAckResponseHeader
SetType	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::SetType (enum BlockAckType type)$/;"	f	class:ns3::CtrlBAckRequestHeader
SetType	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::SetType (enum BlockAckType type)$/;"	f	class:ns3::CtrlBAckResponseHeader
ns3	model/ctrl-headers.cc	/^namespace ns3 {$/;"	n	file:
~CtrlBAckRequestHeader	model/ctrl-headers.cc	/^CtrlBAckRequestHeader::~CtrlBAckRequestHeader ()$/;"	f	class:ns3::CtrlBAckRequestHeader
~CtrlBAckResponseHeader	model/ctrl-headers.cc	/^CtrlBAckResponseHeader::~CtrlBAckResponseHeader ()$/;"	f	class:ns3::CtrlBAckResponseHeader
BASIC_BLOCK_ACK	model/ctrl-headers.h	/^  BASIC_BLOCK_ACK,$/;"	e	enum:ns3::BlockAckType
BlockAckType	model/ctrl-headers.h	/^enum BlockAckType$/;"	g	namespace:ns3
COMPRESSED_BLOCK_ACK	model/ctrl-headers.h	/^  COMPRESSED_BLOCK_ACK,$/;"	e	enum:ns3::BlockAckType
CTRL_HEADERS_H	model/ctrl-headers.h	21;"	d
CtrlBAckRequestHeader	model/ctrl-headers.h	/^class CtrlBAckRequestHeader : public Header$/;"	c	namespace:ns3
CtrlBAckResponseHeader	model/ctrl-headers.h	/^class CtrlBAckResponseHeader : public Header$/;"	c	namespace:ns3
MULTI_TID_BLOCK_ACK	model/ctrl-headers.h	/^  MULTI_TID_BLOCK_ACK$/;"	e	enum:ns3::BlockAckType
bitmap	model/ctrl-headers.h	/^  } bitmap;$/;"	m	class:ns3::CtrlBAckResponseHeader	typeref:union:ns3::CtrlBAckResponseHeader::__anon3
m_baAckPolicy	model/ctrl-headers.h	/^  bool m_baAckPolicy;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_barAckPolicy	model/ctrl-headers.h	/^  bool m_barAckPolicy;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_bitmap	model/ctrl-headers.h	/^    uint16_t m_bitmap[64];$/;"	m	union:ns3::CtrlBAckResponseHeader::__anon3
m_compressed	model/ctrl-headers.h	/^  bool m_compressed;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_compressed	model/ctrl-headers.h	/^  bool m_compressed;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_compressedBitmap	model/ctrl-headers.h	/^    uint64_t m_compressedBitmap;$/;"	m	union:ns3::CtrlBAckResponseHeader::__anon3
m_multiTid	model/ctrl-headers.h	/^  bool m_multiTid;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_multiTid	model/ctrl-headers.h	/^  bool m_multiTid;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_startingSeq	model/ctrl-headers.h	/^  uint16_t m_startingSeq;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_startingSeq	model/ctrl-headers.h	/^  uint16_t m_startingSeq;$/;"	m	class:ns3::CtrlBAckResponseHeader
m_tidInfo	model/ctrl-headers.h	/^  uint16_t m_tidInfo;$/;"	m	class:ns3::CtrlBAckRequestHeader
m_tidInfo	model/ctrl-headers.h	/^  uint16_t m_tidInfo;$/;"	m	class:ns3::CtrlBAckResponseHeader
ns3	model/ctrl-headers.h	/^namespace ns3 {$/;"	n
AssignStreams	model/dca-txop.cc	/^DcaTxop::AssignStreams (int64_t stream)$/;"	f	class:ns3::DcaTxop
Cancel	model/dca-txop.cc	/^  virtual void Cancel (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
Cancel	model/dca-txop.cc	/^DcaTxop::Cancel (void)$/;"	f	class:ns3::DcaTxop
DcaTxop	model/dca-txop.cc	/^DcaTxop::DcaTxop ()$/;"	f	class:ns3::DcaTxop
Dcf	model/dca-txop.cc	/^  Dcf (DcaTxop * txop)$/;"	f	class:ns3::DcaTxop::Dcf
Dcf	model/dca-txop.cc	/^class DcaTxop::Dcf : public DcfState$/;"	c	class:ns3::DcaTxop	file:
DoDispose	model/dca-txop.cc	/^DcaTxop::DoDispose (void)$/;"	f	class:ns3::DcaTxop
DoInitialize	model/dca-txop.cc	/^DcaTxop::DoInitialize ()$/;"	f	class:ns3::DcaTxop
DoNotifyAccessGranted	model/dca-txop.cc	/^  virtual void DoNotifyAccessGranted (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyChannelSwitching	model/dca-txop.cc	/^  virtual void DoNotifyChannelSwitching (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyCollision	model/dca-txop.cc	/^  virtual void DoNotifyCollision (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyInternalCollision	model/dca-txop.cc	/^  virtual void DoNotifyInternalCollision (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifySleep	model/dca-txop.cc	/^  virtual void DoNotifySleep (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
DoNotifyWakeUp	model/dca-txop.cc	/^  virtual void DoNotifyWakeUp (void)$/;"	f	class:ns3::DcaTxop::Dcf	file:
EndTxNoAck	model/dca-txop.cc	/^  virtual void EndTxNoAck (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
EndTxNoAck	model/dca-txop.cc	/^DcaTxop::EndTxNoAck (void)$/;"	f	class:ns3::DcaTxop
GetAifsn	model/dca-txop.cc	/^DcaTxop::GetAifsn (void) const$/;"	f	class:ns3::DcaTxop
GetFragmentOffset	model/dca-txop.cc	/^DcaTxop::GetFragmentOffset (void)$/;"	f	class:ns3::DcaTxop
GetFragmentPacket	model/dca-txop.cc	/^DcaTxop::GetFragmentPacket (WifiMacHeader *hdr)$/;"	f	class:ns3::DcaTxop
GetFragmentSize	model/dca-txop.cc	/^DcaTxop::GetFragmentSize (void)$/;"	f	class:ns3::DcaTxop
GetMaxCw	model/dca-txop.cc	/^DcaTxop::GetMaxCw (void) const$/;"	f	class:ns3::DcaTxop
GetMinCw	model/dca-txop.cc	/^DcaTxop::GetMinCw (void) const$/;"	f	class:ns3::DcaTxop
GetNextFragmentSize	model/dca-txop.cc	/^DcaTxop::GetNextFragmentSize (void)$/;"	f	class:ns3::DcaTxop
GetQueue	model/dca-txop.cc	/^DcaTxop::GetQueue () const$/;"	f	class:ns3::DcaTxop
GetTypeId	model/dca-txop.cc	/^DcaTxop::GetTypeId (void)$/;"	f	class:ns3::DcaTxop
GotAck	model/dca-txop.cc	/^  virtual void GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop::TransmissionListener
GotAck	model/dca-txop.cc	/^DcaTxop::GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop
GotCts	model/dca-txop.cc	/^  virtual void GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop::TransmissionListener
GotCts	model/dca-txop.cc	/^DcaTxop::GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::DcaTxop
IsLastFragment	model/dca-txop.cc	/^DcaTxop::IsLastFragment (void)$/;"	f	class:ns3::DcaTxop
Low	model/dca-txop.cc	/^DcaTxop::Low (void)$/;"	f	class:ns3::DcaTxop
MissedAck	model/dca-txop.cc	/^  virtual void MissedAck (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
MissedAck	model/dca-txop.cc	/^DcaTxop::MissedAck (void)$/;"	f	class:ns3::DcaTxop
MissedCts	model/dca-txop.cc	/^  virtual void MissedCts (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
MissedCts	model/dca-txop.cc	/^DcaTxop::MissedCts (void)$/;"	f	class:ns3::DcaTxop
NS_LOG_APPEND_CONTEXT	model/dca-txop.cc	38;"	d	file:
NS_LOG_APPEND_CONTEXT	model/dca-txop.cc	39;"	d	file:
NeedDataRetransmission	model/dca-txop.cc	/^DcaTxop::NeedDataRetransmission (void)$/;"	f	class:ns3::DcaTxop
NeedFragmentation	model/dca-txop.cc	/^DcaTxop::NeedFragmentation (void)$/;"	f	class:ns3::DcaTxop
NeedRts	model/dca-txop.cc	/^DcaTxop::NeedRts (Ptr<const Packet> packet, const WifiMacHeader *header)$/;"	f	class:ns3::DcaTxop
NeedRtsRetransmission	model/dca-txop.cc	/^DcaTxop::NeedRtsRetransmission (void)$/;"	f	class:ns3::DcaTxop
NeedsAccess	model/dca-txop.cc	/^DcaTxop::NeedsAccess (void) const$/;"	f	class:ns3::DcaTxop
NextFragment	model/dca-txop.cc	/^DcaTxop::NextFragment (void)$/;"	f	class:ns3::DcaTxop
NotifyAccessGranted	model/dca-txop.cc	/^DcaTxop::NotifyAccessGranted (void)$/;"	f	class:ns3::DcaTxop
NotifyChannelSwitching	model/dca-txop.cc	/^DcaTxop::NotifyChannelSwitching (void)$/;"	f	class:ns3::DcaTxop
NotifyCollision	model/dca-txop.cc	/^DcaTxop::NotifyCollision (void)$/;"	f	class:ns3::DcaTxop
NotifyInternalCollision	model/dca-txop.cc	/^DcaTxop::NotifyInternalCollision (void)$/;"	f	class:ns3::DcaTxop
NotifySleep	model/dca-txop.cc	/^DcaTxop::NotifySleep (void)$/;"	f	class:ns3::DcaTxop
NotifyWakeUp	model/dca-txop.cc	/^DcaTxop::NotifyWakeUp (void)$/;"	f	class:ns3::DcaTxop
Queue	model/dca-txop.cc	/^DcaTxop::Queue (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::DcaTxop
RestartAccessIfNeeded	model/dca-txop.cc	/^DcaTxop::RestartAccessIfNeeded (void)$/;"	f	class:ns3::DcaTxop
SetAifsn	model/dca-txop.cc	/^DcaTxop::SetAifsn (uint32_t aifsn)$/;"	f	class:ns3::DcaTxop
SetLow	model/dca-txop.cc	/^DcaTxop::SetLow (Ptr<MacLow> low)$/;"	f	class:ns3::DcaTxop
SetManager	model/dca-txop.cc	/^DcaTxop::SetManager (DcfManager *manager)$/;"	f	class:ns3::DcaTxop
SetMaxCw	model/dca-txop.cc	/^DcaTxop::SetMaxCw (uint32_t maxCw)$/;"	f	class:ns3::DcaTxop
SetMinCw	model/dca-txop.cc	/^DcaTxop::SetMinCw (uint32_t minCw)$/;"	f	class:ns3::DcaTxop
SetTxFailedCallback	model/dca-txop.cc	/^DcaTxop::SetTxFailedCallback (TxFailed callback)$/;"	f	class:ns3::DcaTxop
SetTxMiddle	model/dca-txop.cc	/^void DcaTxop::SetTxMiddle (MacTxMiddle *txMiddle)$/;"	f	class:ns3::DcaTxop
SetTxOkCallback	model/dca-txop.cc	/^DcaTxop::SetTxOkCallback (TxOk callback)$/;"	f	class:ns3::DcaTxop
SetWifiRemoteStationManager	model/dca-txop.cc	/^DcaTxop::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> remoteManager)$/;"	f	class:ns3::DcaTxop
StartAccessIfNeeded	model/dca-txop.cc	/^DcaTxop::StartAccessIfNeeded (void)$/;"	f	class:ns3::DcaTxop
StartNext	model/dca-txop.cc	/^  virtual void StartNext (void)$/;"	f	class:ns3::DcaTxop::TransmissionListener
StartNext	model/dca-txop.cc	/^DcaTxop::StartNext (void)$/;"	f	class:ns3::DcaTxop
TransmissionListener	model/dca-txop.cc	/^  TransmissionListener (DcaTxop * txop)$/;"	f	class:ns3::DcaTxop::TransmissionListener
TransmissionListener	model/dca-txop.cc	/^class DcaTxop::TransmissionListener : public MacLowTransmissionListener$/;"	c	class:ns3::DcaTxop	file:
m_txop	model/dca-txop.cc	/^  DcaTxop *m_txop;$/;"	m	class:ns3::DcaTxop::Dcf	file:
m_txop	model/dca-txop.cc	/^  DcaTxop *m_txop;$/;"	m	class:ns3::DcaTxop::TransmissionListener	file:
ns3	model/dca-txop.cc	/^namespace ns3 {$/;"	n	file:
~DcaTxop	model/dca-txop.cc	/^DcaTxop::~DcaTxop ()$/;"	f	class:ns3::DcaTxop
~TransmissionListener	model/dca-txop.cc	/^  virtual ~TransmissionListener () {}$/;"	f	class:ns3::DcaTxop::TransmissionListener
DCA_TXOP_H	model/dca-txop.h	22;"	d
DcaTxop	model/dca-txop.h	/^class DcaTxop : public Dcf$/;"	c	namespace:ns3
TxFailed	model/dca-txop.h	/^  typedef Callback <void, const WifiMacHeader&> TxFailed;$/;"	t	class:ns3::DcaTxop
TxOk	model/dca-txop.h	/^  typedef Callback <void, const WifiMacHeader&> TxOk;$/;"	t	class:ns3::DcaTxop
m_accessOngoing	model/dca-txop.h	/^  bool m_accessOngoing;$/;"	m	class:ns3::DcaTxop
m_currentHdr	model/dca-txop.h	/^  WifiMacHeader m_currentHdr;$/;"	m	class:ns3::DcaTxop
m_currentPacket	model/dca-txop.h	/^  Ptr<const Packet> m_currentPacket;$/;"	m	class:ns3::DcaTxop
m_dcf	model/dca-txop.h	/^  Dcf *m_dcf;$/;"	m	class:ns3::DcaTxop
m_fragmentNumber	model/dca-txop.h	/^  uint8_t m_fragmentNumber;$/;"	m	class:ns3::DcaTxop
m_low	model/dca-txop.h	/^  Ptr <MacLow> m_low;$/;"	m	class:ns3::DcaTxop
m_manager	model/dca-txop.h	/^  DcfManager *m_manager;$/;"	m	class:ns3::DcaTxop
m_queue	model/dca-txop.h	/^  Ptr<WifiMacQueue> m_queue;$/;"	m	class:ns3::DcaTxop
m_rng	model/dca-txop.h	/^  RandomStream *m_rng;$/;"	m	class:ns3::DcaTxop
m_stationManager	model/dca-txop.h	/^  Ptr<WifiRemoteStationManager> m_stationManager;$/;"	m	class:ns3::DcaTxop
m_transmissionListener	model/dca-txop.h	/^  TransmissionListener *m_transmissionListener;$/;"	m	class:ns3::DcaTxop
m_txFailedCallback	model/dca-txop.h	/^  TxFailed m_txFailedCallback;$/;"	m	class:ns3::DcaTxop
m_txMiddle	model/dca-txop.h	/^  MacTxMiddle *m_txMiddle;$/;"	m	class:ns3::DcaTxop
m_txOkCallback	model/dca-txop.h	/^  TxOk m_txOkCallback;$/;"	m	class:ns3::DcaTxop
ns3	model/dca-txop.h	/^namespace ns3 {$/;"	n
AccessTimeout	model/dcf-manager.cc	/^DcfManager::AccessTimeout (void)$/;"	f	class:ns3::DcfManager
AckTimeoutReset	model/dcf-manager.cc	/^  virtual void AckTimeoutReset ()$/;"	f	class:ns3::LowDcfListener
AckTimeoutStart	model/dcf-manager.cc	/^  virtual void AckTimeoutStart (Time duration)$/;"	f	class:ns3::LowDcfListener
Add	model/dcf-manager.cc	/^DcfManager::Add (DcfState *dcf)$/;"	f	class:ns3::DcfManager
CtsTimeoutReset	model/dcf-manager.cc	/^  virtual void CtsTimeoutReset ()$/;"	f	class:ns3::LowDcfListener
CtsTimeoutStart	model/dcf-manager.cc	/^  virtual void CtsTimeoutStart (Time duration)$/;"	f	class:ns3::LowDcfListener
DcfManager	model/dcf-manager.cc	/^DcfManager::DcfManager ()$/;"	f	class:ns3::DcfManager
DcfState	model/dcf-manager.cc	/^DcfState::DcfState ()$/;"	f	class:ns3::DcfState
DoGrantAccess	model/dcf-manager.cc	/^DcfManager::DoGrantAccess (void)$/;"	f	class:ns3::DcfManager
DoRestartAccessTimeoutIfNeeded	model/dcf-manager.cc	/^DcfManager::DoRestartAccessTimeoutIfNeeded (void)$/;"	f	class:ns3::DcfManager
GetAccessGrantStart	model/dcf-manager.cc	/^DcfManager::GetAccessGrantStart (void) const$/;"	f	class:ns3::DcfManager
GetAifsn	model/dcf-manager.cc	/^DcfState::GetAifsn (void) const$/;"	f	class:ns3::DcfState
GetBackoffEndFor	model/dcf-manager.cc	/^DcfManager::GetBackoffEndFor (DcfState *state)$/;"	f	class:ns3::DcfManager
GetBackoffSlots	model/dcf-manager.cc	/^DcfState::GetBackoffSlots (void) const$/;"	f	class:ns3::DcfState
GetBackoffStart	model/dcf-manager.cc	/^DcfState::GetBackoffStart (void) const$/;"	f	class:ns3::DcfState
GetBackoffStartFor	model/dcf-manager.cc	/^DcfManager::GetBackoffStartFor (DcfState *state)$/;"	f	class:ns3::DcfManager
GetCw	model/dcf-manager.cc	/^DcfState::GetCw (void) const$/;"	f	class:ns3::DcfState
GetCwMax	model/dcf-manager.cc	/^DcfState::GetCwMax (void) const$/;"	f	class:ns3::DcfState
GetCwMin	model/dcf-manager.cc	/^DcfState::GetCwMin (void) const$/;"	f	class:ns3::DcfState
GetEifsNoDifs	model/dcf-manager.cc	/^DcfManager::GetEifsNoDifs () const$/;"	f	class:ns3::DcfManager
IsAccessRequested	model/dcf-manager.cc	/^DcfState::IsAccessRequested (void) const$/;"	f	class:ns3::DcfState
IsBusy	model/dcf-manager.cc	/^DcfManager::IsBusy (void) const$/;"	f	class:ns3::DcfManager
LowDcfListener	model/dcf-manager.cc	/^  LowDcfListener (ns3::DcfManager *dcf)$/;"	f	class:ns3::LowDcfListener
LowDcfListener	model/dcf-manager.cc	/^class LowDcfListener : public ns3::MacLowDcfListener$/;"	c	namespace:ns3	file:
MY_DEBUG	model/dcf-manager.cc	31;"	d	file:
MostRecent	model/dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b) const$/;"	f	class:ns3::DcfManager
MostRecent	model/dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c) const$/;"	f	class:ns3::DcfManager
MostRecent	model/dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c, Time d) const$/;"	f	class:ns3::DcfManager
MostRecent	model/dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c, Time d, Time e, Time f) const$/;"	f	class:ns3::DcfManager
MostRecent	model/dcf-manager.cc	/^DcfManager::MostRecent (Time a, Time b, Time c, Time d, Time e, Time f, Time g) const$/;"	f	class:ns3::DcfManager
NavReset	model/dcf-manager.cc	/^  virtual void NavReset (Time duration)$/;"	f	class:ns3::LowDcfListener
NavStart	model/dcf-manager.cc	/^  virtual void NavStart (Time duration)$/;"	f	class:ns3::LowDcfListener
NotifyAccessGranted	model/dcf-manager.cc	/^DcfState::NotifyAccessGranted (void)$/;"	f	class:ns3::DcfState
NotifyAccessRequested	model/dcf-manager.cc	/^DcfState::NotifyAccessRequested (void)$/;"	f	class:ns3::DcfState
NotifyAckTimeoutResetNow	model/dcf-manager.cc	/^DcfManager::NotifyAckTimeoutResetNow ()$/;"	f	class:ns3::DcfManager
NotifyAckTimeoutStartNow	model/dcf-manager.cc	/^DcfManager::NotifyAckTimeoutStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyChannelSwitching	model/dcf-manager.cc	/^DcfState::NotifyChannelSwitching (void)$/;"	f	class:ns3::DcfState
NotifyCollision	model/dcf-manager.cc	/^DcfState::NotifyCollision (void)$/;"	f	class:ns3::DcfState
NotifyCtsTimeoutResetNow	model/dcf-manager.cc	/^DcfManager::NotifyCtsTimeoutResetNow ()$/;"	f	class:ns3::DcfManager
NotifyCtsTimeoutStartNow	model/dcf-manager.cc	/^DcfManager::NotifyCtsTimeoutStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyInternalCollision	model/dcf-manager.cc	/^DcfState::NotifyInternalCollision (void)$/;"	f	class:ns3::DcfState
NotifyMaybeCcaBusyStart	model/dcf-manager.cc	/^  virtual void NotifyMaybeCcaBusyStart (Time duration)$/;"	f	class:ns3::PhyListener
NotifyMaybeCcaBusyStartNow	model/dcf-manager.cc	/^DcfManager::NotifyMaybeCcaBusyStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyNavResetNow	model/dcf-manager.cc	/^DcfManager::NotifyNavResetNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyNavStartNow	model/dcf-manager.cc	/^DcfManager::NotifyNavStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyRxEndError	model/dcf-manager.cc	/^  virtual void NotifyRxEndError (void)$/;"	f	class:ns3::PhyListener
NotifyRxEndErrorNow	model/dcf-manager.cc	/^DcfManager::NotifyRxEndErrorNow (void)$/;"	f	class:ns3::DcfManager
NotifyRxEndOk	model/dcf-manager.cc	/^  virtual void NotifyRxEndOk (void)$/;"	f	class:ns3::PhyListener
NotifyRxEndOkNow	model/dcf-manager.cc	/^DcfManager::NotifyRxEndOkNow (void)$/;"	f	class:ns3::DcfManager
NotifyRxStart	model/dcf-manager.cc	/^  virtual void NotifyRxStart (Time duration)$/;"	f	class:ns3::PhyListener
NotifyRxStartNow	model/dcf-manager.cc	/^DcfManager::NotifyRxStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifySleep	model/dcf-manager.cc	/^  virtual void NotifySleep (void)$/;"	f	class:ns3::PhyListener
NotifySleep	model/dcf-manager.cc	/^DcfState::NotifySleep (void)$/;"	f	class:ns3::DcfState
NotifySleepNow	model/dcf-manager.cc	/^DcfManager::NotifySleepNow (void)$/;"	f	class:ns3::DcfManager
NotifySwitchingStart	model/dcf-manager.cc	/^  virtual void NotifySwitchingStart (Time duration)$/;"	f	class:ns3::PhyListener
NotifySwitchingStartNow	model/dcf-manager.cc	/^DcfManager::NotifySwitchingStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyTxStart	model/dcf-manager.cc	/^  virtual void NotifyTxStart (Time duration, double txPowerDbm)$/;"	f	class:ns3::PhyListener
NotifyTxStartNow	model/dcf-manager.cc	/^DcfManager::NotifyTxStartNow (Time duration)$/;"	f	class:ns3::DcfManager
NotifyWakeUp	model/dcf-manager.cc	/^DcfState::NotifyWakeUp (void)$/;"	f	class:ns3::DcfState
NotifyWakeup	model/dcf-manager.cc	/^  virtual void NotifyWakeup (void)$/;"	f	class:ns3::PhyListener
NotifyWakeupNow	model/dcf-manager.cc	/^DcfManager::NotifyWakeupNow (void)$/;"	f	class:ns3::DcfManager
PhyListener	model/dcf-manager.cc	/^  PhyListener (ns3::DcfManager *dcf)$/;"	f	class:ns3::PhyListener
PhyListener	model/dcf-manager.cc	/^class PhyListener : public ns3::WifiPhyListener$/;"	c	namespace:ns3	file:
RemovePhyListener	model/dcf-manager.cc	/^DcfManager::RemovePhyListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::DcfManager
RequestAccess	model/dcf-manager.cc	/^DcfManager::RequestAccess (DcfState *state)$/;"	f	class:ns3::DcfManager
ResetCw	model/dcf-manager.cc	/^DcfState::ResetCw (void)$/;"	f	class:ns3::DcfState
SetAifsn	model/dcf-manager.cc	/^DcfState::SetAifsn (uint32_t aifsn)$/;"	f	class:ns3::DcfState
SetCwMax	model/dcf-manager.cc	/^DcfState::SetCwMax (uint32_t maxCw)$/;"	f	class:ns3::DcfState
SetCwMin	model/dcf-manager.cc	/^DcfState::SetCwMin (uint32_t minCw)$/;"	f	class:ns3::DcfState
SetEifsNoDifs	model/dcf-manager.cc	/^DcfManager::SetEifsNoDifs (Time eifsNoDifs)$/;"	f	class:ns3::DcfManager
SetSifs	model/dcf-manager.cc	/^DcfManager::SetSifs (Time sifs)$/;"	f	class:ns3::DcfManager
SetSlot	model/dcf-manager.cc	/^DcfManager::SetSlot (Time slotTime)$/;"	f	class:ns3::DcfManager
SetupLowListener	model/dcf-manager.cc	/^DcfManager::SetupLowListener (Ptr<MacLow> low)$/;"	f	class:ns3::DcfManager
SetupPhyListener	model/dcf-manager.cc	/^DcfManager::SetupPhyListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::DcfManager
StartBackoffNow	model/dcf-manager.cc	/^DcfState::StartBackoffNow (uint32_t nSlots)$/;"	f	class:ns3::DcfState
UpdateBackoff	model/dcf-manager.cc	/^DcfManager::UpdateBackoff (void)$/;"	f	class:ns3::DcfManager
UpdateBackoffSlotsNow	model/dcf-manager.cc	/^DcfState::UpdateBackoffSlotsNow (uint32_t nSlots, Time backoffUpdateBound)$/;"	f	class:ns3::DcfState
UpdateFailedCw	model/dcf-manager.cc	/^DcfState::UpdateFailedCw (void)$/;"	f	class:ns3::DcfState
m_dcf	model/dcf-manager.cc	/^  ns3::DcfManager *m_dcf;  \/\/!< DcfManager to forward events to$/;"	m	class:ns3::LowDcfListener	file:
m_dcf	model/dcf-manager.cc	/^  ns3::DcfManager *m_dcf;  \/\/!< DcfManager to forward events to$/;"	m	class:ns3::PhyListener	file:
ns3	model/dcf-manager.cc	/^namespace ns3 {$/;"	n	file:
~DcfManager	model/dcf-manager.cc	/^DcfManager::~DcfManager ()$/;"	f	class:ns3::DcfManager
~DcfState	model/dcf-manager.cc	/^DcfState::~DcfState ()$/;"	f	class:ns3::DcfState
~LowDcfListener	model/dcf-manager.cc	/^  virtual ~LowDcfListener ()$/;"	f	class:ns3::LowDcfListener
~PhyListener	model/dcf-manager.cc	/^  virtual ~PhyListener ()$/;"	f	class:ns3::PhyListener
DCF_MANAGER_H	model/dcf-manager.h	22;"	d
DcfManager	model/dcf-manager.h	/^class DcfManager$/;"	c	namespace:ns3
DcfState	model/dcf-manager.h	/^class DcfState$/;"	c	namespace:ns3
States	model/dcf-manager.h	/^  typedef std::vector<DcfState *> States;$/;"	t	class:ns3::DcfManager
m_accessRequested	model/dcf-manager.h	/^  bool m_accessRequested;$/;"	m	class:ns3::DcfState
m_accessTimeout	model/dcf-manager.h	/^  EventId m_accessTimeout;$/;"	m	class:ns3::DcfManager
m_aifsn	model/dcf-manager.h	/^  uint32_t m_aifsn;$/;"	m	class:ns3::DcfState
m_backoffSlots	model/dcf-manager.h	/^  uint32_t m_backoffSlots;$/;"	m	class:ns3::DcfState
m_backoffStart	model/dcf-manager.h	/^  Time m_backoffStart;$/;"	m	class:ns3::DcfState
m_cw	model/dcf-manager.h	/^  uint32_t m_cw;$/;"	m	class:ns3::DcfState
m_cwMax	model/dcf-manager.h	/^  uint32_t m_cwMax;$/;"	m	class:ns3::DcfState
m_cwMin	model/dcf-manager.h	/^  uint32_t m_cwMin;$/;"	m	class:ns3::DcfState
m_eifsNoDifs	model/dcf-manager.h	/^  Time m_eifsNoDifs;$/;"	m	class:ns3::DcfManager
m_lastAckTimeoutEnd	model/dcf-manager.h	/^  Time m_lastAckTimeoutEnd;$/;"	m	class:ns3::DcfManager
m_lastBusyDuration	model/dcf-manager.h	/^  Time m_lastBusyDuration;$/;"	m	class:ns3::DcfManager
m_lastBusyStart	model/dcf-manager.h	/^  Time m_lastBusyStart;$/;"	m	class:ns3::DcfManager
m_lastCtsTimeoutEnd	model/dcf-manager.h	/^  Time m_lastCtsTimeoutEnd;$/;"	m	class:ns3::DcfManager
m_lastNavDuration	model/dcf-manager.h	/^  Time m_lastNavDuration;$/;"	m	class:ns3::DcfManager
m_lastNavStart	model/dcf-manager.h	/^  Time m_lastNavStart;$/;"	m	class:ns3::DcfManager
m_lastRxDuration	model/dcf-manager.h	/^  Time m_lastRxDuration;$/;"	m	class:ns3::DcfManager
m_lastRxEnd	model/dcf-manager.h	/^  Time m_lastRxEnd;$/;"	m	class:ns3::DcfManager
m_lastRxReceivedOk	model/dcf-manager.h	/^  bool m_lastRxReceivedOk;$/;"	m	class:ns3::DcfManager
m_lastRxStart	model/dcf-manager.h	/^  Time m_lastRxStart;$/;"	m	class:ns3::DcfManager
m_lastSwitchingDuration	model/dcf-manager.h	/^  Time m_lastSwitchingDuration;$/;"	m	class:ns3::DcfManager
m_lastSwitchingStart	model/dcf-manager.h	/^  Time m_lastSwitchingStart;$/;"	m	class:ns3::DcfManager
m_lastTxDuration	model/dcf-manager.h	/^  Time m_lastTxDuration;$/;"	m	class:ns3::DcfManager
m_lastTxStart	model/dcf-manager.h	/^  Time m_lastTxStart;$/;"	m	class:ns3::DcfManager
m_lowListener	model/dcf-manager.h	/^  LowDcfListener* m_lowListener;$/;"	m	class:ns3::DcfManager
m_phyListener	model/dcf-manager.h	/^  PhyListener* m_phyListener;$/;"	m	class:ns3::DcfManager
m_rxing	model/dcf-manager.h	/^  bool m_rxing;$/;"	m	class:ns3::DcfManager
m_sifs	model/dcf-manager.h	/^  Time m_sifs;$/;"	m	class:ns3::DcfManager
m_sleeping	model/dcf-manager.h	/^  bool m_sleeping;$/;"	m	class:ns3::DcfManager
m_slotTimeUs	model/dcf-manager.h	/^  uint32_t m_slotTimeUs;$/;"	m	class:ns3::DcfManager
m_states	model/dcf-manager.h	/^  States m_states;$/;"	m	class:ns3::DcfManager
ns3	model/dcf-manager.h	/^namespace ns3 {$/;"	n
GetTypeId	model/dcf.cc	/^Dcf::GetTypeId (void)$/;"	f	class:ns3::Dcf
ns3	model/dcf.cc	/^namespace ns3 {$/;"	n	file:
DCF_H	model/dcf.h	22;"	d
Dcf	model/dcf.h	/^class Dcf : public Object$/;"	c	namespace:ns3
ns3	model/dcf.h	/^namespace ns3 {$/;"	n
DqpskFunction	model/dsss-error-rate-model.cc	/^DsssErrorRateModel::DqpskFunction (double x)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssDbpskSuccessRate	model/dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDbpskSuccessRate (double sinr, uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssDqpskCck11SuccessRate	model/dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDqpskCck11SuccessRate (double sinr,uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssDqpskCck5_5SuccessRate	model/dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDqpskCck5_5SuccessRate (double sinr,uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
GetDsssDqpskSuccessRate	model/dsss-error-rate-model.cc	/^DsssErrorRateModel::GetDsssDqpskSuccessRate (double sinr,uint32_t nbits)$/;"	f	class:ns3::DsssErrorRateModel
IntegralFunction	model/dsss-error-rate-model.cc	/^IntegralFunction (double x, void *params)$/;"	f	namespace:ns3
SymbolErrorProb16Cck	model/dsss-error-rate-model.cc	/^DsssErrorRateModel::SymbolErrorProb16Cck (double e2)$/;"	f	class:ns3::DsssErrorRateModel
SymbolErrorProb256Cck	model/dsss-error-rate-model.cc	/^double DsssErrorRateModel::SymbolErrorProb256Cck (double e1)$/;"	f	class:ns3::DsssErrorRateModel
WLAN_SIR_IMPOSSIBLE	model/dsss-error-rate-model.cc	/^const double DsssErrorRateModel::WLAN_SIR_IMPOSSIBLE = 0.1;$/;"	m	class:ns3::DsssErrorRateModel	file:
WLAN_SIR_PERFECT	model/dsss-error-rate-model.cc	/^const double DsssErrorRateModel::WLAN_SIR_PERFECT = 10.0;$/;"	m	class:ns3::DsssErrorRateModel	file:
ns3	model/dsss-error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
DSS_ERROR_RATE_MODEL_H	model/dsss-error-rate-model.h	22;"	d
DsssErrorRateModel	model/dsss-error-rate-model.h	/^class DsssErrorRateModel$/;"	c	namespace:ns3
FunctionParameterType	model/dsss-error-rate-model.h	/^typedef struct FunctionParameterType$/;"	s	namespace:ns3
FunctionParameters	model/dsss-error-rate-model.h	/^} FunctionParameters;$/;"	t	namespace:ns3	typeref:struct:ns3::FunctionParameterType
WLAN_SIR_IMPOSSIBLE	model/dsss-error-rate-model.h	/^  static const double WLAN_SIR_IMPOSSIBLE;$/;"	m	class:ns3::DsssErrorRateModel
WLAN_SIR_PERFECT	model/dsss-error-rate-model.h	/^  static const double WLAN_SIR_PERFECT;$/;"	m	class:ns3::DsssErrorRateModel
beta	model/dsss-error-rate-model.h	/^  double beta;$/;"	m	struct:ns3::FunctionParameterType
n	model/dsss-error-rate-model.h	/^  double n;$/;"	m	struct:ns3::FunctionParameterType
ns3	model/dsss-error-rate-model.h	/^namespace ns3 {$/;"	n
AssignStreams	model/edca-txop-n.cc	/^EdcaTxopN::AssignStreams (int64_t stream)$/;"	f	class:ns3::EdcaTxopN
BaTxFailed	model/edca-txop-n.cc	/^EdcaTxopN::BaTxFailed (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
BaTxOk	model/edca-txop-n.cc	/^EdcaTxopN::BaTxOk (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
BlockAckEventListener	model/edca-txop-n.cc	/^  BlockAckEventListener (EdcaTxopN * txop)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
BlockAckEventListener	model/edca-txop-n.cc	/^class EdcaTxopN::BlockAckEventListener : public MacLowBlockAckEventListener$/;"	c	class:ns3::EdcaTxopN	file:
BlockAckInactivityTimeout	model/edca-txop-n.cc	/^  virtual void BlockAckInactivityTimeout (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
Cancel	model/edca-txop-n.cc	/^  virtual void Cancel (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
Cancel	model/edca-txop-n.cc	/^EdcaTxopN::Cancel (void)$/;"	f	class:ns3::EdcaTxopN
CompleteAmpduTransfer	model/edca-txop-n.cc	/^EdcaTxopN::CompleteAmpduTransfer (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN
CompleteConfig	model/edca-txop-n.cc	/^EdcaTxopN::CompleteConfig (void)$/;"	f	class:ns3::EdcaTxopN
CompleteMpduTx	model/edca-txop-n.cc	/^  virtual void CompleteMpduTx(Ptr<const Packet> packet, WifiMacHeader hdr, Time tstamp)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
CompleteMpduTx	model/edca-txop-n.cc	/^EdcaTxopN::CompleteMpduTx (Ptr<const Packet> packet, WifiMacHeader hdr, Time tstamp)$/;"	f	class:ns3::EdcaTxopN
CompleteTransfer	model/edca-txop-n.cc	/^  virtual  void CompleteTransfer (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
CompleteTx	model/edca-txop-n.cc	/^EdcaTxopN::CompleteTx (void)$/;"	f	class:ns3::EdcaTxopN
Dcf	model/edca-txop-n.cc	/^  Dcf (EdcaTxopN * txop)$/;"	f	class:ns3::EdcaTxopN::Dcf
Dcf	model/edca-txop-n.cc	/^class EdcaTxopN::Dcf : public DcfState$/;"	c	class:ns3::EdcaTxopN	file:
DoDispose	model/edca-txop-n.cc	/^EdcaTxopN::DoDispose (void)$/;"	f	class:ns3::EdcaTxopN
DoInitialize	model/edca-txop-n.cc	/^EdcaTxopN::DoInitialize ()$/;"	f	class:ns3::EdcaTxopN
DoNotifyAccessGranted	model/edca-txop-n.cc	/^  virtual void DoNotifyAccessGranted (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyChannelSwitching	model/edca-txop-n.cc	/^  virtual void DoNotifyChannelSwitching (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyCollision	model/edca-txop-n.cc	/^  virtual void DoNotifyCollision (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyInternalCollision	model/edca-txop-n.cc	/^  virtual void DoNotifyInternalCollision (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifySleep	model/edca-txop-n.cc	/^  virtual void DoNotifySleep (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
DoNotifyWakeUp	model/edca-txop-n.cc	/^  virtual void DoNotifyWakeUp (void)$/;"	f	class:ns3::EdcaTxopN::Dcf	file:
EdcaTxopN	model/edca-txop-n.cc	/^EdcaTxopN::EdcaTxopN ()$/;"	f	class:ns3::EdcaTxopN
EndTxNoAck	model/edca-txop-n.cc	/^  virtual void EndTxNoAck (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
EndTxNoAck	model/edca-txop-n.cc	/^EdcaTxopN::EndTxNoAck (void)$/;"	f	class:ns3::EdcaTxopN
GetAifsn	model/edca-txop-n.cc	/^EdcaTxopN::GetAifsn (void) const$/;"	f	class:ns3::EdcaTxopN
GetAmpduExist	model/edca-txop-n.cc	/^bool EdcaTxopN::GetAmpduExist(void)$/;"	f	class:ns3::EdcaTxopN
GetBaAgreementExists	model/edca-txop-n.cc	/^EdcaTxopN::GetBaAgreementExists (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN
GetBlockAckAgreementExists	model/edca-txop-n.cc	/^  virtual bool GetBlockAckAgreementExists (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
GetBlockAckThreshold	model/edca-txop-n.cc	/^EdcaTxopN::GetBlockAckThreshold (void) const$/;"	f	class:ns3::EdcaTxopN
GetEdcaQueue	model/edca-txop-n.cc	/^EdcaTxopN::GetEdcaQueue () const$/;"	f	class:ns3::EdcaTxopN
GetFragmentOffset	model/edca-txop-n.cc	/^EdcaTxopN::GetFragmentOffset (void)$/;"	f	class:ns3::EdcaTxopN
GetFragmentPacket	model/edca-txop-n.cc	/^EdcaTxopN::GetFragmentPacket (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN
GetFragmentSize	model/edca-txop-n.cc	/^EdcaTxopN::GetFragmentSize (void)$/;"	f	class:ns3::EdcaTxopN
GetMaxCw	model/edca-txop-n.cc	/^EdcaTxopN::GetMaxCw (void) const$/;"	f	class:ns3::EdcaTxopN
GetMinCw	model/edca-txop-n.cc	/^EdcaTxopN::GetMinCw (void) const$/;"	f	class:ns3::EdcaTxopN
GetMsduAggregator	model/edca-txop-n.cc	/^EdcaTxopN::GetMsduAggregator (void) const$/;"	f	class:ns3::EdcaTxopN
GetNOutstandingPackets	model/edca-txop-n.cc	/^  virtual uint32_t GetNOutstandingPackets (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
GetNOutstandingPacketsInBa	model/edca-txop-n.cc	/^EdcaTxopN::GetNOutstandingPacketsInBa (Mac48Address address, uint8_t tid)$/;"	f	class:ns3::EdcaTxopN
GetNRetryNeededPackets	model/edca-txop-n.cc	/^  virtual uint32_t GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
GetNRetryNeededPackets	model/edca-txop-n.cc	/^EdcaTxopN::GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::EdcaTxopN
GetNextFragmentSize	model/edca-txop-n.cc	/^EdcaTxopN::GetNextFragmentSize (void)$/;"	f	class:ns3::EdcaTxopN
GetNextSequenceNumberfor	model/edca-txop-n.cc	/^  virtual uint16_t GetNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
GetNextSequenceNumberfor	model/edca-txop-n.cc	/^uint16_t EdcaTxopN::GetNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN
GetQueue	model/edca-txop-n.cc	/^  virtual Ptr<WifiMacQueue> GetQueue (void)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
GetQueue	model/edca-txop-n.cc	/^  virtual Ptr<WifiMacQueue> GetQueue (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GetTypeId	model/edca-txop-n.cc	/^EdcaTxopN::GetTypeId (void)$/;"	f	class:ns3::EdcaTxopN
GetTypeOfStation	model/edca-txop-n.cc	/^EdcaTxopN::GetTypeOfStation (void) const$/;"	f	class:ns3::EdcaTxopN
GotAck	model/edca-txop-n.cc	/^  virtual void GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GotAck	model/edca-txop-n.cc	/^EdcaTxopN::GotAck (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN
GotAddBaResponse	model/edca-txop-n.cc	/^EdcaTxopN::GotAddBaResponse (const MgtAddBaResponseHeader *respHdr, Mac48Address recipient)$/;"	f	class:ns3::EdcaTxopN
GotBlockAck	model/edca-txop-n.cc	/^  virtual void GotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address source, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GotBlockAck	model/edca-txop-n.cc	/^EdcaTxopN::GotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address recipient, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN
GotCts	model/edca-txop-n.cc	/^  virtual void GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
GotCts	model/edca-txop-n.cc	/^EdcaTxopN::GotCts (double snr, WifiMode txMode)$/;"	f	class:ns3::EdcaTxopN
GotDelBaFrame	model/edca-txop-n.cc	/^EdcaTxopN::GotDelBaFrame (const MgtDelBaHeader *delBaHdr, Mac48Address recipient)$/;"	f	class:ns3::EdcaTxopN
IsLastFragment	model/edca-txop-n.cc	/^EdcaTxopN::IsLastFragment (void) const$/;"	f	class:ns3::EdcaTxopN
Low	model/edca-txop-n.cc	/^EdcaTxopN::Low (void)$/;"	f	class:ns3::EdcaTxopN
MapDestAddressForAggregation	model/edca-txop-n.cc	/^EdcaTxopN::MapDestAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
MapSrcAddressForAggregation	model/edca-txop-n.cc	/^EdcaTxopN::MapSrcAddressForAggregation (const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
MissedAck	model/edca-txop-n.cc	/^  virtual void MissedAck (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
MissedAck	model/edca-txop-n.cc	/^EdcaTxopN::MissedAck (void)$/;"	f	class:ns3::EdcaTxopN
MissedBlockAck	model/edca-txop-n.cc	/^  virtual void MissedBlockAck (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
MissedBlockAck	model/edca-txop-n.cc	/^EdcaTxopN::MissedBlockAck (void)$/;"	f	class:ns3::EdcaTxopN
MissedCts	model/edca-txop-n.cc	/^  virtual void MissedCts (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
MissedCts	model/edca-txop-n.cc	/^EdcaTxopN::MissedCts (void)$/;"	f	class:ns3::EdcaTxopN
NS_LOG_APPEND_CONTEXT	model/edca-txop-n.cc	38;"	d	file:
NS_LOG_APPEND_CONTEXT	model/edca-txop-n.cc	39;"	d	file:
NeedBarRetransmission	model/edca-txop-n.cc	/^EdcaTxopN::NeedBarRetransmission (void)$/;"	f	class:ns3::EdcaTxopN
NeedDataRetransmission	model/edca-txop-n.cc	/^EdcaTxopN::NeedDataRetransmission (void)$/;"	f	class:ns3::EdcaTxopN
NeedFragmentation	model/edca-txop-n.cc	/^EdcaTxopN::NeedFragmentation (void) const$/;"	f	class:ns3::EdcaTxopN
NeedRts	model/edca-txop-n.cc	/^EdcaTxopN::NeedRts (void)$/;"	f	class:ns3::EdcaTxopN
NeedRtsRetransmission	model/edca-txop-n.cc	/^EdcaTxopN::NeedRtsRetransmission (void)$/;"	f	class:ns3::EdcaTxopN
NeedsAccess	model/edca-txop-n.cc	/^EdcaTxopN::NeedsAccess (void) const$/;"	f	class:ns3::EdcaTxopN
NextFragment	model/edca-txop-n.cc	/^EdcaTxopN::NextFragment (void)$/;"	f	class:ns3::EdcaTxopN
NotifyAccessGranted	model/edca-txop-n.cc	/^EdcaTxopN::NotifyAccessGranted (void)$/;"	f	class:ns3::EdcaTxopN
NotifyChannelSwitching	model/edca-txop-n.cc	/^EdcaTxopN::NotifyChannelSwitching (void)$/;"	f	class:ns3::EdcaTxopN
NotifyCollision	model/edca-txop-n.cc	/^EdcaTxopN::NotifyCollision (void)$/;"	f	class:ns3::EdcaTxopN
NotifyInternalCollision	model/edca-txop-n.cc	/^void EdcaTxopN::NotifyInternalCollision (void)$/;"	f	class:ns3::EdcaTxopN
NotifySleep	model/edca-txop-n.cc	/^EdcaTxopN::NotifySleep (void)$/;"	f	class:ns3::EdcaTxopN
NotifyWakeUp	model/edca-txop-n.cc	/^EdcaTxopN::NotifyWakeUp (void)$/;"	f	class:ns3::EdcaTxopN
PeekNextPacketInBaQueue	model/edca-txop-n.cc	/^  virtual Ptr<const Packet> PeekNextPacketInBaQueue (WifiMacHeader &header, Mac48Address recipient, uint8_t tid, Time *timestamp)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
PeekNextRetransmitPacket	model/edca-txop-n.cc	/^EdcaTxopN::PeekNextRetransmitPacket (WifiMacHeader &header,Mac48Address recipient, uint8_t tid, Time *timestamp)$/;"	f	class:ns3::EdcaTxopN
PeekNextSequenceNumberfor	model/edca-txop-n.cc	/^  virtual uint16_t PeekNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
PeekNextSequenceNumberfor	model/edca-txop-n.cc	/^uint16_t EdcaTxopN::PeekNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::EdcaTxopN
PushFront	model/edca-txop-n.cc	/^EdcaTxopN::PushFront (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
Queue	model/edca-txop-n.cc	/^EdcaTxopN::Queue (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::EdcaTxopN
RemoveFromBaQueue	model/edca-txop-n.cc	/^  virtual void RemoveFromBaQueue (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
RemoveRetransmitPacket	model/edca-txop-n.cc	/^EdcaTxopN::RemoveRetransmitPacket (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::EdcaTxopN
RestartAccessIfNeeded	model/edca-txop-n.cc	/^EdcaTxopN::RestartAccessIfNeeded (void)$/;"	f	class:ns3::EdcaTxopN
SendAddBaRequest	model/edca-txop-n.cc	/^EdcaTxopN::SendAddBaRequest (Mac48Address dest, uint8_t tid, uint16_t startSeq,$/;"	f	class:ns3::EdcaTxopN
SendBlockAckRequest	model/edca-txop-n.cc	/^EdcaTxopN::SendBlockAckRequest (const struct Bar &bar)$/;"	f	class:ns3::EdcaTxopN
SendDelbaFrame	model/edca-txop-n.cc	/^EdcaTxopN::SendDelbaFrame (Mac48Address addr, uint8_t tid, bool byOriginator)$/;"	f	class:ns3::EdcaTxopN
SetAccessCategory	model/edca-txop-n.cc	/^EdcaTxopN::SetAccessCategory (enum AcIndex ac)$/;"	f	class:ns3::EdcaTxopN
SetAifsn	model/edca-txop-n.cc	/^EdcaTxopN::SetAifsn (uint32_t aifsn)$/;"	f	class:ns3::EdcaTxopN
SetAmpdu	model/edca-txop-n.cc	/^  virtual void SetAmpdu(bool ampdu)$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
SetAmpduExist	model/edca-txop-n.cc	/^void EdcaTxopN::SetAmpduExist(bool ampdu)$/;"	f	class:ns3::EdcaTxopN
SetBlockAckInactivityTimeout	model/edca-txop-n.cc	/^EdcaTxopN::SetBlockAckInactivityTimeout (uint16_t timeout)$/;"	f	class:ns3::EdcaTxopN
SetBlockAckThreshold	model/edca-txop-n.cc	/^EdcaTxopN::SetBlockAckThreshold (uint8_t threshold)$/;"	f	class:ns3::EdcaTxopN
SetLow	model/edca-txop-n.cc	/^EdcaTxopN::SetLow (Ptr<MacLow> low)$/;"	f	class:ns3::EdcaTxopN
SetManager	model/edca-txop-n.cc	/^EdcaTxopN::SetManager (DcfManager *manager)$/;"	f	class:ns3::EdcaTxopN
SetMaxCw	model/edca-txop-n.cc	/^EdcaTxopN::SetMaxCw (uint32_t maxCw)$/;"	f	class:ns3::EdcaTxopN
SetMinCw	model/edca-txop-n.cc	/^EdcaTxopN::SetMinCw (uint32_t minCw)$/;"	f	class:ns3::EdcaTxopN
SetMsduAggregator	model/edca-txop-n.cc	/^EdcaTxopN::SetMsduAggregator (Ptr<MsduAggregator> aggr)$/;"	f	class:ns3::EdcaTxopN
SetTxFailedCallback	model/edca-txop-n.cc	/^EdcaTxopN::SetTxFailedCallback (TxFailed callback)$/;"	f	class:ns3::EdcaTxopN
SetTxMiddle	model/edca-txop-n.cc	/^EdcaTxopN::SetTxMiddle (MacTxMiddle *txMiddle)$/;"	f	class:ns3::EdcaTxopN
SetTxOkCallback	model/edca-txop-n.cc	/^EdcaTxopN::SetTxOkCallback (TxOk callback)$/;"	f	class:ns3::EdcaTxopN
SetTypeOfStation	model/edca-txop-n.cc	/^EdcaTxopN::SetTypeOfStation (enum TypeOfStation type)$/;"	f	class:ns3::EdcaTxopN
SetWifiRemoteStationManager	model/edca-txop-n.cc	/^EdcaTxopN::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> remoteManager)$/;"	f	class:ns3::EdcaTxopN
SetupBlockAckIfNeeded	model/edca-txop-n.cc	/^EdcaTxopN::SetupBlockAckIfNeeded ()$/;"	f	class:ns3::EdcaTxopN
StartAccessIfNeeded	model/edca-txop-n.cc	/^EdcaTxopN::StartAccessIfNeeded (void)$/;"	f	class:ns3::EdcaTxopN
StartNext	model/edca-txop-n.cc	/^  virtual void StartNext (void)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
StartNext	model/edca-txop-n.cc	/^EdcaTxopN::StartNext (void)$/;"	f	class:ns3::EdcaTxopN
TransmissionListener	model/edca-txop-n.cc	/^  TransmissionListener (EdcaTxopN * txop)$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
TransmissionListener	model/edca-txop-n.cc	/^class EdcaTxopN::TransmissionListener : public MacLowTransmissionListener$/;"	c	class:ns3::EdcaTxopN	file:
VerifyBlockAck	model/edca-txop-n.cc	/^EdcaTxopN::VerifyBlockAck (void)$/;"	f	class:ns3::EdcaTxopN
m_txop	model/edca-txop-n.cc	/^  EdcaTxopN *m_txop;$/;"	m	class:ns3::EdcaTxopN::BlockAckEventListener	file:
m_txop	model/edca-txop-n.cc	/^  EdcaTxopN *m_txop;$/;"	m	class:ns3::EdcaTxopN::Dcf	file:
m_txop	model/edca-txop-n.cc	/^  EdcaTxopN *m_txop;$/;"	m	class:ns3::EdcaTxopN::TransmissionListener	file:
ns3	model/edca-txop-n.cc	/^namespace ns3 {$/;"	n	file:
~BlockAckEventListener	model/edca-txop-n.cc	/^  virtual ~BlockAckEventListener () {}$/;"	f	class:ns3::EdcaTxopN::BlockAckEventListener
~EdcaTxopN	model/edca-txop-n.cc	/^EdcaTxopN::~EdcaTxopN ()$/;"	f	class:ns3::EdcaTxopN
~TransmissionListener	model/edca-txop-n.cc	/^  virtual ~TransmissionListener () {}$/;"	f	class:ns3::EdcaTxopN::TransmissionListener
ADHOC_STA	model/edca-txop-n.h	/^  ADHOC_STA,$/;"	e	enum:ns3::TypeOfStation
AP	model/edca-txop-n.h	/^  AP,$/;"	e	enum:ns3::TypeOfStation
EDCA_TXOP_N_H	model/edca-txop-n.h	23;"	d
EdcaTxopN	model/edca-txop-n.h	/^class EdcaTxopN : public Dcf$/;"	c	namespace:ns3
HT_ADHOC_STA	model/edca-txop-n.h	/^  HT_ADHOC_STA,$/;"	e	enum:ns3::TypeOfStation
HT_AP	model/edca-txop-n.h	/^  HT_AP,$/;"	e	enum:ns3::TypeOfStation
HT_STA	model/edca-txop-n.h	/^  HT_STA,$/;"	e	enum:ns3::TypeOfStation
MESH	model/edca-txop-n.h	/^  MESH,$/;"	e	enum:ns3::TypeOfStation
OCB	model/edca-txop-n.h	/^  OCB$/;"	e	enum:ns3::TypeOfStation
STA	model/edca-txop-n.h	/^  STA,$/;"	e	enum:ns3::TypeOfStation
TxFailed	model/edca-txop-n.h	/^  typedef Callback <void, const WifiMacHeader&> TxFailed;$/;"	t	class:ns3::EdcaTxopN
TxOk	model/edca-txop-n.h	/^  typedef Callback <void, const WifiMacHeader&> TxOk;$/;"	t	class:ns3::EdcaTxopN
TypeOfStation	model/edca-txop-n.h	/^enum TypeOfStation$/;"	g	namespace:ns3
m_ac	model/edca-txop-n.h	/^  AcIndex m_ac;$/;"	m	class:ns3::EdcaTxopN
m_aggregator	model/edca-txop-n.h	/^  Ptr<MsduAggregator> m_aggregator;$/;"	m	class:ns3::EdcaTxopN
m_ampduExist	model/edca-txop-n.h	/^  bool m_ampduExist;$/;"	m	class:ns3::EdcaTxopN
m_baManager	model/edca-txop-n.h	/^  BlockAckManager *m_baManager;$/;"	m	class:ns3::EdcaTxopN
m_blockAckInactivityTimeout	model/edca-txop-n.h	/^  uint16_t m_blockAckInactivityTimeout;$/;"	m	class:ns3::EdcaTxopN
m_blockAckListener	model/edca-txop-n.h	/^  BlockAckEventListener *m_blockAckListener;$/;"	m	class:ns3::EdcaTxopN
m_blockAckThreshold	model/edca-txop-n.h	/^  uint8_t m_blockAckThreshold;$/;"	m	class:ns3::EdcaTxopN
m_blockAckType	model/edca-txop-n.h	/^  enum BlockAckType m_blockAckType;$/;"	m	class:ns3::EdcaTxopN	typeref:enum:ns3::EdcaTxopN::BlockAckType
m_currentBar	model/edca-txop-n.h	/^  struct Bar m_currentBar;$/;"	m	class:ns3::EdcaTxopN	typeref:struct:ns3::EdcaTxopN::Bar
m_currentHdr	model/edca-txop-n.h	/^  WifiMacHeader m_currentHdr;$/;"	m	class:ns3::EdcaTxopN
m_currentPacket	model/edca-txop-n.h	/^  Ptr<const Packet> m_currentPacket;$/;"	m	class:ns3::EdcaTxopN
m_currentPacketTimestamp	model/edca-txop-n.h	/^  Time m_currentPacketTimestamp;$/;"	m	class:ns3::EdcaTxopN
m_dcf	model/edca-txop-n.h	/^  Dcf *m_dcf;$/;"	m	class:ns3::EdcaTxopN
m_fragmentNumber	model/edca-txop-n.h	/^  uint8_t m_fragmentNumber;$/;"	m	class:ns3::EdcaTxopN
m_low	model/edca-txop-n.h	/^  Ptr<MacLow> m_low;$/;"	m	class:ns3::EdcaTxopN
m_manager	model/edca-txop-n.h	/^  DcfManager *m_manager;$/;"	m	class:ns3::EdcaTxopN
m_qosBlockedDestinations	model/edca-txop-n.h	/^  QosBlockedDestinations *m_qosBlockedDestinations;$/;"	m	class:ns3::EdcaTxopN
m_queue	model/edca-txop-n.h	/^  Ptr<WifiMacQueue> m_queue;$/;"	m	class:ns3::EdcaTxopN
m_rng	model/edca-txop-n.h	/^  RandomStream *m_rng;$/;"	m	class:ns3::EdcaTxopN
m_stationManager	model/edca-txop-n.h	/^  Ptr<WifiRemoteStationManager> m_stationManager;$/;"	m	class:ns3::EdcaTxopN
m_transmissionListener	model/edca-txop-n.h	/^  TransmissionListener *m_transmissionListener;$/;"	m	class:ns3::EdcaTxopN
m_txFailedCallback	model/edca-txop-n.h	/^  TxFailed m_txFailedCallback;$/;"	m	class:ns3::EdcaTxopN
m_txMiddle	model/edca-txop-n.h	/^  MacTxMiddle *m_txMiddle;$/;"	m	class:ns3::EdcaTxopN
m_txOkCallback	model/edca-txop-n.h	/^  TxOk m_txOkCallback;$/;"	m	class:ns3::EdcaTxopN
m_typeOfStation	model/edca-txop-n.h	/^  TypeOfStation m_typeOfStation;$/;"	m	class:ns3::EdcaTxopN
ns3	model/edca-txop-n.h	/^namespace ns3 {$/;"	n
CalculateSnr	model/error-rate-model.cc	/^ErrorRateModel::CalculateSnr (WifiMode txMode, double ber) const$/;"	f	class:ns3::ErrorRateModel
GetTypeId	model/error-rate-model.cc	/^TypeId ErrorRateModel::GetTypeId (void)$/;"	f	class:ns3::ErrorRateModel
ns3	model/error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
ERROR_RATE_MODEL_H	model/error-rate-model.h	21;"	d
ErrorRateModel	model/error-rate-model.h	/^class ErrorRateModel : public Object$/;"	c	namespace:ns3
ns3	model/error-rate-model.h	/^namespace ns3 {$/;"	n
DeserializeInformationField	model/ht-capabilities.cc	/^HtCapabilities::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::HtCapabilities
ElementId	model/ht-capabilities.cc	/^HtCapabilities::ElementId () const$/;"	f	class:ns3::HtCapabilities
GetAmpduParameters	model/ht-capabilities.cc	/^HtCapabilities::GetAmpduParameters (void) const$/;"	f	class:ns3::HtCapabilities
GetGreenfield	model/ht-capabilities.cc	/^HtCapabilities::GetGreenfield (void) const$/;"	f	class:ns3::HtCapabilities
GetHtCapabilitiesInfo	model/ht-capabilities.cc	/^HtCapabilities::GetHtCapabilitiesInfo (void) const$/;"	f	class:ns3::HtCapabilities
GetInformationFieldSize	model/ht-capabilities.cc	/^HtCapabilities::GetInformationFieldSize () const$/;"	f	class:ns3::HtCapabilities
GetLdpc	model/ht-capabilities.cc	/^HtCapabilities::GetLdpc (void) const$/;"	f	class:ns3::HtCapabilities
GetRxMcsBitmask	model/ht-capabilities.cc	/^HtCapabilities::GetRxMcsBitmask()$/;"	f	class:ns3::HtCapabilities
GetSerializedSize	model/ht-capabilities.cc	/^HtCapabilities::GetSerializedSize () const$/;"	f	class:ns3::HtCapabilities
GetShortGuardInterval20	model/ht-capabilities.cc	/^HtCapabilities::GetShortGuardInterval20(void) const$/;"	f	class:ns3::HtCapabilities
GetSupportedChannelWidth	model/ht-capabilities.cc	/^HtCapabilities::GetSupportedChannelWidth (void) const$/;"	f	class:ns3::HtCapabilities
GetSupportedMcsSet1	model/ht-capabilities.cc	/^HtCapabilities::GetSupportedMcsSet1 (void) const$/;"	f	class:ns3::HtCapabilities
GetSupportedMcsSet2	model/ht-capabilities.cc	/^HtCapabilities::GetSupportedMcsSet2 (void) const$/;"	f	class:ns3::HtCapabilities
HtCapabilities	model/ht-capabilities.cc	/^HtCapabilities::HtCapabilities ()$/;"	f	class:ns3::HtCapabilities
IsSupportedMcs	model/ht-capabilities.cc	/^HtCapabilities::IsSupportedMcs (uint8_t mcs)$/;"	f	class:ns3::HtCapabilities
Serialize	model/ht-capabilities.cc	/^HtCapabilities::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::HtCapabilities
SerializeInformationField	model/ht-capabilities.cc	/^HtCapabilities::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::HtCapabilities
SetAmpduParameters	model/ht-capabilities.cc	/^HtCapabilities::SetAmpduParameters (uint8_t ctrl)$/;"	f	class:ns3::HtCapabilities
SetGreenfield	model/ht-capabilities.cc	/^HtCapabilities::SetGreenfield (uint8_t greenfield)$/;"	f	class:ns3::HtCapabilities
SetHtCapabilitiesInfo	model/ht-capabilities.cc	/^HtCapabilities::SetHtCapabilitiesInfo(uint16_t ctrl)$/;"	f	class:ns3::HtCapabilities
SetHtSupported	model/ht-capabilities.cc	/^HtCapabilities::SetHtSupported(uint8_t htsupported)$/;"	f	class:ns3::HtCapabilities
SetLdpc	model/ht-capabilities.cc	/^HtCapabilities::SetLdpc (uint8_t ldpc)$/;"	f	class:ns3::HtCapabilities
SetRxMcsBitmask	model/ht-capabilities.cc	/^HtCapabilities::SetRxMcsBitmask(uint8_t index)$/;"	f	class:ns3::HtCapabilities
SetShortGuardInterval20	model/ht-capabilities.cc	/^HtCapabilities::SetShortGuardInterval20 (uint8_t shortguardinterval)$/;"	f	class:ns3::HtCapabilities
SetSupportedChannelWidth	model/ht-capabilities.cc	/^HtCapabilities::SetSupportedChannelWidth (uint8_t supportedchannelwidth)$/;"	f	class:ns3::HtCapabilities
SetSupportedMcsSet	model/ht-capabilities.cc	/^HtCapabilities::SetSupportedMcsSet (uint64_t ctrl2, uint64_t ctrl1)$/;"	f	class:ns3::HtCapabilities
ns3	model/ht-capabilities.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/ht-capabilities.cc	/^operator << (std::ostream &os, const HtCapabilities &htcapabilities)$/;"	f	namespace:ns3
operator >>	model/ht-capabilities.cc	/^std::istream &operator >> (std::istream &is,HtCapabilities &htcapabilities)$/;"	f	namespace:ns3
HT_CAPABILITIES_H	model/ht-capabilities.h	21;"	d
HtCapabilities	model/ht-capabilities.h	/^class HtCapabilities: public WifiInformationElement$/;"	c	namespace:ns3
MAX_SUPPORTED_MCS	model/ht-capabilities.h	32;"	d
m_ampduReserved	model/ht-capabilities.h	/^  uint8_t m_ampduReserved;$/;"	m	class:ns3::HtCapabilities
m_dssMode40	model/ht-capabilities.h	/^  uint8_t m_dssMode40;$/;"	m	class:ns3::HtCapabilities
m_fortyMhzIntolerant	model/ht-capabilities.h	/^  uint8_t m_fortyMhzIntolerant;$/;"	m	class:ns3::HtCapabilities
m_greenField	model/ht-capabilities.h	/^  uint8_t m_greenField;$/;"	m	class:ns3::HtCapabilities
m_htDelayedBlockAck	model/ht-capabilities.h	/^  uint8_t m_htDelayedBlockAck;$/;"	m	class:ns3::HtCapabilities
m_htSupported	model/ht-capabilities.h	/^  uint8_t m_htSupported;$/;"	m	class:ns3::HtCapabilities
m_ldpc	model/ht-capabilities.h	/^  uint8_t m_ldpc;$/;"	m	class:ns3::HtCapabilities
m_lsigProtectionSupport	model/ht-capabilities.h	/^  uint8_t m_lsigProtectionSupport;$/;"	m	class:ns3::HtCapabilities
m_maxAmpduLength	model/ht-capabilities.h	/^  uint8_t m_maxAmpduLength;$/;"	m	class:ns3::HtCapabilities
m_maxAmsduLength	model/ht-capabilities.h	/^  uint8_t m_maxAmsduLength;$/;"	m	class:ns3::HtCapabilities
m_minMpduStartSpace	model/ht-capabilities.h	/^  uint8_t m_minMpduStartSpace;$/;"	m	class:ns3::HtCapabilities
m_reserved	model/ht-capabilities.h	/^  uint8_t m_reserved;$/;"	m	class:ns3::HtCapabilities
m_reservedMcsSet1	model/ht-capabilities.h	/^  uint8_t m_reservedMcsSet1;$/;"	m	class:ns3::HtCapabilities
m_reservedMcsSet2	model/ht-capabilities.h	/^  uint8_t m_reservedMcsSet2;$/;"	m	class:ns3::HtCapabilities
m_reservedMcsSet3	model/ht-capabilities.h	/^  uint32_t m_reservedMcsSet3; $/;"	m	class:ns3::HtCapabilities
m_rxHighestSupportedDataRate	model/ht-capabilities.h	/^  uint16_t m_rxHighestSupportedDataRate;$/;"	m	class:ns3::HtCapabilities
m_rxMcsBitmask	model/ht-capabilities.h	/^  uint8_t m_rxMcsBitmask[MAX_SUPPORTED_MCS];$/;"	m	class:ns3::HtCapabilities
m_rxStbc	model/ht-capabilities.h	/^  uint8_t m_rxStbc;$/;"	m	class:ns3::HtCapabilities
m_shortGuardInterval20	model/ht-capabilities.h	/^  uint8_t m_shortGuardInterval20; $/;"	m	class:ns3::HtCapabilities
m_shortGuardInterval40	model/ht-capabilities.h	/^  uint8_t m_shortGuardInterval40;$/;"	m	class:ns3::HtCapabilities
m_smPowerSave	model/ht-capabilities.h	/^  uint8_t m_smPowerSave;$/;"	m	class:ns3::HtCapabilities
m_supportedChannelWidth	model/ht-capabilities.h	/^  uint8_t m_supportedChannelWidth;$/;"	m	class:ns3::HtCapabilities
m_txMaxNSpatialStreams	model/ht-capabilities.h	/^  uint8_t m_txMaxNSpatialStreams;$/;"	m	class:ns3::HtCapabilities
m_txMcsSetDefined	model/ht-capabilities.h	/^  uint8_t m_txMcsSetDefined;$/;"	m	class:ns3::HtCapabilities
m_txRxMcsSetUnequal	model/ht-capabilities.h	/^  uint8_t m_txRxMcsSetUnequal;$/;"	m	class:ns3::HtCapabilities
m_txStbc	model/ht-capabilities.h	/^  uint8_t m_txStbc;$/;"	m	class:ns3::HtCapabilities
m_txUnequalModulation	model/ht-capabilities.h	/^  uint8_t m_txUnequalModulation;$/;"	m	class:ns3::HtCapabilities
ns3	model/ht-capabilities.h	/^namespace ns3 {$/;"	n
AddModeSnrThreshold	model/ideal-wifi-manager.cc	/^IdealWifiManager::AddModeSnrThreshold (WifiMode mode, double snr)$/;"	f	class:ns3::IdealWifiManager
DoCreateStation	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::IdealWifiManager
DoGetDataTxVector	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::IdealWifiManager
DoGetRtsTxVector	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::IdealWifiManager
DoReportDataFailed	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoReportDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportDataOk	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::IdealWifiManager
DoReportFinalDataFailed	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportFinalRtsFailed	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportRtsFailed	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::IdealWifiManager
DoReportRtsOk	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::IdealWifiManager
DoReportRxOk	model/ideal-wifi-manager.cc	/^IdealWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::IdealWifiManager
GetSnrThreshold	model/ideal-wifi-manager.cc	/^IdealWifiManager::GetSnrThreshold (WifiMode mode) const$/;"	f	class:ns3::IdealWifiManager
GetTypeId	model/ideal-wifi-manager.cc	/^IdealWifiManager::GetTypeId (void)$/;"	f	class:ns3::IdealWifiManager
IdealWifiManager	model/ideal-wifi-manager.cc	/^IdealWifiManager::IdealWifiManager ()$/;"	f	class:ns3::IdealWifiManager
IdealWifiRemoteStation	model/ideal-wifi-manager.cc	/^struct IdealWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
IsLowLatency	model/ideal-wifi-manager.cc	/^IdealWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::IdealWifiManager
Min	model/ideal-wifi-manager.cc	26;"	d	file:
SetupPhy	model/ideal-wifi-manager.cc	/^IdealWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::IdealWifiManager
m_lastSnr	model/ideal-wifi-manager.cc	/^  double m_lastSnr;  \/\/!< SNR of last packet sent to the remote station$/;"	m	struct:ns3::IdealWifiRemoteStation	file:
ns3	model/ideal-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~IdealWifiManager	model/ideal-wifi-manager.cc	/^IdealWifiManager::~IdealWifiManager ()$/;"	f	class:ns3::IdealWifiManager
IDEAL_WIFI_MANAGER_H	model/ideal-wifi-manager.h	21;"	d
IdealWifiManager	model/ideal-wifi-manager.h	/^class IdealWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
Thresholds	model/ideal-wifi-manager.h	/^  typedef std::vector<std::pair<double,WifiMode> > Thresholds;$/;"	t	class:ns3::IdealWifiManager
m_ber	model/ideal-wifi-manager.h	/^  double m_ber;  \/\/!< The maximum Bit Error Rate acceptable at any transmission mode$/;"	m	class:ns3::IdealWifiManager
m_thresholds	model/ideal-wifi-manager.h	/^  Thresholds m_thresholds;  \/\/!< List of WifiMode and the minimum SNR pair$/;"	m	class:ns3::IdealWifiManager
ns3	model/ideal-wifi-manager.h	/^namespace ns3 {$/;"	n
Add	model/interference-helper.cc	/^InterferenceHelper::Add (uint32_t size, WifiMode payloadMode,$/;"	f	class:ns3::InterferenceHelper
AddNiChangeEvent	model/interference-helper.cc	/^InterferenceHelper::AddNiChangeEvent (NiChange change)$/;"	f	class:ns3::InterferenceHelper
AppendEvent	model/interference-helper.cc	/^InterferenceHelper::AppendEvent (Ptr<InterferenceHelper::Event> event)$/;"	f	class:ns3::InterferenceHelper
CalculateChunkSuccessRate	model/interference-helper.cc	/^InterferenceHelper::CalculateChunkSuccessRate (double snir, Time duration, WifiMode mode) const$/;"	f	class:ns3::InterferenceHelper
CalculateNoiseInterferenceW	model/interference-helper.cc	/^InterferenceHelper::CalculateNoiseInterferenceW (Ptr<InterferenceHelper::Event> event, NiChanges *ni) const$/;"	f	class:ns3::InterferenceHelper
CalculatePer	model/interference-helper.cc	/^InterferenceHelper::CalculatePer (Ptr<const InterferenceHelper::Event> event, NiChanges *ni) const$/;"	f	class:ns3::InterferenceHelper
CalculateSnr	model/interference-helper.cc	/^InterferenceHelper::CalculateSnr (double signal, double noiseInterference, WifiMode mode) const$/;"	f	class:ns3::InterferenceHelper
CalculateSnrPer	model/interference-helper.cc	/^InterferenceHelper::CalculateSnrPer (Ptr<InterferenceHelper::Event> event)$/;"	f	class:ns3::InterferenceHelper
EraseEvents	model/interference-helper.cc	/^InterferenceHelper::EraseEvents (void)$/;"	f	class:ns3::InterferenceHelper
Event	model/interference-helper.cc	/^InterferenceHelper::Event::Event (uint32_t size, WifiMode payloadMode,$/;"	f	class:ns3::InterferenceHelper::Event
GetDelta	model/interference-helper.cc	/^InterferenceHelper::NiChange::GetDelta (void) const$/;"	f	class:ns3::InterferenceHelper::NiChange
GetDuration	model/interference-helper.cc	/^InterferenceHelper::Event::GetDuration (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetEndTime	model/interference-helper.cc	/^InterferenceHelper::Event::GetEndTime (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetEnergyDuration	model/interference-helper.cc	/^InterferenceHelper::GetEnergyDuration (double energyW)$/;"	f	class:ns3::InterferenceHelper
GetErrorRateModel	model/interference-helper.cc	/^InterferenceHelper::GetErrorRateModel (void) const$/;"	f	class:ns3::InterferenceHelper
GetNoiseFigure	model/interference-helper.cc	/^InterferenceHelper::GetNoiseFigure (void) const$/;"	f	class:ns3::InterferenceHelper
GetPayloadMode	model/interference-helper.cc	/^InterferenceHelper::Event::GetPayloadMode (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetPosition	model/interference-helper.cc	/^InterferenceHelper::GetPosition (Time moment)$/;"	f	class:ns3::InterferenceHelper
GetPreambleType	model/interference-helper.cc	/^InterferenceHelper::Event::GetPreambleType (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetRxPowerW	model/interference-helper.cc	/^InterferenceHelper::Event::GetRxPowerW (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetSize	model/interference-helper.cc	/^InterferenceHelper::Event::GetSize (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetStartTime	model/interference-helper.cc	/^InterferenceHelper::Event::GetStartTime (void) const$/;"	f	class:ns3::InterferenceHelper::Event
GetTime	model/interference-helper.cc	/^InterferenceHelper::NiChange::GetTime (void) const$/;"	f	class:ns3::InterferenceHelper::NiChange
GetTxVector	model/interference-helper.cc	/^InterferenceHelper::Event::GetTxVector (void) const$/;"	f	class:ns3::InterferenceHelper::Event
InterferenceHelper	model/interference-helper.cc	/^InterferenceHelper::InterferenceHelper ()$/;"	f	class:ns3::InterferenceHelper
NiChange	model/interference-helper.cc	/^InterferenceHelper::NiChange::NiChange (Time time, double delta)$/;"	f	class:ns3::InterferenceHelper::NiChange
NotifyRxEnd	model/interference-helper.cc	/^InterferenceHelper::NotifyRxEnd ()$/;"	f	class:ns3::InterferenceHelper
NotifyRxStart	model/interference-helper.cc	/^InterferenceHelper::NotifyRxStart ()$/;"	f	class:ns3::InterferenceHelper
SetErrorRateModel	model/interference-helper.cc	/^InterferenceHelper::SetErrorRateModel (Ptr<ErrorRateModel> rate)$/;"	f	class:ns3::InterferenceHelper
SetNoiseFigure	model/interference-helper.cc	/^InterferenceHelper::SetNoiseFigure (double value)$/;"	f	class:ns3::InterferenceHelper
ns3	model/interference-helper.cc	/^namespace ns3 {$/;"	n	file:
operator <	model/interference-helper.cc	/^InterferenceHelper::NiChange::operator < (const InterferenceHelper::NiChange& o) const$/;"	f	class:ns3::InterferenceHelper::NiChange
~Event	model/interference-helper.cc	/^InterferenceHelper::Event::~Event ()$/;"	f	class:ns3::InterferenceHelper::Event
~InterferenceHelper	model/interference-helper.cc	/^InterferenceHelper::~InterferenceHelper ()$/;"	f	class:ns3::InterferenceHelper
Event	model/interference-helper.h	/^  class Event : public SimpleRefCount<InterferenceHelper::Event>$/;"	c	class:ns3::InterferenceHelper
Events	model/interference-helper.h	/^  typedef std::list<Ptr<Event> > Events;$/;"	t	class:ns3::InterferenceHelper
INTERFERENCE_HELPER_H	model/interference-helper.h	21;"	d
InterferenceHelper	model/interference-helper.h	/^class InterferenceHelper$/;"	c	namespace:ns3
NiChange	model/interference-helper.h	/^  class NiChange$/;"	c	class:ns3::InterferenceHelper
NiChanges	model/interference-helper.h	/^  typedef std::vector <NiChange> NiChanges;$/;"	t	class:ns3::InterferenceHelper
SnrPer	model/interference-helper.h	/^  struct SnrPer$/;"	s	class:ns3::InterferenceHelper
m_delta	model/interference-helper.h	/^    double m_delta;$/;"	m	class:ns3::InterferenceHelper::NiChange
m_endTime	model/interference-helper.h	/^    Time m_endTime;$/;"	m	class:ns3::InterferenceHelper::Event
m_errorRateModel	model/interference-helper.h	/^  Ptr<ErrorRateModel> m_errorRateModel;$/;"	m	class:ns3::InterferenceHelper
m_firstPower	model/interference-helper.h	/^  double m_firstPower;$/;"	m	class:ns3::InterferenceHelper
m_niChanges	model/interference-helper.h	/^  NiChanges m_niChanges;$/;"	m	class:ns3::InterferenceHelper
m_noiseFigure	model/interference-helper.h	/^  double m_noiseFigure; \/**< noise figure (linear) *\/$/;"	m	class:ns3::InterferenceHelper
m_payloadMode	model/interference-helper.h	/^    WifiMode m_payloadMode;$/;"	m	class:ns3::InterferenceHelper::Event
m_preamble	model/interference-helper.h	/^    enum WifiPreamble m_preamble;$/;"	m	class:ns3::InterferenceHelper::Event	typeref:enum:ns3::InterferenceHelper::Event::WifiPreamble
m_rxPowerW	model/interference-helper.h	/^    double m_rxPowerW;$/;"	m	class:ns3::InterferenceHelper::Event
m_rxing	model/interference-helper.h	/^  bool m_rxing;$/;"	m	class:ns3::InterferenceHelper
m_size	model/interference-helper.h	/^    uint32_t m_size;$/;"	m	class:ns3::InterferenceHelper::Event
m_startTime	model/interference-helper.h	/^    Time m_startTime;$/;"	m	class:ns3::InterferenceHelper::Event
m_time	model/interference-helper.h	/^    Time m_time;$/;"	m	class:ns3::InterferenceHelper::NiChange
m_txVector	model/interference-helper.h	/^    WifiTxVector m_txVector;$/;"	m	class:ns3::InterferenceHelper::Event
ns3	model/interference-helper.h	/^namespace ns3 {$/;"	n
per	model/interference-helper.h	/^    double per;$/;"	m	struct:ns3::InterferenceHelper::SnrPer
snr	model/interference-helper.h	/^    double snr;$/;"	m	struct:ns3::InterferenceHelper::SnrPer
AggregateToAmpdu	model/mac-low.cc	/^MacLow::AggregateToAmpdu (Ptr<const Packet> packet, const WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
BlockAckTimeout	model/mac-low.cc	/^MacLow::BlockAckTimeout (void)$/;"	f	class:ns3::MacLow
CalculateOverallTxTime	model/mac-low.cc	/^MacLow::CalculateOverallTxTime (Ptr<const Packet> packet,$/;"	f	class:ns3::MacLow
CalculateTransmissionTime	model/mac-low.cc	/^MacLow::CalculateTransmissionTime (Ptr<const Packet> packet,$/;"	f	class:ns3::MacLow
CancelAllEvents	model/mac-low.cc	/^MacLow::CancelAllEvents (void)$/;"	f	class:ns3::MacLow
CompleteMpduTx	model/mac-low.cc	/^MacLowBlockAckEventListener::CompleteMpduTx (Ptr<const Packet> packet, WifiMacHeader hdr, Time tstamp)$/;"	f	class:ns3::MacLowBlockAckEventListener
CompleteTransfer	model/mac-low.cc	/^void MacLowBlockAckEventListener::CompleteTransfer(Mac48Address address, uint8_t tid)$/;"	f	class:ns3::MacLowBlockAckEventListener
CreateBlockAckAgreement	model/mac-low.cc	/^MacLow::CreateBlockAckAgreement (const MgtAddBaResponseHeader *respHdr, Mac48Address originator,$/;"	f	class:ns3::MacLow
CtsTimeout	model/mac-low.cc	/^MacLow::CtsTimeout (void)$/;"	f	class:ns3::MacLow
DeaggregateAmpduAndReceive	model/mac-low.cc	/^MacLow::DeaggregateAmpduAndReceive (Ptr<Packet> aggregatedPacket, double rxSnr, WifiMode txMode, WifiPreamble preamble)$/;"	f	class:ns3::MacLow
DestroyBlockAckAgreement	model/mac-low.cc	/^MacLow::DestroyBlockAckAgreement (Mac48Address originator, uint8_t tid)$/;"	f	class:ns3::MacLow
DisableAck	model/mac-low.cc	/^MacLowTransmissionParameters::DisableAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DisableNextData	model/mac-low.cc	/^MacLowTransmissionParameters::DisableNextData (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DisableOverrideDurationId	model/mac-low.cc	/^MacLowTransmissionParameters::DisableOverrideDurationId (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DisableRts	model/mac-low.cc	/^MacLowTransmissionParameters::DisableRts (void)$/;"	f	class:ns3::MacLowTransmissionParameters
DoDispose	model/mac-low.cc	/^MacLow::DoDispose (void)$/;"	f	class:ns3::MacLow
DoNavResetNow	model/mac-low.cc	/^MacLow::DoNavResetNow (Time duration)$/;"	f	class:ns3::MacLow
DoNavStartNow	model/mac-low.cc	/^MacLow::DoNavStartNow (Time duration)$/;"	f	class:ns3::MacLow
EnableAck	model/mac-low.cc	/^MacLowTransmissionParameters::EnableAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableBasicBlockAck	model/mac-low.cc	/^MacLowTransmissionParameters::EnableBasicBlockAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableCompressedBlockAck	model/mac-low.cc	/^MacLowTransmissionParameters::EnableCompressedBlockAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableFastAck	model/mac-low.cc	/^MacLowTransmissionParameters::EnableFastAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableMultiTidBlockAck	model/mac-low.cc	/^MacLowTransmissionParameters::EnableMultiTidBlockAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableNextData	model/mac-low.cc	/^MacLowTransmissionParameters::EnableNextData (uint32_t size)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableOverrideDurationId	model/mac-low.cc	/^MacLowTransmissionParameters::EnableOverrideDurationId (Time durationId)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableRts	model/mac-low.cc	/^MacLowTransmissionParameters::EnableRts (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EnableSuperFastAck	model/mac-low.cc	/^MacLowTransmissionParameters::EnableSuperFastAck (void)$/;"	f	class:ns3::MacLowTransmissionParameters
EndTxNoAck	model/mac-low.cc	/^MacLow::EndTxNoAck (void)$/;"	f	class:ns3::MacLow
FastAckFailedTimeout	model/mac-low.cc	/^MacLow::FastAckFailedTimeout (void)$/;"	f	class:ns3::MacLow
FastAckTimeout	model/mac-low.cc	/^MacLow::FastAckTimeout (void)$/;"	f	class:ns3::MacLow
FlushAggregateQueue	model/mac-low.cc	/^MacLow::FlushAggregateQueue (void)$/;"	f	class:ns3::MacLow
ForwardDown	model/mac-low.cc	/^MacLow::ForwardDown (Ptr<const Packet> packet, const WifiMacHeader* hdr,$/;"	f	class:ns3::MacLow
GetAckDuration	model/mac-low.cc	/^MacLow::GetAckDuration (Mac48Address to, WifiTxVector dataTxVector) const$/;"	f	class:ns3::MacLow
GetAckDuration	model/mac-low.cc	/^MacLow::GetAckDuration (WifiTxVector ackTxVector) const$/;"	f	class:ns3::MacLow
GetAckSize	model/mac-low.cc	/^MacLow::GetAckSize (void) const$/;"	f	class:ns3::MacLow
GetAckTimeout	model/mac-low.cc	/^MacLow::GetAckTimeout (void) const$/;"	f	class:ns3::MacLow
GetAckTxVector	model/mac-low.cc	/^MacLow::GetAckTxVector (Mac48Address to, WifiMode dataTxMode) const$/;"	f	class:ns3::MacLow
GetAckTxVectorForData	model/mac-low.cc	/^MacLow::GetAckTxVectorForData (Mac48Address to, WifiMode dataTxMode) const$/;"	f	class:ns3::MacLow
GetAddress	model/mac-low.cc	/^MacLow::GetAddress (void) const$/;"	f	class:ns3::MacLow
GetBasicBlockAckTimeout	model/mac-low.cc	/^MacLow::GetBasicBlockAckTimeout () const$/;"	f	class:ns3::MacLow
GetBlockAckDuration	model/mac-low.cc	/^MacLow::GetBlockAckDuration (Mac48Address to, WifiTxVector blockAckReqTxVector, enum BlockAckType type) const$/;"	f	class:ns3::MacLow
GetBlockAckSize	model/mac-low.cc	/^MacLow::GetBlockAckSize (enum BlockAckType type) const$/;"	f	class:ns3::MacLow
GetBlockAckTxVector	model/mac-low.cc	/^MacLow::GetBlockAckTxVector (Mac48Address to, WifiMode dataTxMode) const$/;"	f	class:ns3::MacLow
GetBssid	model/mac-low.cc	/^MacLow::GetBssid (void) const$/;"	f	class:ns3::MacLow
GetCompressedBlockAckTimeout	model/mac-low.cc	/^MacLow::GetCompressedBlockAckTimeout () const$/;"	f	class:ns3::MacLow
GetCtsDuration	model/mac-low.cc	/^MacLow::GetCtsDuration (Mac48Address to, WifiTxVector rtsTxVector) const$/;"	f	class:ns3::MacLow
GetCtsDuration	model/mac-low.cc	/^MacLow::GetCtsDuration (WifiTxVector ctsTxVector) const$/;"	f	class:ns3::MacLow
GetCtsSize	model/mac-low.cc	/^MacLow::GetCtsSize (void) const$/;"	f	class:ns3::MacLow
GetCtsTimeout	model/mac-low.cc	/^MacLow::GetCtsTimeout (void) const$/;"	f	class:ns3::MacLow
GetCtsToSelfSupported	model/mac-low.cc	/^MacLow::GetCtsToSelfSupported () const$/;"	f	class:ns3::MacLow
GetCtsToSelfTxVector	model/mac-low.cc	/^MacLow::GetCtsToSelfTxVector (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetCtsTxVector	model/mac-low.cc	/^MacLow::GetCtsTxVector (Mac48Address to, WifiMode rtsTxMode) const$/;"	f	class:ns3::MacLow
GetCtsTxVectorForRts	model/mac-low.cc	/^MacLow::GetCtsTxVectorForRts (Mac48Address to, WifiMode rtsTxMode) const$/;"	f	class:ns3::MacLow
GetDataTxVector	model/mac-low.cc	/^MacLow::GetDataTxVector (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetDurationId	model/mac-low.cc	/^MacLowTransmissionParameters::GetDurationId (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
GetNOutstandingPackets	model/mac-low.cc	/^MacLowBlockAckEventListener::GetNOutstandingPackets (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::MacLowBlockAckEventListener
GetNRetryNeededPackets	model/mac-low.cc	/^MacLowBlockAckEventListener::GetNRetryNeededPackets (Mac48Address recipient, uint8_t tid) const$/;"	f	class:ns3::MacLowBlockAckEventListener
GetNextPacketSize	model/mac-low.cc	/^MacLowTransmissionParameters::GetNextPacketSize (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
GetNextSequenceNumberfor	model/mac-low.cc	/^MacLowBlockAckEventListener::GetNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::MacLowBlockAckEventListener
GetPhy	model/mac-low.cc	/^MacLow::GetPhy (void) const$/;"	f	class:ns3::MacLow
GetPifs	model/mac-low.cc	/^MacLow::GetPifs (void) const$/;"	f	class:ns3::MacLow
GetRifs	model/mac-low.cc	/^MacLow::GetRifs (void) const$/;"	f	class:ns3::MacLow
GetRtsSize	model/mac-low.cc	/^MacLow::GetRtsSize (void) const$/;"	f	class:ns3::MacLow
GetRtsTxVector	model/mac-low.cc	/^MacLow::GetRtsTxVector (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetSifs	model/mac-low.cc	/^MacLow::GetSifs (void) const$/;"	f	class:ns3::MacLow
GetSize	model/mac-low.cc	/^MacLow::GetSize (Ptr<const Packet> packet, const WifiMacHeader *hdr) const$/;"	f	class:ns3::MacLow
GetSlotTime	model/mac-low.cc	/^MacLow::GetSlotTime (void) const$/;"	f	class:ns3::MacLow
GetTid	model/mac-low.cc	/^MacLow::GetTid (Ptr<const Packet> packet, const WifiMacHeader hdr) const$/;"	f	class:ns3::MacLow
GotBlockAck	model/mac-low.cc	/^MacLowTransmissionListener::GotBlockAck (const CtrlBAckResponseHeader *blockAck, Mac48Address source, WifiMode mode)$/;"	f	class:ns3::MacLowTransmissionListener
HasDurationId	model/mac-low.cc	/^MacLowTransmissionParameters::HasDurationId (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
HasNextPacket	model/mac-low.cc	/^MacLowTransmissionParameters::HasNextPacket (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
IsAmpdu	model/mac-low.cc	/^MacLow::IsAmpdu (Ptr<const Packet> packet, const WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
IsInWindow	model/mac-low.cc	/^MacLow::IsInWindow (uint16_t seq, uint16_t winstart, uint16_t winsize)$/;"	f	class:ns3::MacLow
IsNavZero	model/mac-low.cc	/^MacLow::IsNavZero (void) const$/;"	f	class:ns3::MacLow
IsPromisc	model/mac-low.cc	/^MacLow::IsPromisc (void) const$/;"	f	class:ns3::MacLow
MacLow	model/mac-low.cc	/^MacLow::MacLow ()$/;"	f	class:ns3::MacLow
MacLowBlockAckEventListener	model/mac-low.cc	/^MacLowBlockAckEventListener::MacLowBlockAckEventListener ()$/;"	f	class:ns3::MacLowBlockAckEventListener
MacLowDcfListener	model/mac-low.cc	/^MacLowDcfListener::MacLowDcfListener ()$/;"	f	class:ns3::MacLowDcfListener
MacLowTransmissionListener	model/mac-low.cc	/^MacLowTransmissionListener::MacLowTransmissionListener ()$/;"	f	class:ns3::MacLowTransmissionListener
MacLowTransmissionParameters	model/mac-low.cc	/^MacLowTransmissionParameters::MacLowTransmissionParameters ()$/;"	f	class:ns3::MacLowTransmissionParameters
MissedBlockAck	model/mac-low.cc	/^MacLowTransmissionListener::MissedBlockAck (void)$/;"	f	class:ns3::MacLowTransmissionListener
MustSendRts	model/mac-low.cc	/^MacLowTransmissionParameters::MustSendRts (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitAck	model/mac-low.cc	/^MacLowTransmissionParameters::MustWaitAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitBasicBlockAck	model/mac-low.cc	/^MacLowTransmissionParameters::MustWaitBasicBlockAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitCompressedBlockAck	model/mac-low.cc	/^MacLowTransmissionParameters::MustWaitCompressedBlockAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitFastAck	model/mac-low.cc	/^MacLowTransmissionParameters::MustWaitFastAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitMultiTidBlockAck	model/mac-low.cc	/^MacLowTransmissionParameters::MustWaitMultiTidBlockAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitNormalAck	model/mac-low.cc	/^MacLowTransmissionParameters::MustWaitNormalAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
MustWaitSuperFastAck	model/mac-low.cc	/^MacLowTransmissionParameters::MustWaitSuperFastAck (void) const$/;"	f	class:ns3::MacLowTransmissionParameters
NS_LOG_APPEND_CONTEXT	model/mac-low.cc	42;"	d	file:
NS_LOG_APPEND_CONTEXT	model/mac-low.cc	43;"	d	file:
NavCounterResetCtsMissed	model/mac-low.cc	/^MacLow::NavCounterResetCtsMissed (Time rtsEndRxTime)$/;"	f	class:ns3::MacLow
NeedCtsToSelf	model/mac-low.cc	/^MacLow::NeedCtsToSelf (void)$/;"	f	class:ns3::MacLow
NormalAckTimeout	model/mac-low.cc	/^MacLow::NormalAckTimeout (void)$/;"	f	class:ns3::MacLow
NotifyAckTimeoutResetNow	model/mac-low.cc	/^MacLow::NotifyAckTimeoutResetNow ()$/;"	f	class:ns3::MacLow
NotifyAckTimeoutStartNow	model/mac-low.cc	/^MacLow::NotifyAckTimeoutStartNow (Time duration)$/;"	f	class:ns3::MacLow
NotifyCtsTimeoutResetNow	model/mac-low.cc	/^MacLow::NotifyCtsTimeoutResetNow ()$/;"	f	class:ns3::MacLow
NotifyCtsTimeoutStartNow	model/mac-low.cc	/^MacLow::NotifyCtsTimeoutStartNow (Time duration)$/;"	f	class:ns3::MacLow
NotifyMaybeCcaBusyStart	model/mac-low.cc	/^  virtual void NotifyMaybeCcaBusyStart (Time duration)$/;"	f	class:ns3::PhyMacLowListener
NotifyNav	model/mac-low.cc	/^MacLow::NotifyNav (Ptr<const Packet> packet,const WifiMacHeader &hdr, WifiMode txMode, WifiPreamble preamble)$/;"	f	class:ns3::MacLow
NotifyRxEndError	model/mac-low.cc	/^  virtual void NotifyRxEndError (void)$/;"	f	class:ns3::PhyMacLowListener
NotifyRxEndOk	model/mac-low.cc	/^  virtual void NotifyRxEndOk (void)$/;"	f	class:ns3::PhyMacLowListener
NotifyRxStart	model/mac-low.cc	/^  virtual void NotifyRxStart (Time duration)$/;"	f	class:ns3::PhyMacLowListener
NotifySleep	model/mac-low.cc	/^  virtual void NotifySleep (void)$/;"	f	class:ns3::PhyMacLowListener
NotifySleepNow	model/mac-low.cc	/^MacLow::NotifySleepNow (void)$/;"	f	class:ns3::MacLow
NotifySwitchingStart	model/mac-low.cc	/^  virtual void NotifySwitchingStart (Time duration)$/;"	f	class:ns3::PhyMacLowListener
NotifySwitchingStartNow	model/mac-low.cc	/^MacLow::NotifySwitchingStartNow (Time duration)$/;"	f	class:ns3::MacLow
NotifyTxStart	model/mac-low.cc	/^  virtual void NotifyTxStart (Time duration, double txPowerDbm)$/;"	f	class:ns3::PhyMacLowListener
NotifyWakeup	model/mac-low.cc	/^  virtual void NotifyWakeup (void)$/;"	f	class:ns3::PhyMacLowListener
PeekNextPacketInBaQueue	model/mac-low.cc	/^MacLowBlockAckEventListener::PeekNextPacketInBaQueue (WifiMacHeader &header, Mac48Address recipient, uint8_t tid, Time *timestamp)$/;"	f	class:ns3::MacLowBlockAckEventListener
PeekNextSequenceNumberfor	model/mac-low.cc	/^MacLowBlockAckEventListener::PeekNextSequenceNumberfor (WifiMacHeader *hdr)$/;"	f	class:ns3::MacLowBlockAckEventListener
PhyMacLowListener	model/mac-low.cc	/^  PhyMacLowListener (ns3::MacLow *macLow)$/;"	f	class:ns3::PhyMacLowListener
PhyMacLowListener	model/mac-low.cc	/^class PhyMacLowListener : public ns3::WifiPhyListener$/;"	c	namespace:ns3	file:
ReceiveError	model/mac-low.cc	/^MacLow::ReceiveError (Ptr<const Packet> packet, double rxSnr)$/;"	f	class:ns3::MacLow
ReceiveMpdu	model/mac-low.cc	/^MacLow::ReceiveMpdu (Ptr<Packet> packet, WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
ReceiveOk	model/mac-low.cc	/^MacLow::ReceiveOk (Ptr<Packet> packet, double rxSnr, WifiMode txMode, WifiPreamble preamble, bool ampduSubframe)$/;"	f	class:ns3::MacLow
RegisterBlockAckListenerForAc	model/mac-low.cc	/^MacLow::RegisterBlockAckListenerForAc (enum AcIndex ac, MacLowBlockAckEventListener *listener)$/;"	f	class:ns3::MacLow
RegisterDcfListener	model/mac-low.cc	/^MacLow::RegisterDcfListener (MacLowDcfListener *listener)$/;"	f	class:ns3::MacLow
RemoveFromBaQueue	model/mac-low.cc	/^MacLowBlockAckEventListener::RemoveFromBaQueue (uint8_t tid, Mac48Address recipient, uint16_t seqnumber)$/;"	f	class:ns3::MacLowBlockAckEventListener
RemovePhyMacLowListener	model/mac-low.cc	/^MacLow::RemovePhyMacLowListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MacLow
ResetBlockAckInactivityTimerIfNeeded	model/mac-low.cc	/^MacLow::ResetBlockAckInactivityTimerIfNeeded (BlockAckAgreement &agreement)$/;"	f	class:ns3::MacLow
ResetPhy	model/mac-low.cc	/^MacLow::ResetPhy (void)$/;"	f	class:ns3::MacLow
RxCompleteBufferedPacketsUntilFirstLost	model/mac-low.cc	/^MacLow::RxCompleteBufferedPacketsUntilFirstLost (Mac48Address originator, uint8_t tid)$/;"	f	class:ns3::MacLow
RxCompleteBufferedPacketsWithSmallerSequence	model/mac-low.cc	/^MacLow::RxCompleteBufferedPacketsWithSmallerSequence (uint16_t seq, Mac48Address originator, uint8_t tid)$/;"	f	class:ns3::MacLow
SendAckAfterData	model/mac-low.cc	/^MacLow::SendAckAfterData (Mac48Address source, Time duration, WifiMode dataTxMode, double dataSnr)$/;"	f	class:ns3::MacLow
SendBlockAckAfterAmpdu	model/mac-low.cc	/^MacLow::SendBlockAckAfterAmpdu (uint8_t tid, Mac48Address originator, Time duration, WifiMode blockAckReqTxMode)$/;"	f	class:ns3::MacLow
SendBlockAckAfterBlockAckRequest	model/mac-low.cc	/^MacLow::SendBlockAckAfterBlockAckRequest (const CtrlBAckRequestHeader reqHdr, Mac48Address originator,$/;"	f	class:ns3::MacLow
SendBlockAckResponse	model/mac-low.cc	/^MacLow::SendBlockAckResponse (const CtrlBAckResponseHeader* blockAck, Mac48Address originator, bool immediate,$/;"	f	class:ns3::MacLow
SendCtsAfterRts	model/mac-low.cc	/^MacLow::SendCtsAfterRts (Mac48Address source, Time duration, WifiMode rtsTxMode, double rtsSnr)$/;"	f	class:ns3::MacLow
SendCtsToSelf	model/mac-low.cc	/^MacLow::SendCtsToSelf (void)$/;"	f	class:ns3::MacLow
SendDataAfterCts	model/mac-low.cc	/^MacLow::SendDataAfterCts (Mac48Address source, Time duration, WifiMode txMode)$/;"	f	class:ns3::MacLow
SendDataPacket	model/mac-low.cc	/^MacLow::SendDataPacket (void)$/;"	f	class:ns3::MacLow
SendPacket	model/mac-low.cc	/^MacLow::SendPacket (Ptr<const Packet> packet, WifiTxVector txVector, WifiPreamble preamble, uint8_t packetType)$/;"	f	class:ns3::MacLow
SendRtsForPacket	model/mac-low.cc	/^MacLow::SendRtsForPacket (void)$/;"	f	class:ns3::MacLow
SetAckTimeout	model/mac-low.cc	/^MacLow::SetAckTimeout (Time ackTimeout)$/;"	f	class:ns3::MacLow
SetAddress	model/mac-low.cc	/^MacLow::SetAddress (Mac48Address ad)$/;"	f	class:ns3::MacLow
SetAmpdu	model/mac-low.cc	/^void MacLowBlockAckEventListener::SetAmpdu (bool ampdu)$/;"	f	class:ns3::MacLowBlockAckEventListener
SetBasicBlockAckTimeout	model/mac-low.cc	/^MacLow::SetBasicBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::MacLow
SetBssid	model/mac-low.cc	/^MacLow::SetBssid (Mac48Address bssid)$/;"	f	class:ns3::MacLow
SetCompressedBlockAckTimeout	model/mac-low.cc	/^MacLow::SetCompressedBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::MacLow
SetCtsTimeout	model/mac-low.cc	/^MacLow::SetCtsTimeout (Time ctsTimeout)$/;"	f	class:ns3::MacLow
SetCtsToSelfSupported	model/mac-low.cc	/^MacLow::SetCtsToSelfSupported (bool enable)$/;"	f	class:ns3::MacLow
SetMpduAggregator	model/mac-low.cc	/^MacLow::SetMpduAggregator (Ptr<MpduAggregator> aggregator)$/;"	f	class:ns3::MacLow
SetPhy	model/mac-low.cc	/^MacLow::SetPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MacLow
SetPifs	model/mac-low.cc	/^MacLow::SetPifs (Time pifs)$/;"	f	class:ns3::MacLow
SetPromisc	model/mac-low.cc	/^MacLow::SetPromisc (void)$/;"	f	class:ns3::MacLow
SetRifs	model/mac-low.cc	/^MacLow::SetRifs (Time rifs)$/;"	f	class:ns3::MacLow
SetRxCallback	model/mac-low.cc	/^MacLow::SetRxCallback (Callback<void,Ptr<Packet>,const WifiMacHeader *> callback)$/;"	f	class:ns3::MacLow
SetSifs	model/mac-low.cc	/^MacLow::SetSifs (Time sifs)$/;"	f	class:ns3::MacLow
SetSlotTime	model/mac-low.cc	/^MacLow::SetSlotTime (Time slotTime)$/;"	f	class:ns3::MacLow
SetWifiRemoteStationManager	model/mac-low.cc	/^MacLow::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> manager)$/;"	f	class:ns3::MacLow
SetupPhyMacLowListener	model/mac-low.cc	/^MacLow::SetupPhyMacLowListener (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MacLow
StartDataTxTimers	model/mac-low.cc	/^MacLow::StartDataTxTimers (WifiTxVector dataTxVector)$/;"	f	class:ns3::MacLow
StartTransmission	model/mac-low.cc	/^MacLow::StartTransmission (Ptr<const Packet> packet,$/;"	f	class:ns3::MacLow
StopAggregation	model/mac-low.cc	/^MacLow::StopAggregation(Ptr<const Packet> peekedPacket, WifiMacHeader peekedHdr, Ptr<Packet> aggregatedPacket, uint16_t size) const$/;"	f	class:ns3::MacLow
StoreMpduIfNeeded	model/mac-low.cc	/^MacLow::StoreMpduIfNeeded (Ptr<Packet> packet, WifiMacHeader hdr)$/;"	f	class:ns3::MacLow
SuperFastAckTimeout	model/mac-low.cc	/^MacLow::SuperFastAckTimeout ()$/;"	f	class:ns3::MacLow
WaitSifsAfterEndTx	model/mac-low.cc	/^MacLow::WaitSifsAfterEndTx (void)$/;"	f	class:ns3::MacLow
m_macLow	model/mac-low.cc	/^  ns3::MacLow *m_macLow;$/;"	m	class:ns3::PhyMacLowListener	file:
ns3	model/mac-low.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/mac-low.cc	/^std::ostream &operator << (std::ostream &os, const MacLowTransmissionParameters &params)$/;"	f	namespace:ns3
~MacLow	model/mac-low.cc	/^MacLow::~MacLow ()$/;"	f	class:ns3::MacLow
~MacLowBlockAckEventListener	model/mac-low.cc	/^MacLowBlockAckEventListener::~MacLowBlockAckEventListener ()$/;"	f	class:ns3::MacLowBlockAckEventListener
~MacLowDcfListener	model/mac-low.cc	/^MacLowDcfListener::~MacLowDcfListener ()$/;"	f	class:ns3::MacLowDcfListener
~MacLowTransmissionListener	model/mac-low.cc	/^MacLowTransmissionListener::~MacLowTransmissionListener ()$/;"	f	class:ns3::MacLowTransmissionListener
~PhyMacLowListener	model/mac-low.cc	/^  virtual ~PhyMacLowListener ()$/;"	f	class:ns3::PhyMacLowListener
ACK_FAST	model/mac-low.h	/^    ACK_FAST,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon4
ACK_NONE	model/mac-low.h	/^    ACK_NONE,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon4
ACK_NORMAL	model/mac-low.h	/^    ACK_NORMAL,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon4
ACK_SUPER_FAST	model/mac-low.h	/^    ACK_SUPER_FAST,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon4
AgreementKey	model/mac-low.h	/^  typedef std::pair<Mac48Address, uint8_t> AgreementKey;$/;"	t	class:ns3::MacLow
AgreementValue	model/mac-low.h	/^  typedef std::pair<BlockAckAgreement, std::list<BufferedPacket> > AgreementValue;$/;"	t	class:ns3::MacLow
Agreements	model/mac-low.h	/^  typedef std::map<AgreementKey, AgreementValue> Agreements;$/;"	t	class:ns3::MacLow
AgreementsI	model/mac-low.h	/^  typedef std::map<AgreementKey, AgreementValue>::iterator AgreementsI;$/;"	t	class:ns3::MacLow
BLOCK_ACK_BASIC	model/mac-low.h	/^    BLOCK_ACK_BASIC,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon4
BLOCK_ACK_COMPRESSED	model/mac-low.h	/^    BLOCK_ACK_COMPRESSED,$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon4
BLOCK_ACK_MULTI_TID	model/mac-low.h	/^    BLOCK_ACK_MULTI_TID$/;"	e	enum:ns3::MacLowTransmissionParameters::__anon4
BlockAckCaches	model/mac-low.h	/^  typedef std::map<AgreementKey, BlockAckCache> BlockAckCaches;$/;"	t	class:ns3::MacLow
BlockAckCachesI	model/mac-low.h	/^  typedef std::map<AgreementKey, BlockAckCache>::iterator BlockAckCachesI;$/;"	t	class:ns3::MacLow
BufferedPacket	model/mac-low.h	/^  typedef std::pair<Ptr<Packet>, WifiMacHeader> BufferedPacket;$/;"	t	class:ns3::MacLow
BufferedPacketI	model/mac-low.h	/^  typedef std::list<BufferedPacket>::iterator BufferedPacketI;$/;"	t	class:ns3::MacLow
DcfListeners	model/mac-low.h	/^  typedef std::vector<MacLowDcfListener *> DcfListeners;$/;"	t	class:ns3::MacLow
DcfListenersCI	model/mac-low.h	/^  typedef std::vector<MacLowDcfListener *>::const_iterator DcfListenersCI;$/;"	t	class:ns3::MacLow
MAC_LOW_H	model/mac-low.h	23;"	d
MacLow	model/mac-low.h	/^class MacLow : public Object$/;"	c	namespace:ns3
MacLowBlockAckEventListener	model/mac-low.h	/^class MacLowBlockAckEventListener$/;"	c	namespace:ns3
MacLowDcfListener	model/mac-low.h	/^class MacLowDcfListener$/;"	c	namespace:ns3
MacLowRxCallback	model/mac-low.h	/^  typedef Callback<void, Ptr<Packet>, const WifiMacHeader*> MacLowRxCallback;$/;"	t	class:ns3::MacLow
MacLowTransmissionListener	model/mac-low.h	/^class MacLowTransmissionListener$/;"	c	namespace:ns3
MacLowTransmissionParameters	model/mac-low.h	/^class MacLowTransmissionParameters$/;"	c	namespace:ns3
QueueListeners	model/mac-low.h	/^  typedef std::map<AcIndex, MacLowBlockAckEventListener*> QueueListeners;$/;"	t	class:ns3::MacLow
m_ackTimeout	model/mac-low.h	/^  Time m_ackTimeout;                        \/\/!< ACK timeout duration$/;"	m	class:ns3::MacLow
m_aggregateQueue	model/mac-low.h	/^  Ptr<WifiMacQueue> m_aggregateQueue; \/\/!< Queue used for MPDU aggregation$/;"	m	class:ns3::MacLow
m_ampdu	model/mac-low.h	/^  bool m_ampdu;    \/\/!< Flag if the current transmission involves an A-MPDU$/;"	m	class:ns3::MacLow
m_bAckAgreements	model/mac-low.h	/^  Agreements m_bAckAgreements;$/;"	m	class:ns3::MacLow
m_bAckCaches	model/mac-low.h	/^  BlockAckCaches m_bAckCaches;$/;"	m	class:ns3::MacLow
m_basicBlockAckTimeout	model/mac-low.h	/^  Time m_basicBlockAckTimeout;              \/\/!< Basic block ACK timeout duration$/;"	m	class:ns3::MacLow
m_blockAckTimeoutEvent	model/mac-low.h	/^  EventId m_blockAckTimeoutEvent;       \/\/!< Block ACK timeout event$/;"	m	class:ns3::MacLow
m_bssid	model/mac-low.h	/^  Mac48Address m_bssid;                     \/\/!< BSSID address (Mac48Address)$/;"	m	class:ns3::MacLow
m_compressedBlockAckTimeout	model/mac-low.h	/^  Time m_compressedBlockAckTimeout;         \/\/!< Compressed block ACK timeout duration$/;"	m	class:ns3::MacLow
m_ctsTimeout	model/mac-low.h	/^  Time m_ctsTimeout;                        \/\/!< CTS timeout duration$/;"	m	class:ns3::MacLow
m_ctsTimeoutEvent	model/mac-low.h	/^  EventId m_ctsTimeoutEvent;            \/\/!< CTS timeout event$/;"	m	class:ns3::MacLow
m_ctsToSelfSupported	model/mac-low.h	/^  bool m_ctsToSelfSupported;          \/\/!< Flag whether CTS-to-self is supported$/;"	m	class:ns3::MacLow
m_currentHdr	model/mac-low.h	/^  WifiMacHeader m_currentHdr;               \/\/!< Header of the current packet$/;"	m	class:ns3::MacLow
m_currentMode	model/mac-low.h	/^  WifiMode m_currentMode;             \/\/!< mode used for the current packet transmission$/;"	m	class:ns3::MacLow
m_currentPacket	model/mac-low.h	/^  Ptr<Packet> m_currentPacket;              \/\/!< Current packet transmitted\/to be transmitted$/;"	m	class:ns3::MacLow
m_dcfListeners	model/mac-low.h	/^  DcfListeners m_dcfListeners; \/\/!< List of MacLowDcfListener (pass events to Dcf)$/;"	m	class:ns3::MacLow
m_edcaListeners	model/mac-low.h	/^  QueueListeners m_edcaListeners;$/;"	m	class:ns3::MacLow
m_endTxNoAckEvent	model/mac-low.h	/^  EventId m_endTxNoAckEvent;            \/\/!< Event for finishing transmission that does not require ACK$/;"	m	class:ns3::MacLow
m_fastAckFailedTimeoutEvent	model/mac-low.h	/^  EventId m_fastAckFailedTimeoutEvent;  \/\/!< Fast ACK failed timeout event$/;"	m	class:ns3::MacLow
m_fastAckTimeoutEvent	model/mac-low.h	/^  EventId m_fastAckTimeoutEvent;        \/\/!< Fast ACK timeout event$/;"	m	class:ns3::MacLow
m_lastNavDuration	model/mac-low.h	/^  Time m_lastNavDuration;  \/\/!< The duration of the latest NAV$/;"	m	class:ns3::MacLow
m_lastNavStart	model/mac-low.h	/^  Time m_lastNavStart;     \/\/!< The time when the latest NAV started$/;"	m	class:ns3::MacLow
m_listener	model/mac-low.h	/^  MacLowTransmissionListener *m_listener;   \/\/!< Transmission listener for the current packet$/;"	m	class:ns3::MacLow
m_mpduAggregator	model/mac-low.h	/^  Ptr<MpduAggregator> m_mpduAggregator; \/\/!<$/;"	m	class:ns3::MacLow
m_navCounterResetCtsMissed	model/mac-low.h	/^  EventId m_navCounterResetCtsMissed;   \/\/!< Event to reset NAV when CTS is not received$/;"	m	class:ns3::MacLow
m_nextSize	model/mac-low.h	/^  uint32_t m_nextSize;$/;"	m	class:ns3::MacLowTransmissionParameters
m_normalAckTimeoutEvent	model/mac-low.h	/^  EventId m_normalAckTimeoutEvent;      \/\/!< Normal ACK timeout event$/;"	m	class:ns3::MacLow
m_overrideDurationId	model/mac-low.h	/^  Time m_overrideDurationId;$/;"	m	class:ns3::MacLowTransmissionParameters
m_phy	model/mac-low.h	/^  Ptr<WifiPhy> m_phy; \/\/!< Pointer to WifiPhy (actually send\/receives frames)$/;"	m	class:ns3::MacLow
m_phyMacLowListener	model/mac-low.h	/^  class PhyMacLowListener * m_phyMacLowListener; \/\/!< Listener needed to monitor when a channel switching occurs.$/;"	m	class:ns3::MacLow	typeref:class:ns3::MacLow::PhyMacLowListener
m_pifs	model/mac-low.h	/^  Time m_pifs;                              \/\/!< PCF Interframe Space (PIFS) duration$/;"	m	class:ns3::MacLow
m_promisc	model/mac-low.h	/^  bool m_promisc;  \/\/!< Flag if the device is operating in promiscuous mode$/;"	m	class:ns3::MacLow
m_receivedAtLeastOneMpdu	model/mac-low.h	/^  bool m_receivedAtLeastOneMpdu;      \/\/!< Flag whether an MPDU has already been successfully received while receiving an A-MPDU$/;"	m	class:ns3::MacLow
m_rifs	model/mac-low.h	/^  Time m_rifs;                              \/\/!< Reduced Interframe Space (RIFS) duration$/;"	m	class:ns3::MacLow
m_rxCallback	model/mac-low.h	/^  MacLowRxCallback m_rxCallback; \/\/!< Callback to pass packet up$/;"	m	class:ns3::MacLow
m_self	model/mac-low.h	/^  Mac48Address m_self;                      \/\/!< Address of this MacLow (Mac48Address)$/;"	m	class:ns3::MacLow
m_sendAckEvent	model/mac-low.h	/^  EventId m_sendAckEvent;               \/\/!< Event to send ACK$/;"	m	class:ns3::MacLow
m_sendCtsEvent	model/mac-low.h	/^  EventId m_sendCtsEvent;               \/\/!< Event to send CTS$/;"	m	class:ns3::MacLow
m_sendDataEvent	model/mac-low.h	/^  EventId m_sendDataEvent;              \/\/!< Event to send DATA$/;"	m	class:ns3::MacLow
m_sendRts	model/mac-low.h	/^  bool m_sendRts;$/;"	m	class:ns3::MacLowTransmissionParameters
m_sentMpdus	model/mac-low.h	/^  uint8_t m_sentMpdus;                \/\/!< Number of transmitted MPDUs in an A-MPDU that have not been acknowledged yet$/;"	m	class:ns3::MacLow
m_sifs	model/mac-low.h	/^  Time m_sifs;                              \/\/!< Short Interframe Space (SIFS) duration$/;"	m	class:ns3::MacLow
m_slotTime	model/mac-low.h	/^  Time m_slotTime;                          \/\/!< Slot duration$/;"	m	class:ns3::MacLow
m_stationManager	model/mac-low.h	/^  Ptr<WifiRemoteStationManager> m_stationManager; \/\/!< Pointer to WifiRemoteStationManager (rate control)$/;"	m	class:ns3::MacLow
m_superFastAckTimeoutEvent	model/mac-low.h	/^  EventId m_superFastAckTimeoutEvent;   \/\/!< Super fast ACK timeout event$/;"	m	class:ns3::MacLow
m_txParams	model/mac-low.h	/^  MacLowTransmissionParameters m_txParams;  \/\/!< Transmission parameters of the current packet$/;"	m	class:ns3::MacLow
m_waitAck	model/mac-low.h	/^  } m_waitAck;$/;"	m	class:ns3::MacLowTransmissionParameters	typeref:enum:ns3::MacLowTransmissionParameters::__anon4
m_waitRifsEvent	model/mac-low.h	/^  EventId m_waitRifsEvent;              \/\/!< Wait for RIFS event$/;"	m	class:ns3::MacLow
m_waitSifsEvent	model/mac-low.h	/^  EventId m_waitSifsEvent;              \/\/!< Wait for SIFS event$/;"	m	class:ns3::MacLow
ns3	model/mac-low.h	/^namespace ns3 {$/;"	n
AccumulateFirstFragment	model/mac-rx-middle.cc	/^  void AccumulateFirstFragment (Ptr<const Packet> packet)$/;"	f	class:ns3::OriginatorRxStatus
AccumulateFragment	model/mac-rx-middle.cc	/^  void AccumulateFragment (Ptr<const Packet> packet)$/;"	f	class:ns3::OriginatorRxStatus
AccumulateLastFragment	model/mac-rx-middle.cc	/^  Ptr<Packet> AccumulateLastFragment (Ptr<const Packet> packet)$/;"	f	class:ns3::OriginatorRxStatus
Fragments	model/mac-rx-middle.cc	/^  typedef std::list<Ptr<const Packet> > Fragments;$/;"	t	class:ns3::OriginatorRxStatus	file:
FragmentsCI	model/mac-rx-middle.cc	/^  typedef std::list<Ptr<const Packet> >::const_iterator FragmentsCI;$/;"	t	class:ns3::OriginatorRxStatus	file:
GetLastSequenceControl	model/mac-rx-middle.cc	/^  uint16_t GetLastSequenceControl (void)$/;"	f	class:ns3::OriginatorRxStatus
HandleFragments	model/mac-rx-middle.cc	/^MacRxMiddle::HandleFragments (Ptr<Packet> packet, const WifiMacHeader *hdr,$/;"	f	class:ns3::MacRxMiddle
IsDeFragmenting	model/mac-rx-middle.cc	/^  bool IsDeFragmenting (void)$/;"	f	class:ns3::OriginatorRxStatus
IsDuplicate	model/mac-rx-middle.cc	/^MacRxMiddle::IsDuplicate (const WifiMacHeader* hdr,$/;"	f	class:ns3::MacRxMiddle
IsNextFragment	model/mac-rx-middle.cc	/^  bool IsNextFragment (uint16_t sequenceControl)$/;"	f	class:ns3::OriginatorRxStatus
Lookup	model/mac-rx-middle.cc	/^MacRxMiddle::Lookup (const WifiMacHeader *hdr)$/;"	f	class:ns3::MacRxMiddle
MacRxMiddle	model/mac-rx-middle.cc	/^MacRxMiddle::MacRxMiddle ()$/;"	f	class:ns3::MacRxMiddle
OriginatorRxStatus	model/mac-rx-middle.cc	/^  OriginatorRxStatus ()$/;"	f	class:ns3::OriginatorRxStatus
OriginatorRxStatus	model/mac-rx-middle.cc	/^class OriginatorRxStatus$/;"	c	namespace:ns3	file:
Receive	model/mac-rx-middle.cc	/^MacRxMiddle::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::MacRxMiddle
SetForwardCallback	model/mac-rx-middle.cc	/^MacRxMiddle::SetForwardCallback (ForwardUpCallback callback)$/;"	f	class:ns3::MacRxMiddle
SetSequenceControl	model/mac-rx-middle.cc	/^  void SetSequenceControl (uint16_t sequenceControl)$/;"	f	class:ns3::OriginatorRxStatus
m_defragmenting	model/mac-rx-middle.cc	/^  bool m_defragmenting;$/;"	m	class:ns3::OriginatorRxStatus	file:
m_fragments	model/mac-rx-middle.cc	/^  Fragments m_fragments;$/;"	m	class:ns3::OriginatorRxStatus	file:
m_lastSequenceControl	model/mac-rx-middle.cc	/^  uint16_t m_lastSequenceControl;$/;"	m	class:ns3::OriginatorRxStatus	file:
ns3	model/mac-rx-middle.cc	/^namespace ns3 {$/;"	n	file:
~MacRxMiddle	model/mac-rx-middle.cc	/^MacRxMiddle::~MacRxMiddle ()$/;"	f	class:ns3::MacRxMiddle
~OriginatorRxStatus	model/mac-rx-middle.cc	/^  ~OriginatorRxStatus ()$/;"	f	class:ns3::OriginatorRxStatus
ForwardUpCallback	model/mac-rx-middle.h	/^  typedef Callback<void, Ptr<Packet>, const WifiMacHeader*> ForwardUpCallback;$/;"	t	class:ns3::MacRxMiddle
MAC_RX_MIDDLE_H	model/mac-rx-middle.h	22;"	d
MacRxMiddle	model/mac-rx-middle.h	/^class MacRxMiddle$/;"	c	namespace:ns3
Originators	model/mac-rx-middle.h	/^  typedef std::map <Mac48Address, OriginatorRxStatus *, std::less<Mac48Address> > Originators;$/;"	t	class:ns3::MacRxMiddle
OriginatorsI	model/mac-rx-middle.h	/^  typedef std::map <Mac48Address, OriginatorRxStatus *, std::less<Mac48Address> >::iterator OriginatorsI;$/;"	t	class:ns3::MacRxMiddle
QosOriginators	model/mac-rx-middle.h	/^  typedef std::map <std::pair<Mac48Address, uint8_t>, OriginatorRxStatus *, std::less<std::pair<Mac48Address,uint8_t> > > QosOriginators;$/;"	t	class:ns3::MacRxMiddle
QosOriginatorsI	model/mac-rx-middle.h	/^  typedef std::map <std::pair<Mac48Address, uint8_t>, OriginatorRxStatus *, std::less<std::pair<Mac48Address,uint8_t> > >::iterator QosOriginatorsI;$/;"	t	class:ns3::MacRxMiddle
m_callback	model/mac-rx-middle.h	/^  ForwardUpCallback m_callback;$/;"	m	class:ns3::MacRxMiddle
m_originatorStatus	model/mac-rx-middle.h	/^  Originators m_originatorStatus;$/;"	m	class:ns3::MacRxMiddle
m_qosOriginatorStatus	model/mac-rx-middle.h	/^  QosOriginators m_qosOriginatorStatus;$/;"	m	class:ns3::MacRxMiddle
ns3	model/mac-rx-middle.h	/^namespace ns3 {$/;"	n
GetNextSeqNumberByTidAndAddress	model/mac-tx-middle.cc	/^MacTxMiddle::GetNextSeqNumberByTidAndAddress (uint8_t tid, Mac48Address addr) const$/;"	f	class:ns3::MacTxMiddle
GetNextSequenceNumberfor	model/mac-tx-middle.cc	/^MacTxMiddle::GetNextSequenceNumberfor (const WifiMacHeader *hdr)$/;"	f	class:ns3::MacTxMiddle
MacTxMiddle	model/mac-tx-middle.cc	/^MacTxMiddle::MacTxMiddle ()$/;"	f	class:ns3::MacTxMiddle
PeekNextSequenceNumberfor	model/mac-tx-middle.cc	/^MacTxMiddle::PeekNextSequenceNumberfor (const WifiMacHeader *hdr)$/;"	f	class:ns3::MacTxMiddle
ns3	model/mac-tx-middle.cc	/^namespace ns3 {$/;"	n	file:
~MacTxMiddle	model/mac-tx-middle.cc	/^MacTxMiddle::~MacTxMiddle ()$/;"	f	class:ns3::MacTxMiddle
MAC_TX_MIDDLE_H	model/mac-tx-middle.h	24;"	d
MacTxMiddle	model/mac-tx-middle.h	/^class MacTxMiddle$/;"	c	namespace:ns3
m_qosSequences	model/mac-tx-middle.h	/^  std::map <Mac48Address,uint16_t*> m_qosSequences;$/;"	m	class:ns3::MacTxMiddle
m_sequence	model/mac-tx-middle.h	/^  uint16_t m_sequence;$/;"	m	class:ns3::MacTxMiddle
ns3	model/mac-tx-middle.h	/^namespace ns3 {$/;"	n
Deserialize	model/mgt-headers.cc	/^MgtAddBaRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAddBaRequestHeader
Deserialize	model/mgt-headers.cc	/^MgtAddBaResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAddBaResponseHeader
Deserialize	model/mgt-headers.cc	/^MgtAssocRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAssocRequestHeader
Deserialize	model/mgt-headers.cc	/^MgtAssocResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtAssocResponseHeader
Deserialize	model/mgt-headers.cc	/^MgtDelBaHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtDelBaHeader
Deserialize	model/mgt-headers.cc	/^MgtProbeRequestHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtProbeRequestHeader
Deserialize	model/mgt-headers.cc	/^MgtProbeResponseHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::MgtProbeResponseHeader
Deserialize	model/mgt-headers.cc	/^WifiActionHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiActionHeader
GetAction	model/mgt-headers.cc	/^WifiActionHeader::GetAction ()$/;"	f	class:ns3::WifiActionHeader
GetBeaconIntervalUs	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetBeaconIntervalUs (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetBufferSize	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetBufferSize (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetBufferSize	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetBufferSize (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetCategory	model/mgt-headers.cc	/^WifiActionHeader::GetCategory ()$/;"	f	class:ns3::WifiActionHeader
GetHtCapabilities	model/mgt-headers.cc	/^MgtAssocRequestHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetHtCapabilities	model/mgt-headers.cc	/^MgtAssocResponseHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetHtCapabilities	model/mgt-headers.cc	/^MgtProbeRequestHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetHtCapabilities	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetHtCapabilities (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetInstanceTypeId	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetInstanceTypeId	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetInstanceTypeId	model/mgt-headers.cc	/^MgtAssocRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetInstanceTypeId	model/mgt-headers.cc	/^MgtAssocResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetInstanceTypeId	model/mgt-headers.cc	/^MgtDelBaHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetInstanceTypeId	model/mgt-headers.cc	/^MgtProbeRequestHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetInstanceTypeId	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetInstanceTypeId	model/mgt-headers.cc	/^WifiActionHeader::GetInstanceTypeId () const$/;"	f	class:ns3::WifiActionHeader
GetListenInterval	model/mgt-headers.cc	/^MgtAssocRequestHeader::GetListenInterval (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetParameterSet	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetParameterSet (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetParameterSet	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetParameterSet (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetParameterSet	model/mgt-headers.cc	/^MgtDelBaHeader::GetParameterSet (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetSerializedSize	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetSerializedSize	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetSerializedSize	model/mgt-headers.cc	/^MgtAssocRequestHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetSerializedSize	model/mgt-headers.cc	/^MgtAssocResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtAssocResponseHeader
GetSerializedSize	model/mgt-headers.cc	/^MgtDelBaHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetSerializedSize	model/mgt-headers.cc	/^MgtProbeRequestHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetSerializedSize	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetSerializedSize (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetSerializedSize	model/mgt-headers.cc	/^WifiActionHeader::GetSerializedSize () const$/;"	f	class:ns3::WifiActionHeader
GetSsid	model/mgt-headers.cc	/^MgtAssocRequestHeader::GetSsid (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetSsid	model/mgt-headers.cc	/^MgtProbeRequestHeader::GetSsid (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetSsid	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetSsid (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetStartingSequence	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetStartingSequence (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetStartingSequenceControl	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetStartingSequenceControl (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetStatusCode	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetStatusCode (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetStatusCode	model/mgt-headers.cc	/^MgtAssocResponseHeader::GetStatusCode (void)$/;"	f	class:ns3::MgtAssocResponseHeader
GetSupportedRates	model/mgt-headers.cc	/^MgtAssocRequestHeader::GetSupportedRates (void) const$/;"	f	class:ns3::MgtAssocRequestHeader
GetSupportedRates	model/mgt-headers.cc	/^MgtAssocResponseHeader::GetSupportedRates (void)$/;"	f	class:ns3::MgtAssocResponseHeader
GetSupportedRates	model/mgt-headers.cc	/^MgtProbeRequestHeader::GetSupportedRates (void) const$/;"	f	class:ns3::MgtProbeRequestHeader
GetSupportedRates	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetSupportedRates (void) const$/;"	f	class:ns3::MgtProbeResponseHeader
GetTid	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetTid (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetTid	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetTid (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetTid	model/mgt-headers.cc	/^MgtDelBaHeader::GetTid (void) const$/;"	f	class:ns3::MgtDelBaHeader
GetTimeout	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetTimeout (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
GetTimeout	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetTimeout (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
GetTimestamp	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetTimestamp ()$/;"	f	class:ns3::MgtProbeResponseHeader
GetTypeId	model/mgt-headers.cc	/^MgtAddBaRequestHeader::GetTypeId (void)$/;"	f	class:ns3::MgtAddBaRequestHeader
GetTypeId	model/mgt-headers.cc	/^MgtAddBaResponseHeader::GetTypeId ()$/;"	f	class:ns3::MgtAddBaResponseHeader
GetTypeId	model/mgt-headers.cc	/^MgtAssocRequestHeader::GetTypeId (void)$/;"	f	class:ns3::MgtAssocRequestHeader
GetTypeId	model/mgt-headers.cc	/^MgtAssocResponseHeader::GetTypeId (void)$/;"	f	class:ns3::MgtAssocResponseHeader
GetTypeId	model/mgt-headers.cc	/^MgtDelBaHeader::GetTypeId (void)$/;"	f	class:ns3::MgtDelBaHeader
GetTypeId	model/mgt-headers.cc	/^MgtProbeRequestHeader::GetTypeId (void)$/;"	f	class:ns3::MgtProbeRequestHeader
GetTypeId	model/mgt-headers.cc	/^MgtProbeResponseHeader::GetTypeId (void)$/;"	f	class:ns3::MgtProbeResponseHeader
GetTypeId	model/mgt-headers.cc	/^WifiActionHeader::GetTypeId ()$/;"	f	class:ns3::WifiActionHeader
IsAmsduSupported	model/mgt-headers.cc	/^MgtAddBaRequestHeader::IsAmsduSupported (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
IsAmsduSupported	model/mgt-headers.cc	/^MgtAddBaResponseHeader::IsAmsduSupported (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
IsByOriginator	model/mgt-headers.cc	/^MgtDelBaHeader::IsByOriginator (void) const$/;"	f	class:ns3::MgtDelBaHeader
IsImmediateBlockAck	model/mgt-headers.cc	/^MgtAddBaRequestHeader::IsImmediateBlockAck (void) const$/;"	f	class:ns3::MgtAddBaRequestHeader
IsImmediateBlockAck	model/mgt-headers.cc	/^MgtAddBaResponseHeader::IsImmediateBlockAck (void) const$/;"	f	class:ns3::MgtAddBaResponseHeader
MgtAddBaRequestHeader	model/mgt-headers.cc	/^MgtAddBaRequestHeader::MgtAddBaRequestHeader ()$/;"	f	class:ns3::MgtAddBaRequestHeader
MgtAddBaResponseHeader	model/mgt-headers.cc	/^MgtAddBaResponseHeader::MgtAddBaResponseHeader ()$/;"	f	class:ns3::MgtAddBaResponseHeader
MgtAssocRequestHeader	model/mgt-headers.cc	/^MgtAssocRequestHeader::MgtAssocRequestHeader ()$/;"	f	class:ns3::MgtAssocRequestHeader
MgtAssocResponseHeader	model/mgt-headers.cc	/^MgtAssocResponseHeader::MgtAssocResponseHeader ()$/;"	f	class:ns3::MgtAssocResponseHeader
MgtDelBaHeader	model/mgt-headers.cc	/^MgtDelBaHeader::MgtDelBaHeader ()$/;"	f	class:ns3::MgtDelBaHeader
MgtProbeResponseHeader	model/mgt-headers.cc	/^MgtProbeResponseHeader::MgtProbeResponseHeader ()$/;"	f	class:ns3::MgtProbeResponseHeader
Print	model/mgt-headers.cc	/^MgtAddBaRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAddBaRequestHeader
Print	model/mgt-headers.cc	/^MgtAddBaResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAddBaResponseHeader
Print	model/mgt-headers.cc	/^MgtAssocRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAssocRequestHeader
Print	model/mgt-headers.cc	/^MgtAssocResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtAssocResponseHeader
Print	model/mgt-headers.cc	/^MgtDelBaHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtDelBaHeader
Print	model/mgt-headers.cc	/^MgtProbeRequestHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtProbeRequestHeader
Print	model/mgt-headers.cc	/^MgtProbeResponseHeader::Print (std::ostream &os) const$/;"	f	class:ns3::MgtProbeResponseHeader
Print	model/mgt-headers.cc	/^WifiActionHeader::Print (std::ostream &os) const$/;"	f	class:ns3::WifiActionHeader
Serialize	model/mgt-headers.cc	/^MgtAddBaRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAddBaRequestHeader
Serialize	model/mgt-headers.cc	/^MgtAddBaResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAddBaResponseHeader
Serialize	model/mgt-headers.cc	/^MgtAssocRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAssocRequestHeader
Serialize	model/mgt-headers.cc	/^MgtAssocResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtAssocResponseHeader
Serialize	model/mgt-headers.cc	/^MgtDelBaHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtDelBaHeader
Serialize	model/mgt-headers.cc	/^MgtProbeRequestHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtProbeRequestHeader
Serialize	model/mgt-headers.cc	/^MgtProbeResponseHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::MgtProbeResponseHeader
Serialize	model/mgt-headers.cc	/^WifiActionHeader::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::WifiActionHeader
SetAction	model/mgt-headers.cc	/^WifiActionHeader::SetAction (WifiActionHeader::CategoryValue type,$/;"	f	class:ns3::WifiActionHeader
SetAmsduSupport	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetAmsduSupport (bool supported)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetAmsduSupport	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetAmsduSupport (bool supported)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetBeaconIntervalUs	model/mgt-headers.cc	/^MgtProbeResponseHeader::SetBeaconIntervalUs (uint64_t us)$/;"	f	class:ns3::MgtProbeResponseHeader
SetBufferSize	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetBufferSize (uint16_t size)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetBufferSize	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetBufferSize (uint16_t size)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetByOriginator	model/mgt-headers.cc	/^MgtDelBaHeader::SetByOriginator (void)$/;"	f	class:ns3::MgtDelBaHeader
SetByRecipient	model/mgt-headers.cc	/^MgtDelBaHeader::SetByRecipient (void)$/;"	f	class:ns3::MgtDelBaHeader
SetDelayedBlockAck	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetDelayedBlockAck ()$/;"	f	class:ns3::MgtAddBaRequestHeader
SetDelayedBlockAck	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetDelayedBlockAck ()$/;"	f	class:ns3::MgtAddBaResponseHeader
SetHtCapabilities	model/mgt-headers.cc	/^MgtAssocRequestHeader::SetHtCapabilities(HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtAssocRequestHeader
SetHtCapabilities	model/mgt-headers.cc	/^MgtAssocResponseHeader::SetHtCapabilities(HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtAssocResponseHeader
SetHtCapabilities	model/mgt-headers.cc	/^MgtProbeRequestHeader::SetHtCapabilities(HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtProbeRequestHeader
SetHtCapabilities	model/mgt-headers.cc	/^MgtProbeResponseHeader::SetHtCapabilities(HtCapabilities htcapabilities)$/;"	f	class:ns3::MgtProbeResponseHeader
SetImmediateBlockAck	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetImmediateBlockAck ()$/;"	f	class:ns3::MgtAddBaRequestHeader
SetImmediateBlockAck	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetImmediateBlockAck ()$/;"	f	class:ns3::MgtAddBaResponseHeader
SetListenInterval	model/mgt-headers.cc	/^MgtAssocRequestHeader::SetListenInterval (uint16_t interval)$/;"	f	class:ns3::MgtAssocRequestHeader
SetParameterSet	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetParameterSet (uint16_t params)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetParameterSet	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetParameterSet (uint16_t params)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetParameterSet	model/mgt-headers.cc	/^MgtDelBaHeader::SetParameterSet (uint16_t params)$/;"	f	class:ns3::MgtDelBaHeader
SetSsid	model/mgt-headers.cc	/^MgtAssocRequestHeader::SetSsid (Ssid ssid)$/;"	f	class:ns3::MgtAssocRequestHeader
SetSsid	model/mgt-headers.cc	/^MgtProbeRequestHeader::SetSsid (Ssid ssid)$/;"	f	class:ns3::MgtProbeRequestHeader
SetSsid	model/mgt-headers.cc	/^MgtProbeResponseHeader::SetSsid (Ssid ssid)$/;"	f	class:ns3::MgtProbeResponseHeader
SetStartingSequence	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetStartingSequence (uint16_t seq)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetStartingSequenceControl	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetStartingSequenceControl (uint16_t seqControl)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetStatusCode	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetStatusCode (StatusCode code)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetStatusCode	model/mgt-headers.cc	/^MgtAssocResponseHeader::SetStatusCode (StatusCode code)$/;"	f	class:ns3::MgtAssocResponseHeader
SetSupportedRates	model/mgt-headers.cc	/^MgtAssocRequestHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtAssocRequestHeader
SetSupportedRates	model/mgt-headers.cc	/^MgtAssocResponseHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtAssocResponseHeader
SetSupportedRates	model/mgt-headers.cc	/^MgtProbeRequestHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtProbeRequestHeader
SetSupportedRates	model/mgt-headers.cc	/^MgtProbeResponseHeader::SetSupportedRates (SupportedRates rates)$/;"	f	class:ns3::MgtProbeResponseHeader
SetTid	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetTid (uint8_t tid)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetTid	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetTid (uint8_t tid)$/;"	f	class:ns3::MgtAddBaResponseHeader
SetTid	model/mgt-headers.cc	/^MgtDelBaHeader::SetTid (uint8_t tid)$/;"	f	class:ns3::MgtDelBaHeader
SetTimeout	model/mgt-headers.cc	/^MgtAddBaRequestHeader::SetTimeout (uint16_t timeout)$/;"	f	class:ns3::MgtAddBaRequestHeader
SetTimeout	model/mgt-headers.cc	/^MgtAddBaResponseHeader::SetTimeout (uint16_t timeout)$/;"	f	class:ns3::MgtAddBaResponseHeader
WifiActionHeader	model/mgt-headers.cc	/^WifiActionHeader::WifiActionHeader ()$/;"	f	class:ns3::WifiActionHeader
ns3	model/mgt-headers.cc	/^namespace ns3 {$/;"	n	file:
~MgtAssocRequestHeader	model/mgt-headers.cc	/^MgtAssocRequestHeader::~MgtAssocRequestHeader ()$/;"	f	class:ns3::MgtAssocRequestHeader
~MgtAssocResponseHeader	model/mgt-headers.cc	/^MgtAssocResponseHeader::~MgtAssocResponseHeader ()$/;"	f	class:ns3::MgtAssocResponseHeader
~MgtProbeRequestHeader	model/mgt-headers.cc	/^MgtProbeRequestHeader::~MgtProbeRequestHeader ()$/;"	f	class:ns3::MgtProbeRequestHeader
~MgtProbeResponseHeader	model/mgt-headers.cc	/^MgtProbeResponseHeader::~MgtProbeResponseHeader ()$/;"	f	class:ns3::MgtProbeResponseHeader
~WifiActionHeader	model/mgt-headers.cc	/^WifiActionHeader::~WifiActionHeader ()$/;"	f	class:ns3::WifiActionHeader
ActionValue	model/mgt-headers.h	/^  } ActionValue;$/;"	t	class:ns3::WifiActionHeader	typeref:union:ns3::WifiActionHeader::__anon8
BEACON_TIMING_REQUEST	model/mgt-headers.h	/^    BEACON_TIMING_REQUEST,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
BEACON_TIMING_RESPONSE	model/mgt-headers.h	/^    BEACON_TIMING_RESPONSE,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
BLOCK_ACK	model/mgt-headers.h	/^    BLOCK_ACK = 3,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
BLOCK_ACK_ADDBA_REQUEST	model/mgt-headers.h	/^    BLOCK_ACK_ADDBA_REQUEST = 0,$/;"	e	enum:ns3::WifiActionHeader::BlockAckActionValue
BLOCK_ACK_ADDBA_RESPONSE	model/mgt-headers.h	/^    BLOCK_ACK_ADDBA_RESPONSE = 1,$/;"	e	enum:ns3::WifiActionHeader::BlockAckActionValue
BLOCK_ACK_DELBA	model/mgt-headers.h	/^    BLOCK_ACK_DELBA = 2$/;"	e	enum:ns3::WifiActionHeader::BlockAckActionValue
BlockAckActionValue	model/mgt-headers.h	/^  enum BlockAckActionValue$/;"	g	class:ns3::WifiActionHeader
CONGESTION_CONTROL_NOTIFICATION	model/mgt-headers.h	/^    CONGESTION_CONTROL_NOTIFICATION = 0,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
CategoryValue	model/mgt-headers.h	/^  enum CategoryValue$/;"	g	class:ns3::WifiActionHeader
InterworkActionValue	model/mgt-headers.h	/^  enum InterworkActionValue$/;"	g	class:ns3::WifiActionHeader
LINK_METRIC_REPORT	model/mgt-headers.h	/^    LINK_METRIC_REPORT,$/;"	e	enum:ns3::WifiActionHeader::LinkMetricActionValue
LINK_METRIC_REQUEST	model/mgt-headers.h	/^    LINK_METRIC_REQUEST = 0,$/;"	e	enum:ns3::WifiActionHeader::LinkMetricActionValue
LinkMetricActionValue	model/mgt-headers.h	/^  enum LinkMetricActionValue$/;"	g	class:ns3::WifiActionHeader
MDAOP_ADVERTISMENTS	model/mgt-headers.h	/^    MDAOP_ADVERTISMENTS,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
MDAOP_ADVERTISMENT_REQUEST	model/mgt-headers.h	/^    MDAOP_ADVERTISMENT_REQUEST,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
MDAOP_SET_TEARDOWN	model/mgt-headers.h	/^    MDAOP_SET_TEARDOWN,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
MDA_SETUP_REPLY	model/mgt-headers.h	/^    MDA_SETUP_REPLY,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
MDA_SETUP_REQUEST	model/mgt-headers.h	/^    MDA_SETUP_REQUEST,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
MESH_CHANNEL_SWITCH_ANNOUNCEMENT	model/mgt-headers.h	/^    MESH_CHANNEL_SWITCH_ANNOUNCEMENT,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
MESH_INTERWORKING	model/mgt-headers.h	/^    MESH_INTERWORKING = 33,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MESH_LINK_METRIC	model/mgt-headers.h	/^    MESH_LINK_METRIC = 31,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MESH_PATH_SELECTION	model/mgt-headers.h	/^    MESH_PATH_SELECTION = 32,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MESH_PEERING_MGT	model/mgt-headers.h	/^    MESH_PEERING_MGT = 30,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MESH_PROXY_FORWARDING	model/mgt-headers.h	/^    MESH_PROXY_FORWARDING = 35,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MESH_RESOURCE_COORDINATION	model/mgt-headers.h	/^    MESH_RESOURCE_COORDINATION = 34,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
MGT_HEADERS_H	model/mgt-headers.h	23;"	d
MgtAddBaRequestHeader	model/mgt-headers.h	/^class MgtAddBaRequestHeader : public Header$/;"	c	namespace:ns3
MgtAddBaResponseHeader	model/mgt-headers.h	/^class MgtAddBaResponseHeader : public Header$/;"	c	namespace:ns3
MgtAssocRequestHeader	model/mgt-headers.h	/^class MgtAssocRequestHeader : public Header$/;"	c	namespace:ns3
MgtAssocResponseHeader	model/mgt-headers.h	/^class MgtAssocResponseHeader : public Header$/;"	c	namespace:ns3
MgtBeaconHeader	model/mgt-headers.h	/^class MgtBeaconHeader : public MgtProbeResponseHeader$/;"	c	namespace:ns3
MgtDelBaHeader	model/mgt-headers.h	/^class MgtDelBaHeader : public Header$/;"	c	namespace:ns3
MgtProbeRequestHeader	model/mgt-headers.h	/^class MgtProbeRequestHeader : public Header$/;"	c	namespace:ns3
MgtProbeResponseHeader	model/mgt-headers.h	/^class MgtProbeResponseHeader : public Header$/;"	c	namespace:ns3
PATH_SELECTION	model/mgt-headers.h	/^    PATH_SELECTION = 0,$/;"	e	enum:ns3::WifiActionHeader::PathSelectionActionValue
PEER_LINK_CLOSE	model/mgt-headers.h	/^    PEER_LINK_CLOSE = 2,$/;"	e	enum:ns3::WifiActionHeader::PeerLinkMgtActionValue
PEER_LINK_CONFIRM	model/mgt-headers.h	/^    PEER_LINK_CONFIRM = 1,$/;"	e	enum:ns3::WifiActionHeader::PeerLinkMgtActionValue
PEER_LINK_OPEN	model/mgt-headers.h	/^    PEER_LINK_OPEN = 0,$/;"	e	enum:ns3::WifiActionHeader::PeerLinkMgtActionValue
PORTAL_ANNOUNCEMENT	model/mgt-headers.h	/^    PORTAL_ANNOUNCEMENT = 0,$/;"	e	enum:ns3::WifiActionHeader::InterworkActionValue
PathSelectionActionValue	model/mgt-headers.h	/^  enum PathSelectionActionValue$/;"	g	class:ns3::WifiActionHeader
PeerLinkMgtActionValue	model/mgt-headers.h	/^  enum PeerLinkMgtActionValue$/;"	g	class:ns3::WifiActionHeader
ResourceCoordinationActionValue	model/mgt-headers.h	/^  enum ResourceCoordinationActionValue$/;"	g	class:ns3::WifiActionHeader
TBTT_ADJUSTMENT_REQUEST	model/mgt-headers.h	/^    TBTT_ADJUSTMENT_REQUEST,$/;"	e	enum:ns3::WifiActionHeader::ResourceCoordinationActionValue
VENDOR_SPECIFIC_ACTION	model/mgt-headers.h	/^    VENDOR_SPECIFIC_ACTION = 127,$/;"	e	enum:ns3::WifiActionHeader::CategoryValue
WifiActionHeader	model/mgt-headers.h	/^class WifiActionHeader : public Header$/;"	c	namespace:ns3
blockAck	model/mgt-headers.h	/^    enum BlockAckActionValue blockAck;$/;"	m	union:ns3::WifiActionHeader::__anon8	typeref:enum:ns3::WifiActionHeader::__anon8::BlockAckActionValue
interwork	model/mgt-headers.h	/^    enum InterworkActionValue interwork;$/;"	m	union:ns3::WifiActionHeader::__anon8	typeref:enum:ns3::WifiActionHeader::__anon8::InterworkActionValue
linkMetrtic	model/mgt-headers.h	/^    enum LinkMetricActionValue linkMetrtic;$/;"	m	union:ns3::WifiActionHeader::__anon8	typeref:enum:ns3::WifiActionHeader::__anon8::LinkMetricActionValue
m_actionValue	model/mgt-headers.h	/^  uint8_t m_actionValue; \/\/!< Action value$/;"	m	class:ns3::WifiActionHeader
m_aid	model/mgt-headers.h	/^  uint16_t m_aid;$/;"	m	class:ns3::MgtAssocResponseHeader
m_amsduSupport	model/mgt-headers.h	/^  uint8_t m_amsduSupport; \/\/!< Flag if A-MSDU is supported$/;"	m	class:ns3::MgtAddBaRequestHeader
m_amsduSupport	model/mgt-headers.h	/^  uint8_t m_amsduSupport; \/\/!< Flag if A-MSDU is supported$/;"	m	class:ns3::MgtAddBaResponseHeader
m_beaconInterval	model/mgt-headers.h	/^  uint64_t m_beaconInterval; \/\/!< Beacon interval$/;"	m	class:ns3::MgtProbeResponseHeader
m_bufferSize	model/mgt-headers.h	/^  uint16_t m_bufferSize; \/\/!< Buffer size$/;"	m	class:ns3::MgtAddBaRequestHeader
m_bufferSize	model/mgt-headers.h	/^  uint16_t m_bufferSize; \/\/!< Buffer size$/;"	m	class:ns3::MgtAddBaResponseHeader
m_capability	model/mgt-headers.h	/^  CapabilityInformation m_capability; \/\/!< Capability information$/;"	m	class:ns3::MgtAssocRequestHeader
m_capability	model/mgt-headers.h	/^  CapabilityInformation m_capability; \/\/!< Capability information$/;"	m	class:ns3::MgtAssocResponseHeader
m_capability	model/mgt-headers.h	/^  CapabilityInformation m_capability; \/\/!< Capability information$/;"	m	class:ns3::MgtProbeResponseHeader
m_category	model/mgt-headers.h	/^  uint8_t m_category; \/\/!< Category of the action$/;"	m	class:ns3::WifiActionHeader
m_code	model/mgt-headers.h	/^  StatusCode m_code; \/\/!< Status code$/;"	m	class:ns3::MgtAddBaResponseHeader
m_code	model/mgt-headers.h	/^  StatusCode m_code; \/\/!< Status code$/;"	m	class:ns3::MgtAssocResponseHeader
m_dialogToken	model/mgt-headers.h	/^  uint8_t m_dialogToken; \/* Not used for now *\/$/;"	m	class:ns3::MgtAddBaRequestHeader
m_dialogToken	model/mgt-headers.h	/^  uint8_t m_dialogToken; \/* Not used for now *\/$/;"	m	class:ns3::MgtAddBaResponseHeader
m_htCapability	model/mgt-headers.h	/^  HtCapabilities m_htCapability; \/\/!< HT capabilities$/;"	m	class:ns3::MgtAssocRequestHeader
m_htCapability	model/mgt-headers.h	/^  HtCapabilities m_htCapability; \/\/!< HT capabilities$/;"	m	class:ns3::MgtAssocResponseHeader
m_htCapability	model/mgt-headers.h	/^  HtCapabilities m_htCapability; \/\/!< HT capabilities$/;"	m	class:ns3::MgtProbeRequestHeader
m_htCapability	model/mgt-headers.h	/^  HtCapabilities m_htCapability; \/\/!< HT capabilities$/;"	m	class:ns3::MgtProbeResponseHeader
m_initiator	model/mgt-headers.h	/^  uint16_t m_initiator;$/;"	m	class:ns3::MgtDelBaHeader
m_listenInterval	model/mgt-headers.h	/^  uint16_t m_listenInterval;$/;"	m	class:ns3::MgtAssocRequestHeader
m_policy	model/mgt-headers.h	/^  uint8_t m_policy; \/\/!< Block ACK policy$/;"	m	class:ns3::MgtAddBaRequestHeader
m_policy	model/mgt-headers.h	/^  uint8_t m_policy; \/\/!< Block ACK policy$/;"	m	class:ns3::MgtAddBaResponseHeader
m_rates	model/mgt-headers.h	/^  SupportedRates m_rates; \/\/!< List of supported rates$/;"	m	class:ns3::MgtAssocRequestHeader
m_rates	model/mgt-headers.h	/^  SupportedRates m_rates; \/\/!< List of supported rates$/;"	m	class:ns3::MgtAssocResponseHeader
m_rates	model/mgt-headers.h	/^  SupportedRates m_rates; \/\/!< List of supported rates$/;"	m	class:ns3::MgtProbeRequestHeader
m_rates	model/mgt-headers.h	/^  SupportedRates m_rates; \/\/!< List of supported rates$/;"	m	class:ns3::MgtProbeResponseHeader
m_reasonCode	model/mgt-headers.h	/^  uint16_t m_reasonCode;$/;"	m	class:ns3::MgtDelBaHeader
m_ssid	model/mgt-headers.h	/^  Ssid m_ssid; \/\/!< Service Set ID (SSID)$/;"	m	class:ns3::MgtAssocRequestHeader
m_ssid	model/mgt-headers.h	/^  Ssid m_ssid; \/\/!< Service Set ID (SSID)$/;"	m	class:ns3::MgtProbeRequestHeader
m_ssid	model/mgt-headers.h	/^  Ssid m_ssid; \/\/!< Service set ID (SSID)$/;"	m	class:ns3::MgtProbeResponseHeader
m_startingSeq	model/mgt-headers.h	/^  uint16_t m_startingSeq; \/\/!< Starting sequence number$/;"	m	class:ns3::MgtAddBaRequestHeader
m_tid	model/mgt-headers.h	/^  uint16_t m_tid; \/\/!< Traffic ID$/;"	m	class:ns3::MgtDelBaHeader
m_tid	model/mgt-headers.h	/^  uint8_t m_tid; \/\/!< Traffic ID$/;"	m	class:ns3::MgtAddBaRequestHeader
m_tid	model/mgt-headers.h	/^  uint8_t m_tid; \/\/!< Traffic ID$/;"	m	class:ns3::MgtAddBaResponseHeader
m_timeoutValue	model/mgt-headers.h	/^  uint16_t m_timeoutValue; \/\/!< Timeout$/;"	m	class:ns3::MgtAddBaRequestHeader
m_timeoutValue	model/mgt-headers.h	/^  uint16_t m_timeoutValue; \/\/!< Timeout$/;"	m	class:ns3::MgtAddBaResponseHeader
m_timestamp	model/mgt-headers.h	/^  uint64_t m_timestamp; \/\/!< Timestamp$/;"	m	class:ns3::MgtProbeResponseHeader
ns3	model/mgt-headers.h	/^namespace ns3 {$/;"	n
pathSelection	model/mgt-headers.h	/^    enum PathSelectionActionValue pathSelection;$/;"	m	union:ns3::WifiActionHeader::__anon8	typeref:enum:ns3::WifiActionHeader::__anon8::PathSelectionActionValue
peerLink	model/mgt-headers.h	/^    enum PeerLinkMgtActionValue peerLink;$/;"	m	union:ns3::WifiActionHeader::__anon8	typeref:enum:ns3::WifiActionHeader::__anon8::PeerLinkMgtActionValue
resourceCoordination	model/mgt-headers.h	/^    enum ResourceCoordinationActionValue resourceCoordination;$/;"	m	union:ns3::WifiActionHeader::__anon8	typeref:enum:ns3::WifiActionHeader::__anon8::ResourceCoordinationActionValue
AddCalcTxTime	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::AddCalcTxTime (WifiMode mode, Time t)$/;"	f	class:ns3::MinstrelWifiManager
AssignStreams	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::AssignStreams (int64_t stream)$/;"	f	class:ns3::MinstrelWifiManager
CalculateTimeUnicastPacket	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::CalculateTimeUnicastPacket (Time dataTransmissionTime, uint32_t shortRetries, uint32_t longRetries)$/;"	f	class:ns3::MinstrelWifiManager
CheckInit	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::CheckInit (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
DoCreateStation	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::MinstrelWifiManager
DoGetDataTxVector	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoGetDataTxVector (WifiRemoteStation *st,$/;"	f	class:ns3::MinstrelWifiManager
DoGetRtsTxVector	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoNeedDataRetransmission	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoNeedDataRetransmission (WifiRemoteStation *st, Ptr<const Packet> packet, bool normally)$/;"	f	class:ns3::MinstrelWifiManager
DoReportDataFailed	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportDataOk	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::MinstrelWifiManager
DoReportFinalDataFailed	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportFinalRtsFailed	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportRtsFailed	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::MinstrelWifiManager
DoReportRtsOk	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportRtsOk (WifiRemoteStation *st, double ctsSnr, WifiMode ctsMode, double rtsSnr)$/;"	f	class:ns3::MinstrelWifiManager
DoReportRxOk	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::DoReportRxOk (WifiRemoteStation *st,$/;"	f	class:ns3::MinstrelWifiManager
FindRate	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::FindRate (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
GetCalcTxTime	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetCalcTxTime (WifiMode mode) const$/;"	f	class:ns3::MinstrelWifiManager
GetNextSample	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetNextSample (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
GetTypeId	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::GetTypeId (void)$/;"	f	class:ns3::MinstrelWifiManager
InitSampleTable	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::InitSampleTable (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
IsLowLatency	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::MinstrelWifiManager
Min	model/minstrel-wifi-manager.cc	41;"	d	file:
MinstrelWifiManager	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::MinstrelWifiManager ()$/;"	f	class:ns3::MinstrelWifiManager
MinstrelWifiRemoteStation	model/minstrel-wifi-manager.cc	/^struct MinstrelWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
PrintSampleTable	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::PrintSampleTable (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
PrintTable	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::PrintTable (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
RateInit	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::RateInit (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
SetupPhy	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::MinstrelWifiManager
UpdateRetry	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::UpdateRetry (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
UpdateStats	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::UpdateStats (MinstrelWifiRemoteStation *station)$/;"	f	class:ns3::MinstrelWifiManager
m_col	model/minstrel-wifi-manager.cc	/^  uint32_t m_col, m_index;$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_err	model/minstrel-wifi-manager.cc	/^  uint32_t m_err;  \/\/\/< retry errors$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_index	model/minstrel-wifi-manager.cc	/^  uint32_t m_col, m_index;$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_initialized	model/minstrel-wifi-manager.cc	/^  bool m_initialized;  \/\/\/< for initializing tables$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_isSampling	model/minstrel-wifi-manager.cc	/^  bool m_isSampling;  \/\/\/< a flag to indicate we are currently sampling$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_longRetry	model/minstrel-wifi-manager.cc	/^  uint32_t m_longRetry;  \/\/\/< long retries such as data packets$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_maxProbRate	model/minstrel-wifi-manager.cc	/^  uint32_t m_maxProbRate;  \/\/\/< rate with highest prob of success$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_maxTpRate	model/minstrel-wifi-manager.cc	/^  uint32_t m_maxTpRate;  \/\/\/< the current throughput rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_maxTpRate2	model/minstrel-wifi-manager.cc	/^  uint32_t m_maxTpRate2;  \/\/\/< second highest throughput rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_minstrelTable	model/minstrel-wifi-manager.cc	/^  MinstrelRate m_minstrelTable;  \/\/\/< minstrel table$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_nextStatsUpdate	model/minstrel-wifi-manager.cc	/^  Time m_nextStatsUpdate;  \/\/\/< 10 times every second$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_packetCount	model/minstrel-wifi-manager.cc	/^  int m_packetCount;  \/\/\/< total number of packets as of now$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_retry	model/minstrel-wifi-manager.cc	/^  uint32_t m_retry;  \/\/\/< total retries short + long$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_sampleCount	model/minstrel-wifi-manager.cc	/^  int m_sampleCount;  \/\/\/< how many packets we have sample so far$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_sampleRate	model/minstrel-wifi-manager.cc	/^  uint32_t m_sampleRate;  \/\/\/< current sample rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_sampleRateSlower	model/minstrel-wifi-manager.cc	/^  bool  m_sampleRateSlower;  \/\/\/< a flag to indicate sample rate is slower$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_sampleTable	model/minstrel-wifi-manager.cc	/^  SampleRate m_sampleTable;  \/\/\/< sample table$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_shortRetry	model/minstrel-wifi-manager.cc	/^  uint32_t m_shortRetry;  \/\/\/< short retries such as control packts$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
m_txrate	model/minstrel-wifi-manager.cc	/^  uint32_t m_txrate;  \/\/\/< current transmit rate$/;"	m	struct:ns3::MinstrelWifiRemoteStation	file:
ns3	model/minstrel-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~MinstrelWifiManager	model/minstrel-wifi-manager.cc	/^MinstrelWifiManager::~MinstrelWifiManager ()$/;"	f	class:ns3::MinstrelWifiManager
MINSTREL_WIFI_MANAGER_H	model/minstrel-wifi-manager.h	24;"	d
MinstrelRate	model/minstrel-wifi-manager.h	/^typedef std::vector<struct RateInfo> MinstrelRate;$/;"	t	namespace:ns3
MinstrelWifiManager	model/minstrel-wifi-manager.h	/^class MinstrelWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
RateInfo	model/minstrel-wifi-manager.h	/^struct RateInfo$/;"	s	namespace:ns3
SampleRate	model/minstrel-wifi-manager.h	/^typedef std::vector<std::vector<uint32_t> > SampleRate;$/;"	t	namespace:ns3
TxTime	model/minstrel-wifi-manager.h	/^  typedef std::vector<std::pair<Time,WifiMode> > TxTime;$/;"	t	class:ns3::MinstrelWifiManager
adjustedRetryCount	model/minstrel-wifi-manager.h	/^  uint32_t adjustedRetryCount;  \/\/\/< adjust the retry limit for this rate$/;"	m	struct:ns3::RateInfo
ewmaProb	model/minstrel-wifi-manager.h	/^  uint32_t ewmaProb;$/;"	m	struct:ns3::RateInfo
m_calcTxTime	model/minstrel-wifi-manager.h	/^  TxTime m_calcTxTime;  \/\/\/< to hold all the calculated TxTime for all modes$/;"	m	class:ns3::MinstrelWifiManager
m_ewmaLevel	model/minstrel-wifi-manager.h	/^  double m_ewmaLevel;  \/\/\/< exponential weighted moving average$/;"	m	class:ns3::MinstrelWifiManager
m_lookAroundRate	model/minstrel-wifi-manager.h	/^  double m_lookAroundRate;  \/\/\/< the % to try other rates than our current rate$/;"	m	class:ns3::MinstrelWifiManager
m_nsupported	model/minstrel-wifi-manager.h	/^  uint32_t m_nsupported;  \/\/\/< modes supported$/;"	m	class:ns3::MinstrelWifiManager
m_pktLen	model/minstrel-wifi-manager.h	/^  uint32_t m_pktLen;  \/\/\/< packet length used for calculate mode TxTime$/;"	m	class:ns3::MinstrelWifiManager
m_sampleCol	model/minstrel-wifi-manager.h	/^  uint32_t m_sampleCol;  \/\/\/< number of sample columns$/;"	m	class:ns3::MinstrelWifiManager
m_uniformRandomVariable	model/minstrel-wifi-manager.h	/^  Ptr<UniformRandomVariable> m_uniformRandomVariable;$/;"	m	class:ns3::MinstrelWifiManager
m_updateStats	model/minstrel-wifi-manager.h	/^  Time m_updateStats;  \/\/\/< how frequent do we calculate the stats (1\/10 seconds)$/;"	m	class:ns3::MinstrelWifiManager
ns3	model/minstrel-wifi-manager.h	/^namespace ns3 {$/;"	n
numRateAttempt	model/minstrel-wifi-manager.h	/^  uint32_t numRateAttempt;  \/\/\/< how many number of attempts so far$/;"	m	struct:ns3::RateInfo
numRateSuccess	model/minstrel-wifi-manager.h	/^  uint32_t numRateSuccess;    \/\/\/< number of successful pkts$/;"	m	struct:ns3::RateInfo
perfectTxTime	model/minstrel-wifi-manager.h	/^  Time perfectTxTime;$/;"	m	struct:ns3::RateInfo
prob	model/minstrel-wifi-manager.h	/^  uint32_t prob;  \/\/\/< (# pkts success )\/(# total pkts)$/;"	m	struct:ns3::RateInfo
retryCount	model/minstrel-wifi-manager.h	/^  uint32_t retryCount;  \/\/\/< retry limit$/;"	m	struct:ns3::RateInfo
throughput	model/minstrel-wifi-manager.h	/^  uint32_t throughput;  \/\/\/< throughput of a rate$/;"	m	struct:ns3::RateInfo
Deaggregate	model/mpdu-aggregator.cc	/^MpduAggregator::Deaggregate (Ptr<Packet> aggregatedPacket)$/;"	f	class:ns3::MpduAggregator
GetTypeId	model/mpdu-aggregator.cc	/^MpduAggregator::GetTypeId (void)$/;"	f	class:ns3::MpduAggregator
ns3	model/mpdu-aggregator.cc	/^namespace ns3 {$/;"	n	file:
DeaggregatedMpdus	model/mpdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmpduSubframeHeader> > DeaggregatedMpdus;$/;"	t	class:ns3::MpduAggregator
DeaggregatedMpdusCI	model/mpdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmpduSubframeHeader> >::const_iterator DeaggregatedMpdusCI;$/;"	t	class:ns3::MpduAggregator
MPDU_AGGREGATOR_H	model/mpdu-aggregator.h	21;"	d
MpduAggregator	model/mpdu-aggregator.h	/^class MpduAggregator : public Object$/;"	c	namespace:ns3
ns3	model/mpdu-aggregator.h	/^namespace ns3 {$/;"	n
AddHeaderAndPad	model/mpdu-standard-aggregator.cc	/^MpduStandardAggregator::AddHeaderAndPad (Ptr<Packet> packet, bool last)$/;"	f	class:ns3::MpduStandardAggregator
Aggregate	model/mpdu-standard-aggregator.cc	/^MpduStandardAggregator::Aggregate (Ptr<const Packet> packet, Ptr<Packet> aggregatedPacket)$/;"	f	class:ns3::MpduStandardAggregator
CalculatePadding	model/mpdu-standard-aggregator.cc	/^MpduStandardAggregator::CalculatePadding (Ptr<const Packet> packet)$/;"	f	class:ns3::MpduStandardAggregator
CanBeAggregated	model/mpdu-standard-aggregator.cc	/^MpduStandardAggregator::CanBeAggregated (uint32_t packetSize, Ptr<Packet> aggregatedPacket, uint8_t blockAckSize)$/;"	f	class:ns3::MpduStandardAggregator
GetTypeId	model/mpdu-standard-aggregator.cc	/^MpduStandardAggregator::GetTypeId (void)$/;"	f	class:ns3::MpduStandardAggregator
MpduStandardAggregator	model/mpdu-standard-aggregator.cc	/^MpduStandardAggregator::MpduStandardAggregator ()$/;"	f	class:ns3::MpduStandardAggregator
ns3	model/mpdu-standard-aggregator.cc	/^namespace ns3 {$/;"	n	file:
~MpduStandardAggregator	model/mpdu-standard-aggregator.cc	/^MpduStandardAggregator::~MpduStandardAggregator ()$/;"	f	class:ns3::MpduStandardAggregator
MPDU_STANDARD_AGGREGATOR_H	model/mpdu-standard-aggregator.h	21;"	d
MpduStandardAggregator	model/mpdu-standard-aggregator.h	/^class MpduStandardAggregator : public MpduAggregator$/;"	c	namespace:ns3
m_maxAmpduLength	model/mpdu-standard-aggregator.h	/^  uint32_t m_maxAmpduLength; \/\/!< Maximum length in bytes of A-MPDUs$/;"	m	class:ns3::MpduStandardAggregator
ns3	model/mpdu-standard-aggregator.h	/^namespace ns3 {$/;"	n
Deaggregate	model/msdu-aggregator.cc	/^MsduAggregator::Deaggregate (Ptr<Packet> aggregatedPacket)$/;"	f	class:ns3::MsduAggregator
GetTypeId	model/msdu-aggregator.cc	/^MsduAggregator::GetTypeId (void)$/;"	f	class:ns3::MsduAggregator
ns3	model/msdu-aggregator.cc	/^namespace ns3 {$/;"	n	file:
DeaggregatedMsdus	model/msdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmsduSubframeHeader> > DeaggregatedMsdus;$/;"	t	class:ns3::MsduAggregator
DeaggregatedMsdusCI	model/msdu-aggregator.h	/^  typedef std::list<std::pair<Ptr<Packet>, AmsduSubframeHeader> >::const_iterator DeaggregatedMsdusCI;$/;"	t	class:ns3::MsduAggregator
MSDU_AGGREGATOR_H	model/msdu-aggregator.h	21;"	d
MsduAggregator	model/msdu-aggregator.h	/^class MsduAggregator : public Object$/;"	c	namespace:ns3
ns3	model/msdu-aggregator.h	/^namespace ns3 {$/;"	n
Aggregate	model/msdu-standard-aggregator.cc	/^MsduStandardAggregator::Aggregate (Ptr<const Packet> packet, Ptr<Packet> aggregatedPacket,$/;"	f	class:ns3::MsduStandardAggregator
CalculatePadding	model/msdu-standard-aggregator.cc	/^MsduStandardAggregator::CalculatePadding (Ptr<const Packet> packet)$/;"	f	class:ns3::MsduStandardAggregator
GetTypeId	model/msdu-standard-aggregator.cc	/^MsduStandardAggregator::GetTypeId (void)$/;"	f	class:ns3::MsduStandardAggregator
MsduStandardAggregator	model/msdu-standard-aggregator.cc	/^MsduStandardAggregator::MsduStandardAggregator ()$/;"	f	class:ns3::MsduStandardAggregator
ns3	model/msdu-standard-aggregator.cc	/^namespace ns3 {$/;"	n	file:
~MsduStandardAggregator	model/msdu-standard-aggregator.cc	/^MsduStandardAggregator::~MsduStandardAggregator ()$/;"	f	class:ns3::MsduStandardAggregator
MSDU_STANDARD_AGGREGATOR_H	model/msdu-standard-aggregator.h	21;"	d
MsduStandardAggregator	model/msdu-standard-aggregator.h	/^class MsduStandardAggregator : public MsduAggregator$/;"	c	namespace:ns3
m_maxAmsduLength	model/msdu-standard-aggregator.h	/^  uint32_t m_maxAmsduLength;$/;"	m	class:ns3::MsduStandardAggregator
ns3	model/msdu-standard-aggregator.h	/^namespace ns3 {$/;"	n
CalculatePe	model/nist-error-rate-model.cc	/^NistErrorRateModel::CalculatePe (double p, uint32_t bValue) const$/;"	f	class:ns3::NistErrorRateModel
Get16QamBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::Get16QamBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
Get64QamBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::Get64QamBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
GetBpskBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetBpskBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
GetChunkSuccessRate	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetChunkSuccessRate (WifiMode mode, double snr, uint32_t nbits) const$/;"	f	class:ns3::NistErrorRateModel
GetFec16QamBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetFec16QamBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFec64QamBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetFec64QamBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFecBpskBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetFecBpskBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetFecQpskBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetFecQpskBer (double snr, uint32_t nbits,$/;"	f	class:ns3::NistErrorRateModel
GetQpskBer	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetQpskBer (double snr) const$/;"	f	class:ns3::NistErrorRateModel
GetTypeId	model/nist-error-rate-model.cc	/^NistErrorRateModel::GetTypeId (void)$/;"	f	class:ns3::NistErrorRateModel
NistErrorRateModel	model/nist-error-rate-model.cc	/^NistErrorRateModel::NistErrorRateModel ()$/;"	f	class:ns3::NistErrorRateModel
ns3	model/nist-error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
NIST_ERROR_RATE_MODEL_H	model/nist-error-rate-model.h	21;"	d
NistErrorRateModel	model/nist-error-rate-model.h	/^class NistErrorRateModel : public ErrorRateModel$/;"	c	namespace:ns3
ns3	model/nist-error-rate-model.h	/^namespace ns3 {$/;"	n
DoCreateStation	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::OnoeWifiManager
DoGetDataTxVector	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoGetDataTxVector (WifiRemoteStation *st,$/;"	f	class:ns3::OnoeWifiManager
DoGetRtsTxVector	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportDataFailed	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportDataOk	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::OnoeWifiManager
DoReportFinalDataFailed	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportFinalRtsFailed	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportRtsFailed	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::OnoeWifiManager
DoReportRtsOk	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::OnoeWifiManager
DoReportRxOk	model/onoe-wifi-manager.cc	/^OnoeWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::OnoeWifiManager
GetTypeId	model/onoe-wifi-manager.cc	/^OnoeWifiManager::GetTypeId (void)$/;"	f	class:ns3::OnoeWifiManager
IsLowLatency	model/onoe-wifi-manager.cc	/^OnoeWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::OnoeWifiManager
Min	model/onoe-wifi-manager.cc	26;"	d	file:
OnoeWifiManager	model/onoe-wifi-manager.cc	/^OnoeWifiManager::OnoeWifiManager ()$/;"	f	class:ns3::OnoeWifiManager
OnoeWifiRemoteStation	model/onoe-wifi-manager.cc	/^struct OnoeWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
UpdateMode	model/onoe-wifi-manager.cc	/^OnoeWifiManager::UpdateMode (OnoeWifiRemoteStation *station)$/;"	f	class:ns3::OnoeWifiManager
UpdateRetry	model/onoe-wifi-manager.cc	/^OnoeWifiManager::UpdateRetry (OnoeWifiRemoteStation *station)$/;"	f	class:ns3::OnoeWifiManager
m_longRetry	model/onoe-wifi-manager.cc	/^  uint32_t m_longRetry;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_nextModeUpdate	model/onoe-wifi-manager.cc	/^  Time m_nextModeUpdate;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_shortRetry	model/onoe-wifi-manager.cc	/^  uint32_t m_shortRetry;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_tx_err	model/onoe-wifi-manager.cc	/^  uint32_t m_tx_err;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_tx_ok	model/onoe-wifi-manager.cc	/^  uint32_t m_tx_ok;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_tx_retr	model/onoe-wifi-manager.cc	/^  uint32_t m_tx_retr;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_tx_upper	model/onoe-wifi-manager.cc	/^  uint32_t m_tx_upper;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
m_txrate	model/onoe-wifi-manager.cc	/^  uint32_t m_txrate;$/;"	m	struct:ns3::OnoeWifiRemoteStation	file:
ns3	model/onoe-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
ONOE_WIFI_MANAGER_H	model/onoe-wifi-manager.h	21;"	d
OnoeWifiManager	model/onoe-wifi-manager.h	/^class OnoeWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
m_addCreditThreshold	model/onoe-wifi-manager.h	/^  uint32_t m_addCreditThreshold;$/;"	m	class:ns3::OnoeWifiManager
m_raiseThreshold	model/onoe-wifi-manager.h	/^  uint32_t m_raiseThreshold;$/;"	m	class:ns3::OnoeWifiManager
m_updatePeriod	model/onoe-wifi-manager.h	/^  Time m_updatePeriod;$/;"	m	class:ns3::OnoeWifiManager
ns3	model/onoe-wifi-manager.h	/^namespace ns3 {$/;"	n
CompleteExchange	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::CompleteExchange (void)$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsBlockAckRequestNeeded	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsBlockAckRequestNeeded (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsEstablished	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsEstablished (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsInactive	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsInactive (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsPending	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsPending (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
IsUnsuccessful	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::IsUnsuccessful (void) const$/;"	f	class:ns3::OriginatorBlockAckAgreement
NotifyMpduTransmission	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::NotifyMpduTransmission (uint16_t nextSeqNumber)$/;"	f	class:ns3::OriginatorBlockAckAgreement
OriginatorBlockAckAgreement	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::OriginatorBlockAckAgreement ()$/;"	f	class:ns3::OriginatorBlockAckAgreement
OriginatorBlockAckAgreement	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::OriginatorBlockAckAgreement (Mac48Address recipient, uint8_t tid)$/;"	f	class:ns3::OriginatorBlockAckAgreement
SetState	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::SetState (enum State state)$/;"	f	class:ns3::OriginatorBlockAckAgreement
ns3	model/originator-block-ack-agreement.cc	/^namespace ns3 {$/;"	n	file:
~OriginatorBlockAckAgreement	model/originator-block-ack-agreement.cc	/^OriginatorBlockAckAgreement::~OriginatorBlockAckAgreement ()$/;"	f	class:ns3::OriginatorBlockAckAgreement
ESTABLISHED	model/originator-block-ack-agreement.h	/^    ESTABLISHED,$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
INACTIVE	model/originator-block-ack-agreement.h	/^    INACTIVE,$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
ORIGINATOR_BLOCK_ACK_AGREEMENT_H	model/originator-block-ack-agreement.h	22;"	d
OriginatorBlockAckAgreement	model/originator-block-ack-agreement.h	/^class OriginatorBlockAckAgreement : public BlockAckAgreement$/;"	c	namespace:ns3
PENDING	model/originator-block-ack-agreement.h	/^    PENDING,$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
State	model/originator-block-ack-agreement.h	/^  enum State$/;"	g	class:ns3::OriginatorBlockAckAgreement
UNSUCCESSFUL	model/originator-block-ack-agreement.h	/^    UNSUCCESSFUL$/;"	e	enum:ns3::OriginatorBlockAckAgreement::State
m_needBlockAckReq	model/originator-block-ack-agreement.h	/^  bool m_needBlockAckReq;$/;"	m	class:ns3::OriginatorBlockAckAgreement
m_sentMpdus	model/originator-block-ack-agreement.h	/^  uint16_t m_sentMpdus;$/;"	m	class:ns3::OriginatorBlockAckAgreement
m_state	model/originator-block-ack-agreement.h	/^  enum State m_state;$/;"	m	class:ns3::OriginatorBlockAckAgreement	typeref:enum:ns3::OriginatorBlockAckAgreement::State
ns3	model/originator-block-ack-agreement.h	/^namespace ns3 {$/;"	n
CheckInit	model/parf-wifi-manager.cc	/^ParfWifiManager::CheckInit (ParfWifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
DoCreateStation	model/parf-wifi-manager.cc	/^ParfWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::ParfWifiManager
DoGetDataTxVector	model/parf-wifi-manager.cc	/^ParfWifiManager::DoGetDataTxVector (WifiRemoteStation *st, uint32_t size)$/;"	f	class:ns3::ParfWifiManager
DoGetRtsTxVector	model/parf-wifi-manager.cc	/^ParfWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::ParfWifiManager
DoReportDataFailed	model/parf-wifi-manager.cc	/^ParfWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::ParfWifiManager
DoReportDataOk	model/parf-wifi-manager.cc	/^void ParfWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::ParfWifiManager
DoReportFinalDataFailed	model/parf-wifi-manager.cc	/^ParfWifiManager::DoReportFinalDataFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
DoReportFinalRtsFailed	model/parf-wifi-manager.cc	/^ParfWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
DoReportRtsFailed	model/parf-wifi-manager.cc	/^ParfWifiManager::DoReportRtsFailed (WifiRemoteStation *station)$/;"	f	class:ns3::ParfWifiManager
DoReportRtsOk	model/parf-wifi-manager.cc	/^void ParfWifiManager::DoReportRtsOk (WifiRemoteStation *station,$/;"	f	class:ns3::ParfWifiManager
DoReportRxOk	model/parf-wifi-manager.cc	/^ParfWifiManager::DoReportRxOk (WifiRemoteStation *station,$/;"	f	class:ns3::ParfWifiManager
GetTypeId	model/parf-wifi-manager.cc	/^ParfWifiManager::GetTypeId (void)$/;"	f	class:ns3::ParfWifiManager
IsLowLatency	model/parf-wifi-manager.cc	/^ParfWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::ParfWifiManager
Min	model/parf-wifi-manager.cc	28;"	d	file:
ParfWifiManager	model/parf-wifi-manager.cc	/^ParfWifiManager::ParfWifiManager ()$/;"	f	class:ns3::ParfWifiManager
ParfWifiRemoteStation	model/parf-wifi-manager.cc	/^struct ParfWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
SetupPhy	model/parf-wifi-manager.cc	/^ParfWifiManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::ParfWifiManager
m_currentPower	model/parf-wifi-manager.cc	/^  uint8_t m_currentPower; \/\/!< Current power used by the remote station.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_currentRate	model/parf-wifi-manager.cc	/^  uint32_t m_currentRate; \/\/!< Current rate used by the remote station.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_initialized	model/parf-wifi-manager.cc	/^  bool m_initialized; \/\/!< For initializing variables.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nAttempt	model/parf-wifi-manager.cc	/^  uint32_t m_nAttempt; \/\/!< Number of transmission attempts.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nFail	model/parf-wifi-manager.cc	/^  uint32_t m_nFail; \/\/!< Number of failed transmission attempts.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nRetry	model/parf-wifi-manager.cc	/^  uint32_t m_nRetry; \/\/!< Number of transmission retries.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nSuccess	model/parf-wifi-manager.cc	/^  uint32_t m_nSuccess; \/\/!< Number of successful transmission attempts.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_nSupported	model/parf-wifi-manager.cc	/^  uint32_t m_nSupported; \/\/!< Number of supported rates by the remote station.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_usingRecoveryPower	model/parf-wifi-manager.cc	/^  bool m_usingRecoveryPower; \/\/!< If using recovery power.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
m_usingRecoveryRate	model/parf-wifi-manager.cc	/^  bool m_usingRecoveryRate; \/\/!< If using recovery rate.$/;"	m	struct:ns3::ParfWifiRemoteStation	file:
ns3	model/parf-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~ParfWifiManager	model/parf-wifi-manager.cc	/^ParfWifiManager::~ParfWifiManager ()$/;"	f	class:ns3::ParfWifiManager
PARF_WIFI_MANAGER_H	model/parf-wifi-manager.h	22;"	d
ParfWifiManager	model/parf-wifi-manager.h	/^class ParfWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
PowerChangeTracedCallback	model/parf-wifi-manager.h	/^  typedef void (*PowerChangeTracedCallback)(const uint8_t power, const Mac48Address remoteAddress);$/;"	t	class:ns3::ParfWifiManager
RateChangeTracedCallback	model/parf-wifi-manager.h	/^  typedef void (*RateChangeTracedCallback)(const uint32_t rate, const Mac48Address remoteAddress);$/;"	t	class:ns3::ParfWifiManager
m_attemptThreshold	model/parf-wifi-manager.h	/^  uint32_t m_attemptThreshold; \/\/!< The minimum number of transmission attempts to try a new power or rate. The 'timer' threshold in the ARF algorithm.$/;"	m	class:ns3::ParfWifiManager
m_nPower	model/parf-wifi-manager.h	/^  uint32_t m_nPower;$/;"	m	class:ns3::ParfWifiManager
m_powerChange	model/parf-wifi-manager.h	/^  TracedCallback<uint8_t, Mac48Address> m_powerChange;$/;"	m	class:ns3::ParfWifiManager
m_rateChange	model/parf-wifi-manager.h	/^  TracedCallback<uint32_t, Mac48Address> m_rateChange;$/;"	m	class:ns3::ParfWifiManager
m_successThreshold	model/parf-wifi-manager.h	/^  uint32_t m_successThreshold; \/\/!< The minimum number of successful transmissions to try a new power or rate.$/;"	m	class:ns3::ParfWifiManager
ns3	model/parf-wifi-manager.h	/^namespace ns3 {$/;"	n
Block	model/qos-blocked-destinations.cc	/^QosBlockedDestinations::Block (Mac48Address dest, uint8_t tid)$/;"	f	class:ns3::QosBlockedDestinations
IsBlocked	model/qos-blocked-destinations.cc	/^QosBlockedDestinations::IsBlocked (Mac48Address dest, uint8_t tid) const$/;"	f	class:ns3::QosBlockedDestinations
QosBlockedDestinations	model/qos-blocked-destinations.cc	/^QosBlockedDestinations::QosBlockedDestinations ()$/;"	f	class:ns3::QosBlockedDestinations
Unblock	model/qos-blocked-destinations.cc	/^QosBlockedDestinations::Unblock (Mac48Address dest, uint8_t tid)$/;"	f	class:ns3::QosBlockedDestinations
ns3	model/qos-blocked-destinations.cc	/^namespace ns3 {$/;"	n	file:
~QosBlockedDestinations	model/qos-blocked-destinations.cc	/^QosBlockedDestinations::~QosBlockedDestinations ()$/;"	f	class:ns3::QosBlockedDestinations
BlockedPackets	model/qos-blocked-destinations.h	/^  typedef std::list<std::pair<Mac48Address, uint8_t> > BlockedPackets;$/;"	t	class:ns3::QosBlockedDestinations
BlockedPacketsCI	model/qos-blocked-destinations.h	/^  typedef std::list<std::pair<Mac48Address, uint8_t> >::const_iterator BlockedPacketsCI;$/;"	t	class:ns3::QosBlockedDestinations
BlockedPacketsI	model/qos-blocked-destinations.h	/^  typedef std::list<std::pair<Mac48Address, uint8_t> >::iterator BlockedPacketsI;$/;"	t	class:ns3::QosBlockedDestinations
QOS_BLOCKED_DESTINATIONS_H	model/qos-blocked-destinations.h	22;"	d
QosBlockedDestinations	model/qos-blocked-destinations.h	/^class QosBlockedDestinations$/;"	c	namespace:ns3
m_blockedQosPackets	model/qos-blocked-destinations.h	/^  BlockedPackets m_blockedQosPackets;$/;"	m	class:ns3::QosBlockedDestinations
ns3	model/qos-blocked-destinations.h	/^namespace ns3 {$/;"	n
Deserialize	model/qos-tag.cc	/^QosTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::QosTag
GetInstanceTypeId	model/qos-tag.cc	/^QosTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::QosTag
GetSerializedSize	model/qos-tag.cc	/^QosTag::GetSerializedSize (void) const$/;"	f	class:ns3::QosTag
GetTid	model/qos-tag.cc	/^QosTag::GetTid () const$/;"	f	class:ns3::QosTag
GetTypeId	model/qos-tag.cc	/^QosTag::GetTypeId (void)$/;"	f	class:ns3::QosTag
Print	model/qos-tag.cc	/^QosTag::Print (std::ostream &os) const$/;"	f	class:ns3::QosTag
QosTag	model/qos-tag.cc	/^QosTag::QosTag ()$/;"	f	class:ns3::QosTag
QosTag	model/qos-tag.cc	/^QosTag::QosTag (uint8_t tid)$/;"	f	class:ns3::QosTag
Serialize	model/qos-tag.cc	/^QosTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::QosTag
SetTid	model/qos-tag.cc	/^QosTag::SetTid (uint8_t tid)$/;"	f	class:ns3::QosTag
SetUserPriority	model/qos-tag.cc	/^QosTag::SetUserPriority (UserPriority up)$/;"	f	class:ns3::QosTag
ns3	model/qos-tag.cc	/^namespace ns3 {$/;"	n	file:
QOS_TAG_H	model/qos-tag.h	21;"	d
QosTag	model/qos-tag.h	/^class QosTag : public Tag$/;"	c	namespace:ns3
UP_BE	model/qos-tag.h	/^  UP_BE = 0, \/**< best effort (default) *\/$/;"	e	enum:ns3::UserPriority
UP_BK	model/qos-tag.h	/^  UP_BK = 1, \/**< background  *\/$/;"	e	enum:ns3::UserPriority
UP_CL	model/qos-tag.h	/^  UP_CL = 4, \/**< controlled load *\/$/;"	e	enum:ns3::UserPriority
UP_EE	model/qos-tag.h	/^  UP_EE = 3, \/**< excellent effort  *\/$/;"	e	enum:ns3::UserPriority
UP_NC	model/qos-tag.h	/^  UP_NC = 7  \/**< network control *\/$/;"	e	enum:ns3::UserPriority
UP_VI	model/qos-tag.h	/^  UP_VI = 5, \/**< video, < 100ms latency and jitter *\/$/;"	e	enum:ns3::UserPriority
UP_VO	model/qos-tag.h	/^  UP_VO = 6, \/**< voice, < 10ms latency and jitter *\/$/;"	e	enum:ns3::UserPriority
UserPriority	model/qos-tag.h	/^enum UserPriority$/;"	g	namespace:ns3
m_tid	model/qos-tag.h	/^  uint8_t m_tid;  \/\/!< Traffic ID$/;"	m	class:ns3::QosTag
ns3	model/qos-tag.h	/^namespace ns3 {$/;"	n
QosUtilsGetTidForPacket	model/qos-utils.cc	/^QosUtilsGetTidForPacket (Ptr<const Packet> packet)$/;"	f	namespace:ns3
QosUtilsIsOldPacket	model/qos-utils.cc	/^QosUtilsIsOldPacket (uint16_t startingSeq, uint16_t seqNumber)$/;"	f	namespace:ns3
QosUtilsMapSeqControlToUniqueInteger	model/qos-utils.cc	/^QosUtilsMapSeqControlToUniqueInteger (uint16_t seqControl, uint16_t endSequence)$/;"	f	namespace:ns3
QosUtilsMapTidToAc	model/qos-utils.cc	/^QosUtilsMapTidToAc (uint8_t tid)$/;"	f	namespace:ns3
ns3	model/qos-utils.cc	/^namespace ns3 {$/;"	n	file:
AC_BE	model/qos-utils.h	/^  AC_BE = 0,$/;"	e	enum:ns3::AcIndex
AC_BE_NQOS	model/qos-utils.h	/^  AC_BE_NQOS = 4,$/;"	e	enum:ns3::AcIndex
AC_BK	model/qos-utils.h	/^  AC_BK = 1,$/;"	e	enum:ns3::AcIndex
AC_UNDEF	model/qos-utils.h	/^  AC_UNDEF$/;"	e	enum:ns3::AcIndex
AC_VI	model/qos-utils.h	/^  AC_VI = 2,$/;"	e	enum:ns3::AcIndex
AC_VO	model/qos-utils.h	/^  AC_VO = 3,$/;"	e	enum:ns3::AcIndex
AcIndex	model/qos-utils.h	/^enum AcIndex$/;"	g	namespace:ns3
QOS_UTILS_H	model/qos-utils.h	21;"	d
ns3	model/qos-utils.h	/^namespace ns3 {$/;"	n
AddNext	model/random-stream.cc	/^TestRandomStream::AddNext (uint32_t v)$/;"	f	class:ns3::TestRandomStream
AssignStreams	model/random-stream.cc	/^RealRandomStream::AssignStreams (int64_t stream)$/;"	f	class:ns3::RealRandomStream
AssignStreams	model/random-stream.cc	/^TestRandomStream::AssignStreams (int64_t stream)$/;"	f	class:ns3::TestRandomStream
GetNext	model/random-stream.cc	/^RealRandomStream::GetNext (uint32_t min, uint32_t max)$/;"	f	class:ns3::RealRandomStream
GetNext	model/random-stream.cc	/^TestRandomStream::GetNext (uint32_t min, uint32_t max)$/;"	f	class:ns3::TestRandomStream
RealRandomStream	model/random-stream.cc	/^RealRandomStream::RealRandomStream ()$/;"	f	class:ns3::RealRandomStream
ns3	model/random-stream.cc	/^namespace ns3 {$/;"	n	file:
~RandomStream	model/random-stream.cc	/^RandomStream::~RandomStream ()$/;"	f	class:ns3::RandomStream
RANDOM_STREAM_H	model/random-stream.h	21;"	d
RandomStream	model/random-stream.h	/^class RandomStream$/;"	c	namespace:ns3
RealRandomStream	model/random-stream.h	/^class RealRandomStream : public RandomStream$/;"	c	namespace:ns3
TestRandomStream	model/random-stream.h	/^class TestRandomStream : public RandomStream$/;"	c	namespace:ns3
m_nexts	model/random-stream.h	/^  std::list<uint32_t> m_nexts;$/;"	m	class:ns3::TestRandomStream
m_stream	model/random-stream.h	/^  Ptr<UniformRandomVariable> m_stream;$/;"	m	class:ns3::RealRandomStream
ns3	model/random-stream.h	/^namespace ns3 {$/;"	n
DeaggregateAmsduAndForward	model/regular-wifi-mac.cc	/^RegularWifiMac::DeaggregateAmsduAndForward (Ptr<Packet> aggregatedPacket,$/;"	f	class:ns3::RegularWifiMac
DoDispose	model/regular-wifi-mac.cc	/^RegularWifiMac::DoDispose ()$/;"	f	class:ns3::RegularWifiMac
DoInitialize	model/regular-wifi-mac.cc	/^RegularWifiMac::DoInitialize ()$/;"	f	class:ns3::RegularWifiMac
Enqueue	model/regular-wifi-mac.cc	/^RegularWifiMac::Enqueue (Ptr<const Packet> packet,$/;"	f	class:ns3::RegularWifiMac
FinishConfigureStandard	model/regular-wifi-mac.cc	/^RegularWifiMac::FinishConfigureStandard (enum WifiPhyStandard standard)$/;"	f	class:ns3::RegularWifiMac
ForwardUp	model/regular-wifi-mac.cc	/^RegularWifiMac::ForwardUp (Ptr<Packet> packet, Mac48Address from, Mac48Address to)$/;"	f	class:ns3::RegularWifiMac
GetAckTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::GetAckTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetAddress	model/regular-wifi-mac.cc	/^RegularWifiMac::GetAddress (void) const$/;"	f	class:ns3::RegularWifiMac
GetBEQueue	model/regular-wifi-mac.cc	/^RegularWifiMac::GetBEQueue () const$/;"	f	class:ns3::RegularWifiMac
GetBKQueue	model/regular-wifi-mac.cc	/^RegularWifiMac::GetBKQueue () const$/;"	f	class:ns3::RegularWifiMac
GetBasicBlockAckTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::GetBasicBlockAckTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetBssid	model/regular-wifi-mac.cc	/^RegularWifiMac::GetBssid (void) const$/;"	f	class:ns3::RegularWifiMac
GetCompressedBlockAckTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::GetCompressedBlockAckTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetCtsTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::GetCtsTimeout (void) const$/;"	f	class:ns3::RegularWifiMac
GetCtsToSelfSupported	model/regular-wifi-mac.cc	/^RegularWifiMac::GetCtsToSelfSupported () const$/;"	f	class:ns3::RegularWifiMac
GetDcaTxop	model/regular-wifi-mac.cc	/^RegularWifiMac::GetDcaTxop () const$/;"	f	class:ns3::RegularWifiMac
GetEifsNoDifs	model/regular-wifi-mac.cc	/^RegularWifiMac::GetEifsNoDifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetHtSupported	model/regular-wifi-mac.cc	/^RegularWifiMac::GetHtSupported () const$/;"	f	class:ns3::RegularWifiMac
GetPifs	model/regular-wifi-mac.cc	/^RegularWifiMac::GetPifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetQosSupported	model/regular-wifi-mac.cc	/^RegularWifiMac::GetQosSupported () const$/;"	f	class:ns3::RegularWifiMac
GetRifs	model/regular-wifi-mac.cc	/^RegularWifiMac::GetRifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetSifs	model/regular-wifi-mac.cc	/^RegularWifiMac::GetSifs (void) const$/;"	f	class:ns3::RegularWifiMac
GetSlot	model/regular-wifi-mac.cc	/^RegularWifiMac::GetSlot (void) const$/;"	f	class:ns3::RegularWifiMac
GetSsid	model/regular-wifi-mac.cc	/^RegularWifiMac::GetSsid (void) const$/;"	f	class:ns3::RegularWifiMac
GetTypeId	model/regular-wifi-mac.cc	/^RegularWifiMac::GetTypeId (void)$/;"	f	class:ns3::RegularWifiMac
GetVIQueue	model/regular-wifi-mac.cc	/^RegularWifiMac::GetVIQueue () const$/;"	f	class:ns3::RegularWifiMac
GetVOQueue	model/regular-wifi-mac.cc	/^RegularWifiMac::GetVOQueue () const$/;"	f	class:ns3::RegularWifiMac
GetWifiPhy	model/regular-wifi-mac.cc	/^RegularWifiMac::GetWifiPhy (void) const$/;"	f	class:ns3::RegularWifiMac
GetWifiRemoteStationManager	model/regular-wifi-mac.cc	/^RegularWifiMac::GetWifiRemoteStationManager () const$/;"	f	class:ns3::RegularWifiMac
Receive	model/regular-wifi-mac.cc	/^RegularWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::RegularWifiMac
RegularWifiMac	model/regular-wifi-mac.cc	/^RegularWifiMac::RegularWifiMac ()$/;"	f	class:ns3::RegularWifiMac
ResetWifiPhy	model/regular-wifi-mac.cc	/^RegularWifiMac::ResetWifiPhy (void)$/;"	f	class:ns3::RegularWifiMac
SendAddBaResponse	model/regular-wifi-mac.cc	/^RegularWifiMac::SendAddBaResponse (const MgtAddBaRequestHeader *reqHdr,$/;"	f	class:ns3::RegularWifiMac
SetAckTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::SetAckTimeout (Time ackTimeout)$/;"	f	class:ns3::RegularWifiMac
SetAddress	model/regular-wifi-mac.cc	/^RegularWifiMac::SetAddress (Mac48Address address)$/;"	f	class:ns3::RegularWifiMac
SetBasicBlockAckTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::SetBasicBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::RegularWifiMac
SetBssid	model/regular-wifi-mac.cc	/^RegularWifiMac::SetBssid (Mac48Address bssid)$/;"	f	class:ns3::RegularWifiMac
SetCompressedBlockAckTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::SetCompressedBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::RegularWifiMac
SetCtsTimeout	model/regular-wifi-mac.cc	/^RegularWifiMac::SetCtsTimeout (Time ctsTimeout)$/;"	f	class:ns3::RegularWifiMac
SetCtsToSelfSupported	model/regular-wifi-mac.cc	/^RegularWifiMac::SetCtsToSelfSupported(bool enable)$/;"	f	class:ns3::RegularWifiMac
SetEifsNoDifs	model/regular-wifi-mac.cc	/^RegularWifiMac::SetEifsNoDifs (Time eifsNoDifs)$/;"	f	class:ns3::RegularWifiMac
SetForwardUpCallback	model/regular-wifi-mac.cc	/^RegularWifiMac::SetForwardUpCallback (ForwardUpCallback upCallback)$/;"	f	class:ns3::RegularWifiMac
SetHtSupported	model/regular-wifi-mac.cc	/^RegularWifiMac::SetHtSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetLinkDownCallback	model/regular-wifi-mac.cc	/^RegularWifiMac::SetLinkDownCallback (Callback<void> linkDown)$/;"	f	class:ns3::RegularWifiMac
SetLinkUpCallback	model/regular-wifi-mac.cc	/^RegularWifiMac::SetLinkUpCallback (Callback<void> linkUp)$/;"	f	class:ns3::RegularWifiMac
SetPifs	model/regular-wifi-mac.cc	/^RegularWifiMac::SetPifs (Time pifs)$/;"	f	class:ns3::RegularWifiMac
SetPromisc	model/regular-wifi-mac.cc	/^RegularWifiMac::SetPromisc (void)$/;"	f	class:ns3::RegularWifiMac
SetQosSupported	model/regular-wifi-mac.cc	/^RegularWifiMac::SetQosSupported (bool enable)$/;"	f	class:ns3::RegularWifiMac
SetRifs	model/regular-wifi-mac.cc	/^RegularWifiMac::SetRifs (Time rifs)$/;"	f	class:ns3::RegularWifiMac
SetSifs	model/regular-wifi-mac.cc	/^RegularWifiMac::SetSifs (Time sifs)$/;"	f	class:ns3::RegularWifiMac
SetSlot	model/regular-wifi-mac.cc	/^RegularWifiMac::SetSlot (Time slotTime)$/;"	f	class:ns3::RegularWifiMac
SetSsid	model/regular-wifi-mac.cc	/^RegularWifiMac::SetSsid (Ssid ssid)$/;"	f	class:ns3::RegularWifiMac
SetTypeOfStation	model/regular-wifi-mac.cc	/^RegularWifiMac::SetTypeOfStation (TypeOfStation type)$/;"	f	class:ns3::RegularWifiMac
SetWifiPhy	model/regular-wifi-mac.cc	/^RegularWifiMac::SetWifiPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::RegularWifiMac
SetWifiRemoteStationManager	model/regular-wifi-mac.cc	/^RegularWifiMac::SetWifiRemoteStationManager (Ptr<WifiRemoteStationManager> stationManager)$/;"	f	class:ns3::RegularWifiMac
SetupEdcaQueue	model/regular-wifi-mac.cc	/^RegularWifiMac::SetupEdcaQueue (enum AcIndex ac)$/;"	f	class:ns3::RegularWifiMac
SupportsSendFrom	model/regular-wifi-mac.cc	/^RegularWifiMac::SupportsSendFrom (void) const$/;"	f	class:ns3::RegularWifiMac
TxFailed	model/regular-wifi-mac.cc	/^RegularWifiMac::TxFailed (const WifiMacHeader &hdr)$/;"	f	class:ns3::RegularWifiMac
TxOk	model/regular-wifi-mac.cc	/^RegularWifiMac::TxOk (const WifiMacHeader &hdr)$/;"	f	class:ns3::RegularWifiMac
ns3	model/regular-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
~RegularWifiMac	model/regular-wifi-mac.cc	/^RegularWifiMac::~RegularWifiMac ()$/;"	f	class:ns3::RegularWifiMac
EdcaQueues	model/regular-wifi-mac.h	/^  typedef std::map<AcIndex, Ptr<EdcaTxopN> > EdcaQueues;$/;"	t	class:ns3::RegularWifiMac
ForwardUpCallback	model/regular-wifi-mac.h	/^  typedef Callback<void, Ptr<Packet>, Mac48Address, Mac48Address> ForwardUpCallback;$/;"	t	class:ns3::RegularWifiMac
REGULAR_WIFI_MAC_H	model/regular-wifi-mac.h	21;"	d
RegularWifiMac	model/regular-wifi-mac.h	/^class RegularWifiMac : public WifiMac$/;"	c	namespace:ns3
m_dca	model/regular-wifi-mac.h	/^  Ptr<DcaTxop> m_dca;$/;"	m	class:ns3::RegularWifiMac
m_dcfManager	model/regular-wifi-mac.h	/^  DcfManager *m_dcfManager; \/\/!< DCF manager (access to channel)$/;"	m	class:ns3::RegularWifiMac
m_edca	model/regular-wifi-mac.h	/^  EdcaQueues m_edca;$/;"	m	class:ns3::RegularWifiMac
m_forwardUp	model/regular-wifi-mac.h	/^  ForwardUpCallback m_forwardUp; \/\/!< Callback to forward packet up the stack$/;"	m	class:ns3::RegularWifiMac
m_htSupported	model/regular-wifi-mac.h	/^  bool m_htSupported;$/;"	m	class:ns3::RegularWifiMac
m_linkDown	model/regular-wifi-mac.h	/^  Callback<void> m_linkDown; \/\/!< Callback when a link is down$/;"	m	class:ns3::RegularWifiMac
m_linkUp	model/regular-wifi-mac.h	/^  Callback<void> m_linkUp; \/\/!< Callback when a link is up$/;"	m	class:ns3::RegularWifiMac
m_low	model/regular-wifi-mac.h	/^  Ptr<MacLow> m_low; \/\/!< MacLow (RTS, CTS, DATA, ACK etc.)$/;"	m	class:ns3::RegularWifiMac
m_phy	model/regular-wifi-mac.h	/^  Ptr<WifiPhy> m_phy; \/\/!< Wifi PHY$/;"	m	class:ns3::RegularWifiMac
m_qosSupported	model/regular-wifi-mac.h	/^  bool m_qosSupported;$/;"	m	class:ns3::RegularWifiMac
m_rxMiddle	model/regular-wifi-mac.h	/^  MacRxMiddle *m_rxMiddle; \/\/!< RX middle (de-fragmentation etc.)$/;"	m	class:ns3::RegularWifiMac
m_ssid	model/regular-wifi-mac.h	/^  Ssid m_ssid; \/\/!< Service Set ID (SSID)$/;"	m	class:ns3::RegularWifiMac
m_stationManager	model/regular-wifi-mac.h	/^  Ptr<WifiRemoteStationManager> m_stationManager; \/\/!< Remote station manager (rate control, RTS\/CTS\/fragmentation thresholds etc.)$/;"	m	class:ns3::RegularWifiMac
m_txErrCallback	model/regular-wifi-mac.h	/^  TracedCallback<const WifiMacHeader &> m_txErrCallback;$/;"	m	class:ns3::RegularWifiMac
m_txMiddle	model/regular-wifi-mac.h	/^  MacTxMiddle *m_txMiddle; \/\/!< TX middle (aggregation etc.)$/;"	m	class:ns3::RegularWifiMac
m_txOkCallback	model/regular-wifi-mac.h	/^  TracedCallback<const WifiMacHeader &> m_txOkCallback;$/;"	m	class:ns3::RegularWifiMac
ns3	model/regular-wifi-mac.h	/^namespace ns3 {$/;"	n
ARts	model/rraa-wifi-manager.cc	/^RraaWifiManager::ARts (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
CheckTimeout	model/rraa-wifi-manager.cc	/^RraaWifiManager::CheckTimeout (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
DoCreateStation	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoCreateStation (void) const$/;"	f	class:ns3::RraaWifiManager
DoGetDataTxVector	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoGetDataTxVector (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoGetRtsTxVector	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoGetRtsTxVector (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoNeedRts	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoNeedRts (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoReportDataFailed	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoReportDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportDataOk	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoReportDataOk (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoReportFinalDataFailed	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoReportFinalDataFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportFinalRtsFailed	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoReportFinalRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportRtsFailed	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoReportRtsFailed (WifiRemoteStation *st)$/;"	f	class:ns3::RraaWifiManager
DoReportRtsOk	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoReportRtsOk (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
DoReportRxOk	model/rraa-wifi-manager.cc	/^RraaWifiManager::DoReportRxOk (WifiRemoteStation *st,$/;"	f	class:ns3::RraaWifiManager
GetMaxRate	model/rraa-wifi-manager.cc	/^RraaWifiManager::GetMaxRate (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
GetMinRate	model/rraa-wifi-manager.cc	/^RraaWifiManager::GetMinRate (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
GetThresholds	model/rraa-wifi-manager.cc	/^RraaWifiManager::GetThresholds (RraaWifiRemoteStation *station,$/;"	f	class:ns3::RraaWifiManager
GetThresholds	model/rraa-wifi-manager.cc	/^RraaWifiManager::GetThresholds (WifiMode mode) const$/;"	f	class:ns3::RraaWifiManager
GetTypeId	model/rraa-wifi-manager.cc	/^RraaWifiManager::GetTypeId (void)$/;"	f	class:ns3::RraaWifiManager
IsLowLatency	model/rraa-wifi-manager.cc	/^RraaWifiManager::IsLowLatency (void) const$/;"	f	class:ns3::RraaWifiManager
Min	model/rraa-wifi-manager.cc	29;"	d	file:
ResetCountersBasic	model/rraa-wifi-manager.cc	/^RraaWifiManager::ResetCountersBasic (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
RraaWifiManager	model/rraa-wifi-manager.cc	/^RraaWifiManager::RraaWifiManager ()$/;"	f	class:ns3::RraaWifiManager
RraaWifiRemoteStation	model/rraa-wifi-manager.cc	/^struct RraaWifiRemoteStation : public WifiRemoteStation$/;"	s	namespace:ns3	file:
RunBasicAlgorithm	model/rraa-wifi-manager.cc	/^RraaWifiManager::RunBasicAlgorithm (RraaWifiRemoteStation *station)$/;"	f	class:ns3::RraaWifiManager
m_counter	model/rraa-wifi-manager.cc	/^  uint32_t m_counter;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_failed	model/rraa-wifi-manager.cc	/^  uint32_t m_failed;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_initialized	model/rraa-wifi-manager.cc	/^  bool m_initialized;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_lastFrameFail	model/rraa-wifi-manager.cc	/^  bool m_lastFrameFail;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_lastReset	model/rraa-wifi-manager.cc	/^  Time m_lastReset;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rate	model/rraa-wifi-manager.cc	/^  uint32_t m_rate;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rtsCounter	model/rraa-wifi-manager.cc	/^  uint32_t m_rtsCounter;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rtsOn	model/rraa-wifi-manager.cc	/^  bool m_rtsOn;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
m_rtsWnd	model/rraa-wifi-manager.cc	/^  uint32_t m_rtsWnd;$/;"	m	struct:ns3::RraaWifiRemoteStation	file:
ns3	model/rraa-wifi-manager.cc	/^namespace ns3 {$/;"	n	file:
~RraaWifiManager	model/rraa-wifi-manager.cc	/^RraaWifiManager::~RraaWifiManager ()$/;"	f	class:ns3::RraaWifiManager
RRAA_WIFI_MANAGER_H	model/rraa-wifi-manager.h	21;"	d
RraaWifiManager	model/rraa-wifi-manager.h	/^class RraaWifiManager : public WifiRemoteStationManager$/;"	c	namespace:ns3
ThresholdsItem	model/rraa-wifi-manager.h	/^  struct ThresholdsItem$/;"	s	class:ns3::RraaWifiManager
datarate	model/rraa-wifi-manager.h	/^    uint32_t datarate;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
ewnd	model/rraa-wifi-manager.h	/^    uint32_t ewnd;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
m_basic	model/rraa-wifi-manager.h	/^  bool m_basic;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor12	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor12;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor18	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor18;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor24	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor24;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor36	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor36;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor48	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor48;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor54	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor54;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor6	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor6;$/;"	m	class:ns3::RraaWifiManager
m_ewndfor9	model/rraa-wifi-manager.h	/^  uint32_t m_ewndfor9;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor12	model/rraa-wifi-manager.h	/^  double m_pmtlfor12;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor18	model/rraa-wifi-manager.h	/^  double m_pmtlfor18;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor24	model/rraa-wifi-manager.h	/^  double m_pmtlfor24;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor36	model/rraa-wifi-manager.h	/^  double m_pmtlfor36;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor48	model/rraa-wifi-manager.h	/^  double m_pmtlfor48;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor54	model/rraa-wifi-manager.h	/^  double m_pmtlfor54;$/;"	m	class:ns3::RraaWifiManager
m_pmtlfor9	model/rraa-wifi-manager.h	/^  double m_pmtlfor9;$/;"	m	class:ns3::RraaWifiManager
m_porifor12	model/rraa-wifi-manager.h	/^  double m_porifor12;$/;"	m	class:ns3::RraaWifiManager
m_porifor18	model/rraa-wifi-manager.h	/^  double m_porifor18;$/;"	m	class:ns3::RraaWifiManager
m_porifor24	model/rraa-wifi-manager.h	/^  double m_porifor24;$/;"	m	class:ns3::RraaWifiManager
m_porifor36	model/rraa-wifi-manager.h	/^  double m_porifor36;$/;"	m	class:ns3::RraaWifiManager
m_porifor48	model/rraa-wifi-manager.h	/^  double m_porifor48;$/;"	m	class:ns3::RraaWifiManager
m_porifor6	model/rraa-wifi-manager.h	/^  double m_porifor6;$/;"	m	class:ns3::RraaWifiManager
m_porifor9	model/rraa-wifi-manager.h	/^  double m_porifor9;$/;"	m	class:ns3::RraaWifiManager
m_timeout	model/rraa-wifi-manager.h	/^  Time m_timeout;$/;"	m	class:ns3::RraaWifiManager
ns3	model/rraa-wifi-manager.h	/^namespace ns3 {$/;"	n
pmtl	model/rraa-wifi-manager.h	/^    double pmtl;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
pori	model/rraa-wifi-manager.h	/^    double pori;$/;"	m	struct:ns3::RraaWifiManager::ThresholdsItem
Deserialize	model/snr-tag.cc	/^SnrTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::SnrTag
Get	model/snr-tag.cc	/^SnrTag::Get (void) const$/;"	f	class:ns3::SnrTag
GetInstanceTypeId	model/snr-tag.cc	/^SnrTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::SnrTag
GetSerializedSize	model/snr-tag.cc	/^SnrTag::GetSerializedSize (void) const$/;"	f	class:ns3::SnrTag
GetTypeId	model/snr-tag.cc	/^SnrTag::GetTypeId (void)$/;"	f	class:ns3::SnrTag
Print	model/snr-tag.cc	/^SnrTag::Print (std::ostream &os) const$/;"	f	class:ns3::SnrTag
Serialize	model/snr-tag.cc	/^SnrTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::SnrTag
Set	model/snr-tag.cc	/^SnrTag::Set (double snr)$/;"	f	class:ns3::SnrTag
SnrTag	model/snr-tag.cc	/^SnrTag::SnrTag ()$/;"	f	class:ns3::SnrTag
SnrTag	model/snr-tag.cc	/^SnrTag::SnrTag (double snr)$/;"	f	class:ns3::SnrTag
ns3	model/snr-tag.cc	/^namespace ns3 {$/;"	n	file:
SNR_TAG_H	model/snr-tag.h	26;"	d
SnrTag	model/snr-tag.h	/^class SnrTag : public Tag$/;"	c	namespace:ns3
m_snr	model/snr-tag.h	/^  double m_snr;  \/\/!< SNR value$/;"	m	class:ns3::SnrTag
ns3	model/snr-tag.h	/^namespace ns3 {$/;"	n
DeserializeInformationField	model/ssid.cc	/^Ssid::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::Ssid
ElementId	model/ssid.cc	/^Ssid::ElementId () const$/;"	f	class:ns3::Ssid
GetInformationFieldSize	model/ssid.cc	/^Ssid::GetInformationFieldSize () const$/;"	f	class:ns3::Ssid
IsBroadcast	model/ssid.cc	/^Ssid::IsBroadcast (void) const$/;"	f	class:ns3::Ssid
IsEqual	model/ssid.cc	/^Ssid::IsEqual (const Ssid& o) const$/;"	f	class:ns3::Ssid
PeekString	model/ssid.cc	/^Ssid::PeekString (void) const$/;"	f	class:ns3::Ssid
SerializeInformationField	model/ssid.cc	/^Ssid::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::Ssid
Ssid	model/ssid.cc	/^Ssid::Ssid ()$/;"	f	class:ns3::Ssid
Ssid	model/ssid.cc	/^Ssid::Ssid (char const ssid[32], uint8_t length)$/;"	f	class:ns3::Ssid
Ssid	model/ssid.cc	/^Ssid::Ssid (std::string s)$/;"	f	class:ns3::Ssid
ns3	model/ssid.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/ssid.cc	/^operator << (std::ostream &os, const Ssid &ssid)$/;"	f	namespace:ns3
operator >>	model/ssid.cc	/^std::istream &operator >> (std::istream &is, Ssid &ssid)$/;"	f	namespace:ns3
SSID_H	model/ssid.h	21;"	d
Ssid	model/ssid.h	/^class Ssid : public WifiInformationElement$/;"	c	namespace:ns3
m_length	model/ssid.h	/^  uint8_t m_length;   \/\/!< Length of the SSID$/;"	m	class:ns3::Ssid
m_ssid	model/ssid.h	/^  uint8_t m_ssid[33]; \/\/!< Raw SSID value$/;"	m	class:ns3::Ssid
ns3	model/ssid.h	/^namespace ns3 {$/;"	n
AssocRequestTimeout	model/sta-wifi-mac.cc	/^StaWifiMac::AssocRequestTimeout (void)$/;"	f	class:ns3::StaWifiMac
Enqueue	model/sta-wifi-mac.cc	/^StaWifiMac::Enqueue (Ptr<const Packet> packet, Mac48Address to)$/;"	f	class:ns3::StaWifiMac
GetActiveProbing	model/sta-wifi-mac.cc	/^bool StaWifiMac::GetActiveProbing (void) const$/;"	f	class:ns3::StaWifiMac
GetHtCapabilities	model/sta-wifi-mac.cc	/^StaWifiMac::GetHtCapabilities (void) const$/;"	f	class:ns3::StaWifiMac
GetSupportedRates	model/sta-wifi-mac.cc	/^StaWifiMac::GetSupportedRates (void) const$/;"	f	class:ns3::StaWifiMac
GetTypeId	model/sta-wifi-mac.cc	/^StaWifiMac::GetTypeId (void)$/;"	f	class:ns3::StaWifiMac
IsAssociated	model/sta-wifi-mac.cc	/^StaWifiMac::IsAssociated (void) const$/;"	f	class:ns3::StaWifiMac
IsWaitAssocResp	model/sta-wifi-mac.cc	/^StaWifiMac::IsWaitAssocResp (void) const$/;"	f	class:ns3::StaWifiMac
MissedBeacons	model/sta-wifi-mac.cc	/^StaWifiMac::MissedBeacons (void)$/;"	f	class:ns3::StaWifiMac
ProbeRequestTimeout	model/sta-wifi-mac.cc	/^StaWifiMac::ProbeRequestTimeout (void)$/;"	f	class:ns3::StaWifiMac
Receive	model/sta-wifi-mac.cc	/^StaWifiMac::Receive (Ptr<Packet> packet, const WifiMacHeader *hdr)$/;"	f	class:ns3::StaWifiMac
RestartBeaconWatchdog	model/sta-wifi-mac.cc	/^StaWifiMac::RestartBeaconWatchdog (Time delay)$/;"	f	class:ns3::StaWifiMac
SendAssociationRequest	model/sta-wifi-mac.cc	/^StaWifiMac::SendAssociationRequest (void)$/;"	f	class:ns3::StaWifiMac
SendProbeRequest	model/sta-wifi-mac.cc	/^StaWifiMac::SendProbeRequest (void)$/;"	f	class:ns3::StaWifiMac
SetActiveProbing	model/sta-wifi-mac.cc	/^StaWifiMac::SetActiveProbing (bool enable)$/;"	f	class:ns3::StaWifiMac
SetAssocRequestTimeout	model/sta-wifi-mac.cc	/^StaWifiMac::SetAssocRequestTimeout (Time timeout)$/;"	f	class:ns3::StaWifiMac
SetMaxMissedBeacons	model/sta-wifi-mac.cc	/^StaWifiMac::SetMaxMissedBeacons (uint32_t missed)$/;"	f	class:ns3::StaWifiMac
SetProbeRequestTimeout	model/sta-wifi-mac.cc	/^StaWifiMac::SetProbeRequestTimeout (Time timeout)$/;"	f	class:ns3::StaWifiMac
SetState	model/sta-wifi-mac.cc	/^StaWifiMac::SetState (MacState value)$/;"	f	class:ns3::StaWifiMac
StaWifiMac	model/sta-wifi-mac.cc	/^StaWifiMac::StaWifiMac ()$/;"	f	class:ns3::StaWifiMac
StartActiveAssociation	model/sta-wifi-mac.cc	/^StaWifiMac::StartActiveAssociation (void)$/;"	f	class:ns3::StaWifiMac
TryToEnsureAssociated	model/sta-wifi-mac.cc	/^StaWifiMac::TryToEnsureAssociated (void)$/;"	f	class:ns3::StaWifiMac
ns3	model/sta-wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
~StaWifiMac	model/sta-wifi-mac.cc	/^StaWifiMac::~StaWifiMac ()$/;"	f	class:ns3::StaWifiMac
ASSOCIATED	model/sta-wifi-mac.h	/^    ASSOCIATED,$/;"	e	enum:ns3::StaWifiMac::MacState
BEACON_MISSED	model/sta-wifi-mac.h	/^    BEACON_MISSED,$/;"	e	enum:ns3::StaWifiMac::MacState
MacState	model/sta-wifi-mac.h	/^  enum MacState$/;"	g	class:ns3::StaWifiMac
REFUSED	model/sta-wifi-mac.h	/^    REFUSED$/;"	e	enum:ns3::StaWifiMac::MacState
STA_WIFI_MAC_H	model/sta-wifi-mac.h	23;"	d
StaWifiMac	model/sta-wifi-mac.h	/^class StaWifiMac : public RegularWifiMac$/;"	c	namespace:ns3
WAIT_ASSOC_RESP	model/sta-wifi-mac.h	/^    WAIT_ASSOC_RESP,$/;"	e	enum:ns3::StaWifiMac::MacState
WAIT_PROBE_RESP	model/sta-wifi-mac.h	/^    WAIT_PROBE_RESP,$/;"	e	enum:ns3::StaWifiMac::MacState
m_activeProbing	model/sta-wifi-mac.h	/^  bool m_activeProbing;$/;"	m	class:ns3::StaWifiMac
m_assocLogger	model/sta-wifi-mac.h	/^  TracedCallback<Mac48Address> m_assocLogger;$/;"	m	class:ns3::StaWifiMac
m_assocRequestEvent	model/sta-wifi-mac.h	/^  EventId m_assocRequestEvent;$/;"	m	class:ns3::StaWifiMac
m_assocRequestTimeout	model/sta-wifi-mac.h	/^  Time m_assocRequestTimeout;$/;"	m	class:ns3::StaWifiMac
m_beaconWatchdog	model/sta-wifi-mac.h	/^  EventId m_beaconWatchdog;$/;"	m	class:ns3::StaWifiMac
m_beaconWatchdogEnd	model/sta-wifi-mac.h	/^  Time m_beaconWatchdogEnd;$/;"	m	class:ns3::StaWifiMac
m_deAssocLogger	model/sta-wifi-mac.h	/^  TracedCallback<Mac48Address> m_deAssocLogger;$/;"	m	class:ns3::StaWifiMac
m_maxMissedBeacons	model/sta-wifi-mac.h	/^  uint32_t m_maxMissedBeacons;$/;"	m	class:ns3::StaWifiMac
m_probeRequestEvent	model/sta-wifi-mac.h	/^  EventId m_probeRequestEvent;$/;"	m	class:ns3::StaWifiMac
m_probeRequestTimeout	model/sta-wifi-mac.h	/^  Time m_probeRequestTimeout;$/;"	m	class:ns3::StaWifiMac
m_state	model/sta-wifi-mac.h	/^  enum MacState m_state;$/;"	m	class:ns3::StaWifiMac	typeref:enum:ns3::StaWifiMac::MacState
ns3	model/sta-wifi-mac.h	/^namespace ns3  {$/;"	n
Deserialize	model/status-code.cc	/^StatusCode::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::StatusCode
GetSerializedSize	model/status-code.cc	/^StatusCode::GetSerializedSize (void) const$/;"	f	class:ns3::StatusCode
IsSuccess	model/status-code.cc	/^StatusCode::IsSuccess (void) const$/;"	f	class:ns3::StatusCode
Serialize	model/status-code.cc	/^StatusCode::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::StatusCode
SetFailure	model/status-code.cc	/^StatusCode::SetFailure (void)$/;"	f	class:ns3::StatusCode
SetSuccess	model/status-code.cc	/^StatusCode::SetSuccess (void)$/;"	f	class:ns3::StatusCode
StatusCode	model/status-code.cc	/^StatusCode::StatusCode ()$/;"	f	class:ns3::StatusCode
ns3	model/status-code.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/status-code.cc	/^operator << (std::ostream &os, const StatusCode &code)$/;"	f	namespace:ns3
STATUS_CODE_H	model/status-code.h	21;"	d
StatusCode	model/status-code.h	/^class StatusCode$/;"	c	namespace:ns3
m_code	model/status-code.h	/^  uint16_t m_code;$/;"	m	class:ns3::StatusCode
ns3	model/status-code.h	/^namespace ns3 {$/;"	n
AddSupportedRate	model/supported-rates.cc	/^SupportedRates::AddSupportedRate (uint32_t bs)$/;"	f	class:ns3::SupportedRates
DeserializeInformationField	model/supported-rates.cc	/^ExtendedSupportedRatesIE::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::ExtendedSupportedRatesIE
DeserializeInformationField	model/supported-rates.cc	/^SupportedRates::DeserializeInformationField (Buffer::Iterator start,$/;"	f	class:ns3::SupportedRates
ElementId	model/supported-rates.cc	/^ExtendedSupportedRatesIE::ElementId () const$/;"	f	class:ns3::ExtendedSupportedRatesIE
ElementId	model/supported-rates.cc	/^SupportedRates::ElementId () const$/;"	f	class:ns3::SupportedRates
ExtendedSupportedRatesIE	model/supported-rates.cc	/^ExtendedSupportedRatesIE::ExtendedSupportedRatesIE ()$/;"	f	class:ns3::ExtendedSupportedRatesIE
ExtendedSupportedRatesIE	model/supported-rates.cc	/^ExtendedSupportedRatesIE::ExtendedSupportedRatesIE (SupportedRates *sr)$/;"	f	class:ns3::ExtendedSupportedRatesIE
GetInformationFieldSize	model/supported-rates.cc	/^ExtendedSupportedRatesIE::GetInformationFieldSize () const$/;"	f	class:ns3::ExtendedSupportedRatesIE
GetInformationFieldSize	model/supported-rates.cc	/^SupportedRates::GetInformationFieldSize () const$/;"	f	class:ns3::SupportedRates
GetNRates	model/supported-rates.cc	/^SupportedRates::GetNRates (void) const$/;"	f	class:ns3::SupportedRates
GetRate	model/supported-rates.cc	/^SupportedRates::GetRate (uint8_t i) const$/;"	f	class:ns3::SupportedRates
GetSerializedSize	model/supported-rates.cc	/^ExtendedSupportedRatesIE::GetSerializedSize () const$/;"	f	class:ns3::ExtendedSupportedRatesIE
IsBasicRate	model/supported-rates.cc	/^SupportedRates::IsBasicRate (uint32_t bs) const$/;"	f	class:ns3::SupportedRates
IsSupportedRate	model/supported-rates.cc	/^SupportedRates::IsSupportedRate (uint32_t bs) const$/;"	f	class:ns3::SupportedRates
Serialize	model/supported-rates.cc	/^ExtendedSupportedRatesIE::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::ExtendedSupportedRatesIE
SerializeInformationField	model/supported-rates.cc	/^ExtendedSupportedRatesIE::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::ExtendedSupportedRatesIE
SerializeInformationField	model/supported-rates.cc	/^SupportedRates::SerializeInformationField (Buffer::Iterator start) const$/;"	f	class:ns3::SupportedRates
SetBasicRate	model/supported-rates.cc	/^SupportedRates::SetBasicRate (uint32_t bs)$/;"	f	class:ns3::SupportedRates
SetSupportedRates	model/supported-rates.cc	/^ExtendedSupportedRatesIE::SetSupportedRates (SupportedRates *sr)$/;"	f	class:ns3::ExtendedSupportedRatesIE
SupportedRates	model/supported-rates.cc	/^SupportedRates::SupportedRates ()$/;"	f	class:ns3::SupportedRates
SupportedRates	model/supported-rates.cc	/^SupportedRates::SupportedRates (const SupportedRates &rates)$/;"	f	class:ns3::SupportedRates
ns3	model/supported-rates.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/supported-rates.cc	/^std::ostream &operator << (std::ostream &os, const SupportedRates &rates)$/;"	f	namespace:ns3
operator =	model/supported-rates.cc	/^SupportedRates::operator= (const SupportedRates& rates)$/;"	f	class:ns3::SupportedRates
ExtendedSupportedRatesIE	model/supported-rates.h	/^class ExtendedSupportedRatesIE : public WifiInformationElement$/;"	c	namespace:ns3
MAX_SUPPORTED_RATES	model/supported-rates.h	/^  static const uint8_t MAX_SUPPORTED_RATES = 32;$/;"	m	class:ns3::SupportedRates
SUPPORTED_RATES_H	model/supported-rates.h	21;"	d
SupportedRates	model/supported-rates.h	/^class SupportedRates : public WifiInformationElement$/;"	c	namespace:ns3
extended	model/supported-rates.h	/^  ExtendedSupportedRatesIE extended;$/;"	m	class:ns3::SupportedRates
m_nRates	model/supported-rates.h	/^  uint8_t m_nRates;  \/\/!< Number of supported rates$/;"	m	class:ns3::SupportedRates
m_rates	model/supported-rates.h	/^  uint8_t m_rates[MAX_SUPPORTED_RATES];  \/\/!< List of supported bitrate (divided by 500000)$/;"	m	class:ns3::SupportedRates
m_supportedRates	model/supported-rates.h	/^  SupportedRates *m_supportedRates;$/;"	m	class:ns3::ExtendedSupportedRatesIE
ns3	model/supported-rates.h	/^namespace ns3 {$/;"	n
GetTypeId	model/wifi-channel.cc	/^WifiChannel::GetTypeId (void)$/;"	f	class:ns3::WifiChannel
ns3	model/wifi-channel.cc	/^namespace ns3 {$/;"	n	file:
WIFI_CHANNEL_H	model/wifi-channel.h	21;"	d
WifiChannel	model/wifi-channel.h	/^class WifiChannel : public Channel$/;"	c	namespace:ns3
ns3	model/wifi-channel.h	/^namespace ns3 {$/;"	n
AddInformationElement	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::AddInformationElement (Ptr<WifiInformationElement> element)$/;"	f	class:ns3::WifiInformationElementVector
Begin	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::Begin ()$/;"	f	class:ns3::WifiInformationElementVector
Deserialize	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiInformationElementVector
DeserializeSingleIe	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::DeserializeSingleIe (Buffer::Iterator start)$/;"	f	class:ns3::WifiInformationElementVector
End	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::End ()$/;"	f	class:ns3::WifiInformationElementVector
FindFirst	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::FindFirst (WifiInformationElementId id) const$/;"	f	class:ns3::WifiInformationElementVector
GetInstanceTypeId	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::GetInstanceTypeId () const$/;"	f	class:ns3::WifiInformationElementVector
GetSerializedSize	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::GetSerializedSize () const$/;"	f	class:ns3::WifiInformationElementVector
GetSize	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::GetSize () const$/;"	f	class:ns3::WifiInformationElementVector
GetTypeId	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::GetTypeId ()$/;"	f	class:ns3::WifiInformationElementVector
PIEComparator	model/wifi-information-element-vector.cc	/^struct PIEComparator$/;"	s	namespace:ns3::__anon6	file:
Print	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::Print (std::ostream & os) const$/;"	f	class:ns3::WifiInformationElementVector
Serialize	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::WifiInformationElementVector
SetMaxSize	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::SetMaxSize (uint16_t size)$/;"	f	class:ns3::WifiInformationElementVector
WifiInformationElementVector	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::WifiInformationElementVector ()$/;"	f	class:ns3::WifiInformationElementVector
ns3	model/wifi-information-element-vector.cc	/^namespace ns3 {$/;"	n	file:
operator ()	model/wifi-information-element-vector.cc	/^  operator () (Ptr<WifiInformationElement> a, Ptr<WifiInformationElement> b) const$/;"	f	struct:ns3::__anon6::PIEComparator
operator ==	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::operator== (const WifiInformationElementVector & a) const$/;"	f	class:ns3::WifiInformationElementVector
~WifiInformationElementVector	model/wifi-information-element-vector.cc	/^WifiInformationElementVector::~WifiInformationElementVector ()$/;"	f	class:ns3::WifiInformationElementVector
IE_VECTOR	model/wifi-information-element-vector.h	/^  typedef std::vector<Ptr<WifiInformationElement> > IE_VECTOR;$/;"	t	class:ns3::WifiInformationElementVector
Iterator	model/wifi-information-element-vector.h	/^  typedef std::vector<Ptr<WifiInformationElement> >::iterator Iterator;$/;"	t	class:ns3::WifiInformationElementVector
WIFI_INFORMATION_ELEMENT_VECTOR_H	model/wifi-information-element-vector.h	23;"	d
WifiInformationElementVector	model/wifi-information-element-vector.h	/^class WifiInformationElementVector : public Header$/;"	c	namespace:ns3
m_elements	model/wifi-information-element-vector.h	/^  IE_VECTOR m_elements; \/\/!< Information element vector$/;"	m	class:ns3::WifiInformationElementVector
m_maxSize	model/wifi-information-element-vector.h	/^  uint16_t m_maxSize;$/;"	m	class:ns3::WifiInformationElementVector
ns3	model/wifi-information-element-vector.h	/^namespace ns3 {$/;"	n
Deserialize	model/wifi-information-element.cc	/^WifiInformationElement::Deserialize (Buffer::Iterator i)$/;"	f	class:ns3::WifiInformationElement
DeserializeIfPresent	model/wifi-information-element.cc	/^WifiInformationElement::DeserializeIfPresent (Buffer::Iterator i)$/;"	f	class:ns3::WifiInformationElement
GetSerializedSize	model/wifi-information-element.cc	/^WifiInformationElement::GetSerializedSize () const$/;"	f	class:ns3::WifiInformationElement
Print	model/wifi-information-element.cc	/^WifiInformationElement::Print (std::ostream &os) const$/;"	f	class:ns3::WifiInformationElement
Serialize	model/wifi-information-element.cc	/^WifiInformationElement::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::WifiInformationElement
ns3	model/wifi-information-element.cc	/^namespace ns3 {$/;"	n	file:
operator <	model/wifi-information-element.cc	/^WifiInformationElement::operator< (WifiInformationElement const & a) const$/;"	f	class:ns3::WifiInformationElement
operator ==	model/wifi-information-element.cc	/^WifiInformationElement::operator== (WifiInformationElement const & a) const$/;"	f	class:ns3::WifiInformationElement
~WifiInformationElement	model/wifi-information-element.cc	/^WifiInformationElement::~WifiInformationElement ()$/;"	f	class:ns3::WifiInformationElement
IE_BSS_LOAD	model/wifi-information-element.h	60;"	d
IE_CF_PARAMETER_SET	model/wifi-information-element.h	53;"	d
IE_CHALLENGE_TEXT	model/wifi-information-element.h	65;"	d
IE_CHANNEL_SWITCH_ANNOUNCEMENT	model/wifi-information-element.h	72;"	d
IE_COUNTRY	model/wifi-information-element.h	56;"	d
IE_DS_PARAMETER_SET	model/wifi-information-element.h	52;"	d
IE_EDCA_PARAMETER_SET	model/wifi-information-element.h	61;"	d
IE_ERP_INFORMATION	model/wifi-information-element.h	77;"	d
IE_EXTENDED_CAPABILITIES	model/wifi-information-element.h	87;"	d
IE_EXTENDED_SUPPORTED_RATES	model/wifi-information-element.h	85;"	d
IE_FH_PARAMETER_SET	model/wifi-information-element.h	51;"	d
IE_HOPPING_PATTERN_PARAMETERS	model/wifi-information-element.h	57;"	d
IE_HOPPING_PATTERN_TABLE	model/wifi-information-element.h	58;"	d
IE_HT_CAPABILITIES	model/wifi-information-element.h	80;"	d
IE_IBSS_DFS	model/wifi-information-element.h	76;"	d
IE_IBSS_PARAMETER_SET	model/wifi-information-element.h	55;"	d
IE_MEASUREMENT_REPORT	model/wifi-information-element.h	74;"	d
IE_MEASUREMENT_REQUEST	model/wifi-information-element.h	73;"	d
IE_POWER_CAPABILITY	model/wifi-information-element.h	68;"	d
IE_POWER_CONSTRAINT	model/wifi-information-element.h	67;"	d
IE_QOS_CAPABILITY	model/wifi-information-element.h	81;"	d
IE_QUIET	model/wifi-information-element.h	75;"	d
IE_REQUEST	model/wifi-information-element.h	59;"	d
IE_RSN	model/wifi-information-element.h	83;"	d
IE_SCHEDULE	model/wifi-information-element.h	64;"	d
IE_SSID	model/wifi-information-element.h	49;"	d
IE_SUPPORTED_CHANNELS	model/wifi-information-element.h	71;"	d
IE_SUPPORTED_RATES	model/wifi-information-element.h	50;"	d
IE_TCLAS	model/wifi-information-element.h	63;"	d
IE_TCLAS_PROCESSING	model/wifi-information-element.h	79;"	d
IE_TIM	model/wifi-information-element.h	54;"	d
IE_TPC_REPORT	model/wifi-information-element.h	70;"	d
IE_TPC_REQUEST	model/wifi-information-element.h	69;"	d
IE_TSPEC	model/wifi-information-element.h	62;"	d
IE_TS_DELAY	model/wifi-information-element.h	78;"	d
IE_VENDOR_SPECIFIC	model/wifi-information-element.h	89;"	d
WIFI_INFORMATION_ELEMENT_H	model/wifi-information-element.h	22;"	d
WifiInformationElement	model/wifi-information-element.h	/^class WifiInformationElement : public SimpleRefCount<WifiInformationElement>$/;"	c	namespace:ns3
WifiInformationElementId	model/wifi-information-element.h	/^typedef uint8_t WifiInformationElementId;$/;"	t	namespace:ns3
ns3	model/wifi-information-element.h	/^namespace ns3 {$/;"	n
Deserialize	model/wifi-mac-header.cc	/^WifiMacHeader::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiMacHeader
FOO	model/wifi-mac-header.cc	904;"	d	file:
FOO	model/wifi-mac-header.cc	949;"	d	file:
GetAddr1	model/wifi-mac-header.cc	/^WifiMacHeader::GetAddr1 (void) const$/;"	f	class:ns3::WifiMacHeader
GetAddr2	model/wifi-mac-header.cc	/^WifiMacHeader::GetAddr2 (void) const$/;"	f	class:ns3::WifiMacHeader
GetAddr3	model/wifi-mac-header.cc	/^WifiMacHeader::GetAddr3 (void) const$/;"	f	class:ns3::WifiMacHeader
GetAddr4	model/wifi-mac-header.cc	/^WifiMacHeader::GetAddr4 (void) const$/;"	f	class:ns3::WifiMacHeader
GetDuration	model/wifi-mac-header.cc	/^WifiMacHeader::GetDuration (void) const$/;"	f	class:ns3::WifiMacHeader
GetFragmentNumber	model/wifi-mac-header.cc	/^WifiMacHeader::GetFragmentNumber (void) const$/;"	f	class:ns3::WifiMacHeader
GetFrameControl	model/wifi-mac-header.cc	/^WifiMacHeader::GetFrameControl (void) const$/;"	f	class:ns3::WifiMacHeader
GetInstanceTypeId	model/wifi-mac-header.cc	/^WifiMacHeader::GetInstanceTypeId (void) const$/;"	f	class:ns3::WifiMacHeader
GetQosAckPolicy	model/wifi-mac-header.cc	/^WifiMacHeader::GetQosAckPolicy (void) const$/;"	f	class:ns3::WifiMacHeader
GetQosControl	model/wifi-mac-header.cc	/^WifiMacHeader::GetQosControl (void) const$/;"	f	class:ns3::WifiMacHeader
GetQosTid	model/wifi-mac-header.cc	/^WifiMacHeader::GetQosTid (void) const$/;"	f	class:ns3::WifiMacHeader
GetQosTxopLimit	model/wifi-mac-header.cc	/^WifiMacHeader::GetQosTxopLimit (void) const$/;"	f	class:ns3::WifiMacHeader
GetRawDuration	model/wifi-mac-header.cc	/^WifiMacHeader::GetRawDuration (void) const$/;"	f	class:ns3::WifiMacHeader
GetSequenceControl	model/wifi-mac-header.cc	/^WifiMacHeader::GetSequenceControl (void) const$/;"	f	class:ns3::WifiMacHeader
GetSequenceNumber	model/wifi-mac-header.cc	/^WifiMacHeader::GetSequenceNumber (void) const$/;"	f	class:ns3::WifiMacHeader
GetSerializedSize	model/wifi-mac-header.cc	/^WifiMacHeader::GetSerializedSize (void) const$/;"	f	class:ns3::WifiMacHeader
GetSize	model/wifi-mac-header.cc	/^WifiMacHeader::GetSize (void) const$/;"	f	class:ns3::WifiMacHeader
GetType	model/wifi-mac-header.cc	/^WifiMacHeader::GetType (void) const$/;"	f	class:ns3::WifiMacHeader
GetTypeId	model/wifi-mac-header.cc	/^WifiMacHeader::GetTypeId (void)$/;"	f	class:ns3::WifiMacHeader
GetTypeString	model/wifi-mac-header.cc	/^WifiMacHeader::GetTypeString (void) const$/;"	f	class:ns3::WifiMacHeader
IsAck	model/wifi-mac-header.cc	/^WifiMacHeader::IsAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsAction	model/wifi-mac-header.cc	/^WifiMacHeader::IsAction (void) const$/;"	f	class:ns3::WifiMacHeader
IsAssocReq	model/wifi-mac-header.cc	/^WifiMacHeader::IsAssocReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsAssocResp	model/wifi-mac-header.cc	/^WifiMacHeader::IsAssocResp (void) const$/;"	f	class:ns3::WifiMacHeader
IsAuthentication	model/wifi-mac-header.cc	/^WifiMacHeader::IsAuthentication (void) const$/;"	f	class:ns3::WifiMacHeader
IsBeacon	model/wifi-mac-header.cc	/^WifiMacHeader::IsBeacon (void) const$/;"	f	class:ns3::WifiMacHeader
IsBlockAck	model/wifi-mac-header.cc	/^WifiMacHeader::IsBlockAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsBlockAckReq	model/wifi-mac-header.cc	/^WifiMacHeader::IsBlockAckReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsCfpoll	model/wifi-mac-header.cc	/^WifiMacHeader::IsCfpoll (void) const$/;"	f	class:ns3::WifiMacHeader
IsCtl	model/wifi-mac-header.cc	/^WifiMacHeader::IsCtl (void) const$/;"	f	class:ns3::WifiMacHeader
IsCts	model/wifi-mac-header.cc	/^WifiMacHeader::IsCts (void) const$/;"	f	class:ns3::WifiMacHeader
IsData	model/wifi-mac-header.cc	/^WifiMacHeader::IsData (void) const$/;"	f	class:ns3::WifiMacHeader
IsDeauthentication	model/wifi-mac-header.cc	/^WifiMacHeader::IsDeauthentication (void) const$/;"	f	class:ns3::WifiMacHeader
IsDisassociation	model/wifi-mac-header.cc	/^WifiMacHeader::IsDisassociation (void) const$/;"	f	class:ns3::WifiMacHeader
IsFromDs	model/wifi-mac-header.cc	/^WifiMacHeader::IsFromDs (void) const$/;"	f	class:ns3::WifiMacHeader
IsMgt	model/wifi-mac-header.cc	/^WifiMacHeader::IsMgt (void) const$/;"	f	class:ns3::WifiMacHeader
IsMoreFragments	model/wifi-mac-header.cc	/^WifiMacHeader::IsMoreFragments (void) const$/;"	f	class:ns3::WifiMacHeader
IsMultihopAction	model/wifi-mac-header.cc	/^WifiMacHeader::IsMultihopAction (void) const$/;"	f	class:ns3::WifiMacHeader
IsProbeReq	model/wifi-mac-header.cc	/^WifiMacHeader::IsProbeReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsProbeResp	model/wifi-mac-header.cc	/^WifiMacHeader::IsProbeResp (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosAck	model/wifi-mac-header.cc	/^WifiMacHeader::IsQosAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosAmsdu	model/wifi-mac-header.cc	/^WifiMacHeader::IsQosAmsdu (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosBlockAck	model/wifi-mac-header.cc	/^WifiMacHeader::IsQosBlockAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosData	model/wifi-mac-header.cc	/^WifiMacHeader::IsQosData (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosEosp	model/wifi-mac-header.cc	/^WifiMacHeader::IsQosEosp (void) const$/;"	f	class:ns3::WifiMacHeader
IsQosNoAck	model/wifi-mac-header.cc	/^WifiMacHeader::IsQosNoAck (void) const$/;"	f	class:ns3::WifiMacHeader
IsReassocReq	model/wifi-mac-header.cc	/^WifiMacHeader::IsReassocReq (void) const$/;"	f	class:ns3::WifiMacHeader
IsReassocResp	model/wifi-mac-header.cc	/^WifiMacHeader::IsReassocResp (void) const$/;"	f	class:ns3::WifiMacHeader
IsRetry	model/wifi-mac-header.cc	/^WifiMacHeader::IsRetry (void) const$/;"	f	class:ns3::WifiMacHeader
IsRts	model/wifi-mac-header.cc	/^WifiMacHeader::IsRts (void) const$/;"	f	class:ns3::WifiMacHeader
IsToDs	model/wifi-mac-header.cc	/^WifiMacHeader::IsToDs (void) const$/;"	f	class:ns3::WifiMacHeader
Print	model/wifi-mac-header.cc	/^WifiMacHeader::Print (std::ostream &os) const$/;"	f	class:ns3::WifiMacHeader
PrintFrameControl	model/wifi-mac-header.cc	/^WifiMacHeader::PrintFrameControl (std::ostream &os) const$/;"	f	class:ns3::WifiMacHeader
SUBTYPE_CTL_ACK	model/wifi-mac-header.cc	/^  SUBTYPE_CTL_ACK = 13,$/;"	e	enum:ns3::__anon2	file:
SUBTYPE_CTL_BACKREQ	model/wifi-mac-header.cc	/^  SUBTYPE_CTL_BACKREQ = 8,$/;"	e	enum:ns3::__anon2	file:
SUBTYPE_CTL_BACKRESP	model/wifi-mac-header.cc	/^  SUBTYPE_CTL_BACKRESP = 9,$/;"	e	enum:ns3::__anon2	file:
SUBTYPE_CTL_CTLWRAPPER	model/wifi-mac-header.cc	/^  SUBTYPE_CTL_CTLWRAPPER=7$/;"	e	enum:ns3::__anon2	file:
SUBTYPE_CTL_CTS	model/wifi-mac-header.cc	/^  SUBTYPE_CTL_CTS = 12,$/;"	e	enum:ns3::__anon2	file:
SUBTYPE_CTL_RTS	model/wifi-mac-header.cc	/^  SUBTYPE_CTL_RTS = 11,$/;"	e	enum:ns3::__anon2	file:
Serialize	model/wifi-mac-header.cc	/^WifiMacHeader::Serialize (Buffer::Iterator i) const$/;"	f	class:ns3::WifiMacHeader
SetAction	model/wifi-mac-header.cc	/^WifiMacHeader::SetAction (void)$/;"	f	class:ns3::WifiMacHeader
SetAddr1	model/wifi-mac-header.cc	/^WifiMacHeader::SetAddr1 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAddr2	model/wifi-mac-header.cc	/^WifiMacHeader::SetAddr2 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAddr3	model/wifi-mac-header.cc	/^WifiMacHeader::SetAddr3 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAddr4	model/wifi-mac-header.cc	/^WifiMacHeader::SetAddr4 (Mac48Address address)$/;"	f	class:ns3::WifiMacHeader
SetAssocReq	model/wifi-mac-header.cc	/^WifiMacHeader::SetAssocReq (void)$/;"	f	class:ns3::WifiMacHeader
SetAssocResp	model/wifi-mac-header.cc	/^WifiMacHeader::SetAssocResp (void)$/;"	f	class:ns3::WifiMacHeader
SetBeacon	model/wifi-mac-header.cc	/^WifiMacHeader::SetBeacon (void)$/;"	f	class:ns3::WifiMacHeader
SetBlockAck	model/wifi-mac-header.cc	/^WifiMacHeader::SetBlockAck (void)$/;"	f	class:ns3::WifiMacHeader
SetBlockAckReq	model/wifi-mac-header.cc	/^WifiMacHeader::SetBlockAckReq (void)$/;"	f	class:ns3::WifiMacHeader
SetDsFrom	model/wifi-mac-header.cc	/^WifiMacHeader::SetDsFrom (void)$/;"	f	class:ns3::WifiMacHeader
SetDsNotFrom	model/wifi-mac-header.cc	/^WifiMacHeader::SetDsNotFrom (void)$/;"	f	class:ns3::WifiMacHeader
SetDsNotTo	model/wifi-mac-header.cc	/^WifiMacHeader::SetDsNotTo (void)$/;"	f	class:ns3::WifiMacHeader
SetDsTo	model/wifi-mac-header.cc	/^WifiMacHeader::SetDsTo (void)$/;"	f	class:ns3::WifiMacHeader
SetDuration	model/wifi-mac-header.cc	/^WifiMacHeader::SetDuration (Time duration)$/;"	f	class:ns3::WifiMacHeader
SetFragmentNumber	model/wifi-mac-header.cc	/^void WifiMacHeader::SetFragmentNumber (uint8_t frag)$/;"	f	class:ns3::WifiMacHeader
SetFrameControl	model/wifi-mac-header.cc	/^WifiMacHeader::SetFrameControl (uint16_t ctrl)$/;"	f	class:ns3::WifiMacHeader
SetId	model/wifi-mac-header.cc	/^void WifiMacHeader::SetId (uint16_t id)$/;"	f	class:ns3::WifiMacHeader
SetMoreFragments	model/wifi-mac-header.cc	/^void WifiMacHeader::SetMoreFragments (void)$/;"	f	class:ns3::WifiMacHeader
SetMultihopAction	model/wifi-mac-header.cc	/^WifiMacHeader::SetMultihopAction (void)$/;"	f	class:ns3::WifiMacHeader
SetNoMoreFragments	model/wifi-mac-header.cc	/^void WifiMacHeader::SetNoMoreFragments (void)$/;"	f	class:ns3::WifiMacHeader
SetNoOrder	model/wifi-mac-header.cc	/^void WifiMacHeader::SetNoOrder (void)$/;"	f	class:ns3::WifiMacHeader
SetNoRetry	model/wifi-mac-header.cc	/^void WifiMacHeader::SetNoRetry (void)$/;"	f	class:ns3::WifiMacHeader
SetOrder	model/wifi-mac-header.cc	/^void WifiMacHeader::SetOrder (void)$/;"	f	class:ns3::WifiMacHeader
SetProbeReq	model/wifi-mac-header.cc	/^WifiMacHeader::SetProbeReq (void)$/;"	f	class:ns3::WifiMacHeader
SetProbeResp	model/wifi-mac-header.cc	/^WifiMacHeader::SetProbeResp (void)$/;"	f	class:ns3::WifiMacHeader
SetQosAckPolicy	model/wifi-mac-header.cc	/^void WifiMacHeader::SetQosAckPolicy (enum QosAckPolicy policy)$/;"	f	class:ns3::WifiMacHeader
SetQosAmsdu	model/wifi-mac-header.cc	/^void WifiMacHeader::SetQosAmsdu (void)$/;"	f	class:ns3::WifiMacHeader
SetQosBlockAck	model/wifi-mac-header.cc	/^WifiMacHeader::SetQosBlockAck ()$/;"	f	class:ns3::WifiMacHeader
SetQosControl	model/wifi-mac-header.cc	/^WifiMacHeader::SetQosControl (uint16_t qos)$/;"	f	class:ns3::WifiMacHeader
SetQosEosp	model/wifi-mac-header.cc	/^void WifiMacHeader::SetQosEosp ()$/;"	f	class:ns3::WifiMacHeader
SetQosNoAck	model/wifi-mac-header.cc	/^WifiMacHeader::SetQosNoAck ()$/;"	f	class:ns3::WifiMacHeader
SetQosNoAmsdu	model/wifi-mac-header.cc	/^void WifiMacHeader::SetQosNoAmsdu (void)$/;"	f	class:ns3::WifiMacHeader
SetQosNoEosp	model/wifi-mac-header.cc	/^void WifiMacHeader::SetQosNoEosp ()$/;"	f	class:ns3::WifiMacHeader
SetQosNormalAck	model/wifi-mac-header.cc	/^WifiMacHeader::SetQosNormalAck ()$/;"	f	class:ns3::WifiMacHeader
SetQosTid	model/wifi-mac-header.cc	/^void WifiMacHeader::SetQosTid (uint8_t tid)$/;"	f	class:ns3::WifiMacHeader
SetQosTxopLimit	model/wifi-mac-header.cc	/^void WifiMacHeader::SetQosTxopLimit (uint8_t txop)$/;"	f	class:ns3::WifiMacHeader
SetRawDuration	model/wifi-mac-header.cc	/^WifiMacHeader::SetRawDuration (uint16_t duration)$/;"	f	class:ns3::WifiMacHeader
SetRetry	model/wifi-mac-header.cc	/^void WifiMacHeader::SetRetry (void)$/;"	f	class:ns3::WifiMacHeader
SetSequenceControl	model/wifi-mac-header.cc	/^WifiMacHeader::SetSequenceControl (uint16_t seq)$/;"	f	class:ns3::WifiMacHeader
SetSequenceNumber	model/wifi-mac-header.cc	/^void WifiMacHeader::SetSequenceNumber (uint16_t seq)$/;"	f	class:ns3::WifiMacHeader
SetType	model/wifi-mac-header.cc	/^WifiMacHeader::SetType (enum WifiMacType type)$/;"	f	class:ns3::WifiMacHeader
SetTypeData	model/wifi-mac-header.cc	/^WifiMacHeader::SetTypeData (void)$/;"	f	class:ns3::WifiMacHeader
TYPE_CTL	model/wifi-mac-header.cc	/^  TYPE_CTL  = 1,$/;"	e	enum:ns3::__anon1	file:
TYPE_DATA	model/wifi-mac-header.cc	/^  TYPE_DATA = 2$/;"	e	enum:ns3::__anon1	file:
TYPE_MGT	model/wifi-mac-header.cc	/^  TYPE_MGT = 0,$/;"	e	enum:ns3::__anon1	file:
WifiMacHeader	model/wifi-mac-header.cc	/^WifiMacHeader::WifiMacHeader ()$/;"	f	class:ns3::WifiMacHeader
ns3	model/wifi-mac-header.cc	/^namespace ns3 {$/;"	n	file:
~WifiMacHeader	model/wifi-mac-header.cc	/^WifiMacHeader::~WifiMacHeader ()$/;"	f	class:ns3::WifiMacHeader
ADDR1	model/wifi-mac-header.h	/^    ADDR1,$/;"	e	enum:ns3::WifiMacHeader::AddressType
ADDR2	model/wifi-mac-header.h	/^    ADDR2,$/;"	e	enum:ns3::WifiMacHeader::AddressType
ADDR3	model/wifi-mac-header.h	/^    ADDR3,$/;"	e	enum:ns3::WifiMacHeader::AddressType
ADDR4	model/wifi-mac-header.h	/^    ADDR4$/;"	e	enum:ns3::WifiMacHeader::AddressType
AddressType	model/wifi-mac-header.h	/^  enum AddressType$/;"	g	class:ns3::WifiMacHeader
BLOCK_ACK	model/wifi-mac-header.h	/^    BLOCK_ACK = 3,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
NORMAL_ACK	model/wifi-mac-header.h	/^    NORMAL_ACK = 0,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
NO_ACK	model/wifi-mac-header.h	/^    NO_ACK = 1,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
NO_EXPLICIT_ACK	model/wifi-mac-header.h	/^    NO_EXPLICIT_ACK = 2,$/;"	e	enum:ns3::WifiMacHeader::QosAckPolicy
QosAckPolicy	model/wifi-mac-header.h	/^  enum QosAckPolicy$/;"	g	class:ns3::WifiMacHeader
TracedCallback	model/wifi-mac-header.h	/^  typedef void (* TracedCallback)(const WifiMacHeader &header);$/;"	t	class:ns3::WifiMacHeader
WIFI_MAC_CTL_ACK	model/wifi-mac-header.h	/^  WIFI_MAC_CTL_ACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_BACKREQ	model/wifi-mac-header.h	/^  WIFI_MAC_CTL_BACKREQ,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_BACKRESP	model/wifi-mac-header.h	/^  WIFI_MAC_CTL_BACKRESP,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_CTLWRAPPER	model/wifi-mac-header.h	/^  WIFI_MAC_CTL_CTLWRAPPER,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_CTS	model/wifi-mac-header.h	/^  WIFI_MAC_CTL_CTS,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_CTL_RTS	model/wifi-mac-header.h	/^  WIFI_MAC_CTL_RTS = 0,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA	model/wifi-mac-header.h	/^  WIFI_MAC_DATA,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_CFACK	model/wifi-mac-header.h	/^  WIFI_MAC_DATA_CFACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_CFACK_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_DATA_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_DATA_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL	model/wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL_CFACK	model/wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL_CFACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL_CFACK_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_DATA_NULL_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_DATA_NULL_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_HEADER_H	model/wifi-mac-header.h	23;"	d
WIFI_MAC_MGT_ACTION	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_ACTION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_ACTION_NO_ACK	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_ACTION_NO_ACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_ASSOCIATION_REQUEST	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_ASSOCIATION_REQUEST,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_ASSOCIATION_RESPONSE	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_ASSOCIATION_RESPONSE,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_AUTHENTICATION	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_AUTHENTICATION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_BEACON	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_BEACON,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_DEAUTHENTICATION	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_DEAUTHENTICATION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_DISASSOCIATION	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_DISASSOCIATION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_MULTIHOP_ACTION	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_MULTIHOP_ACTION,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_PROBE_REQUEST	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_PROBE_REQUEST,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_PROBE_RESPONSE	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_PROBE_RESPONSE,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_REASSOCIATION_REQUEST	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_REASSOCIATION_REQUEST,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_MGT_REASSOCIATION_RESPONSE	model/wifi-mac-header.h	/^  WIFI_MAC_MGT_REASSOCIATION_RESPONSE,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA	model/wifi-mac-header.h	/^  WIFI_MAC_QOSDATA,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_CFACK	model/wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_CFACK,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_CFACK_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_NULL	model/wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_NULL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_NULL_CFACK_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_NULL_CFACK_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WIFI_MAC_QOSDATA_NULL_CFPOLL	model/wifi-mac-header.h	/^  WIFI_MAC_QOSDATA_NULL_CFPOLL,$/;"	e	enum:ns3::WifiMacType
WifiMacHeader	model/wifi-mac-header.h	/^class WifiMacHeader : public Header$/;"	c	namespace:ns3
WifiMacType	model/wifi-mac-header.h	/^enum WifiMacType$/;"	g	namespace:ns3
m_addr1	model/wifi-mac-header.h	/^  Mac48Address m_addr1;$/;"	m	class:ns3::WifiMacHeader
m_addr2	model/wifi-mac-header.h	/^  Mac48Address m_addr2;$/;"	m	class:ns3::WifiMacHeader
m_addr3	model/wifi-mac-header.h	/^  Mac48Address m_addr3;$/;"	m	class:ns3::WifiMacHeader
m_addr4	model/wifi-mac-header.h	/^  Mac48Address m_addr4;$/;"	m	class:ns3::WifiMacHeader
m_amsduPresent	model/wifi-mac-header.h	/^  uint8_t m_amsduPresent;$/;"	m	class:ns3::WifiMacHeader
m_ctrlFromDs	model/wifi-mac-header.h	/^  uint8_t m_ctrlFromDs;$/;"	m	class:ns3::WifiMacHeader
m_ctrlMoreData	model/wifi-mac-header.h	/^  uint8_t m_ctrlMoreData;$/;"	m	class:ns3::WifiMacHeader
m_ctrlMoreFrag	model/wifi-mac-header.h	/^  uint8_t m_ctrlMoreFrag;$/;"	m	class:ns3::WifiMacHeader
m_ctrlOrder	model/wifi-mac-header.h	/^  uint8_t m_ctrlOrder;$/;"	m	class:ns3::WifiMacHeader
m_ctrlRetry	model/wifi-mac-header.h	/^  uint8_t m_ctrlRetry;$/;"	m	class:ns3::WifiMacHeader
m_ctrlSubtype	model/wifi-mac-header.h	/^  uint8_t m_ctrlSubtype;$/;"	m	class:ns3::WifiMacHeader
m_ctrlToDs	model/wifi-mac-header.h	/^  uint8_t m_ctrlToDs;$/;"	m	class:ns3::WifiMacHeader
m_ctrlType	model/wifi-mac-header.h	/^  uint8_t m_ctrlType;$/;"	m	class:ns3::WifiMacHeader
m_ctrlWep	model/wifi-mac-header.h	/^  uint8_t m_ctrlWep;$/;"	m	class:ns3::WifiMacHeader
m_duration	model/wifi-mac-header.h	/^  uint16_t m_duration;$/;"	m	class:ns3::WifiMacHeader
m_qosAckPolicy	model/wifi-mac-header.h	/^  uint8_t m_qosAckPolicy;$/;"	m	class:ns3::WifiMacHeader
m_qosEosp	model/wifi-mac-header.h	/^  uint8_t m_qosEosp;$/;"	m	class:ns3::WifiMacHeader
m_qosStuff	model/wifi-mac-header.h	/^  uint16_t m_qosStuff;$/;"	m	class:ns3::WifiMacHeader
m_qosTid	model/wifi-mac-header.h	/^  uint8_t m_qosTid;$/;"	m	class:ns3::WifiMacHeader
m_seqFrag	model/wifi-mac-header.h	/^  uint8_t m_seqFrag;$/;"	m	class:ns3::WifiMacHeader
m_seqSeq	model/wifi-mac-header.h	/^  uint16_t m_seqSeq;$/;"	m	class:ns3::WifiMacHeader
ns3	model/wifi-mac-header.h	/^namespace ns3 {$/;"	n
Cleanup	model/wifi-mac-queue.cc	/^WifiMacQueue::Cleanup (void)$/;"	f	class:ns3::WifiMacQueue
Dequeue	model/wifi-mac-queue.cc	/^WifiMacQueue::Dequeue (WifiMacHeader *hdr)$/;"	f	class:ns3::WifiMacQueue
DequeueByTidAndAddress	model/wifi-mac-queue.cc	/^WifiMacQueue::DequeueByTidAndAddress (WifiMacHeader *hdr, uint8_t tid,$/;"	f	class:ns3::WifiMacQueue
DequeueFirstAvailable	model/wifi-mac-queue.cc	/^WifiMacQueue::DequeueFirstAvailable (WifiMacHeader *hdr, Time &timestamp,$/;"	f	class:ns3::WifiMacQueue
Enqueue	model/wifi-mac-queue.cc	/^WifiMacQueue::Enqueue (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::WifiMacQueue
Flush	model/wifi-mac-queue.cc	/^WifiMacQueue::Flush (void)$/;"	f	class:ns3::WifiMacQueue
GetAddressForPacket	model/wifi-mac-queue.cc	/^WifiMacQueue::GetAddressForPacket (enum WifiMacHeader::AddressType type, PacketQueueI it)$/;"	f	class:ns3::WifiMacQueue
GetMaxDelay	model/wifi-mac-queue.cc	/^WifiMacQueue::GetMaxDelay (void) const$/;"	f	class:ns3::WifiMacQueue
GetMaxSize	model/wifi-mac-queue.cc	/^WifiMacQueue::GetMaxSize (void) const$/;"	f	class:ns3::WifiMacQueue
GetNPacketsByTidAndAddress	model/wifi-mac-queue.cc	/^WifiMacQueue::GetNPacketsByTidAndAddress (uint8_t tid, WifiMacHeader::AddressType type,$/;"	f	class:ns3::WifiMacQueue
GetSize	model/wifi-mac-queue.cc	/^WifiMacQueue::GetSize (void)$/;"	f	class:ns3::WifiMacQueue
GetTypeId	model/wifi-mac-queue.cc	/^WifiMacQueue::GetTypeId (void)$/;"	f	class:ns3::WifiMacQueue
IsEmpty	model/wifi-mac-queue.cc	/^WifiMacQueue::IsEmpty (void)$/;"	f	class:ns3::WifiMacQueue
Item	model/wifi-mac-queue.cc	/^WifiMacQueue::Item::Item (Ptr<const Packet> packet,$/;"	f	class:ns3::WifiMacQueue::Item
Peek	model/wifi-mac-queue.cc	/^WifiMacQueue::Peek (WifiMacHeader *hdr)$/;"	f	class:ns3::WifiMacQueue
PeekByTidAndAddress	model/wifi-mac-queue.cc	/^WifiMacQueue::PeekByTidAndAddress (WifiMacHeader *hdr, uint8_t tid,$/;"	f	class:ns3::WifiMacQueue
PeekFirstAvailable	model/wifi-mac-queue.cc	/^WifiMacQueue::PeekFirstAvailable (WifiMacHeader *hdr, Time &timestamp,$/;"	f	class:ns3::WifiMacQueue
PushFront	model/wifi-mac-queue.cc	/^WifiMacQueue::PushFront (Ptr<const Packet> packet, const WifiMacHeader &hdr)$/;"	f	class:ns3::WifiMacQueue
Remove	model/wifi-mac-queue.cc	/^WifiMacQueue::Remove (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMacQueue
SetMaxDelay	model/wifi-mac-queue.cc	/^WifiMacQueue::SetMaxDelay (Time delay)$/;"	f	class:ns3::WifiMacQueue
SetMaxSize	model/wifi-mac-queue.cc	/^WifiMacQueue::SetMaxSize (uint32_t maxSize)$/;"	f	class:ns3::WifiMacQueue
WifiMacQueue	model/wifi-mac-queue.cc	/^WifiMacQueue::WifiMacQueue ()$/;"	f	class:ns3::WifiMacQueue
ns3	model/wifi-mac-queue.cc	/^namespace ns3 {$/;"	n	file:
~WifiMacQueue	model/wifi-mac-queue.cc	/^WifiMacQueue::~WifiMacQueue ()$/;"	f	class:ns3::WifiMacQueue
Item	model/wifi-mac-queue.h	/^  struct Item$/;"	s	class:ns3::WifiMacQueue
PacketQueue	model/wifi-mac-queue.h	/^  typedef std::list<struct Item> PacketQueue;$/;"	t	class:ns3::WifiMacQueue
PacketQueueI	model/wifi-mac-queue.h	/^  typedef std::list<struct Item>::iterator PacketQueueI;$/;"	t	class:ns3::WifiMacQueue
PacketQueueRI	model/wifi-mac-queue.h	/^  typedef std::list<struct Item>::reverse_iterator PacketQueueRI;$/;"	t	class:ns3::WifiMacQueue
WIFI_MAC_QUEUE_H	model/wifi-mac-queue.h	23;"	d
WifiMacQueue	model/wifi-mac-queue.h	/^class WifiMacQueue : public Object$/;"	c	namespace:ns3
hdr	model/wifi-mac-queue.h	/^    WifiMacHeader hdr; \/\/!< Wifi MAC header associated with the packet$/;"	m	struct:ns3::WifiMacQueue::Item
m_maxDelay	model/wifi-mac-queue.h	/^  Time m_maxDelay; \/\/!< Time to live for packets in the queue$/;"	m	class:ns3::WifiMacQueue
m_maxSize	model/wifi-mac-queue.h	/^  uint32_t m_maxSize; \/\/!< Queue capacity$/;"	m	class:ns3::WifiMacQueue
m_queue	model/wifi-mac-queue.h	/^  PacketQueue m_queue; \/\/!< Packet (struct Item) queue$/;"	m	class:ns3::WifiMacQueue
m_size	model/wifi-mac-queue.h	/^  uint32_t m_size; \/\/!< Current queue size$/;"	m	class:ns3::WifiMacQueue
ns3	model/wifi-mac-queue.h	/^namespace ns3 {$/;"	n
packet	model/wifi-mac-queue.h	/^    Ptr<const Packet> packet; \/\/!< Actual packet$/;"	m	struct:ns3::WifiMacQueue::Item
tstamp	model/wifi-mac-queue.h	/^    Time tstamp; \/\/!< timestamp when the packet arrived at the queue$/;"	m	struct:ns3::WifiMacQueue::Item
Deserialize	model/wifi-mac-trailer.cc	/^WifiMacTrailer::Deserialize (Buffer::Iterator start)$/;"	f	class:ns3::WifiMacTrailer
GetInstanceTypeId	model/wifi-mac-trailer.cc	/^WifiMacTrailer::GetInstanceTypeId (void) const$/;"	f	class:ns3::WifiMacTrailer
GetSerializedSize	model/wifi-mac-trailer.cc	/^WifiMacTrailer::GetSerializedSize (void) const$/;"	f	class:ns3::WifiMacTrailer
GetTypeId	model/wifi-mac-trailer.cc	/^WifiMacTrailer::GetTypeId (void)$/;"	f	class:ns3::WifiMacTrailer
Print	model/wifi-mac-trailer.cc	/^WifiMacTrailer::Print (std::ostream &os) const$/;"	f	class:ns3::WifiMacTrailer
Serialize	model/wifi-mac-trailer.cc	/^WifiMacTrailer::Serialize (Buffer::Iterator start) const$/;"	f	class:ns3::WifiMacTrailer
WifiMacTrailer	model/wifi-mac-trailer.cc	/^WifiMacTrailer::WifiMacTrailer ()$/;"	f	class:ns3::WifiMacTrailer
ns3	model/wifi-mac-trailer.cc	/^namespace ns3 {$/;"	n	file:
~WifiMacTrailer	model/wifi-mac-trailer.cc	/^WifiMacTrailer::~WifiMacTrailer ()$/;"	f	class:ns3::WifiMacTrailer
WIFI_MAC_FCS_LENGTH	model/wifi-mac-trailer.h	/^static const uint16_t WIFI_MAC_FCS_LENGTH = 4;$/;"	m	namespace:ns3
WIFI_MAC_TRAILER_H	model/wifi-mac-trailer.h	21;"	d
WifiMacTrailer	model/wifi-mac-trailer.h	/^class WifiMacTrailer : public Trailer$/;"	c	namespace:ns3
ns3	model/wifi-mac-trailer.h	/^namespace ns3 {$/;"	n
Configure80211_10Mhz	model/wifi-mac.cc	/^WifiMac::Configure80211_10Mhz (void)$/;"	f	class:ns3::WifiMac
Configure80211_5Mhz	model/wifi-mac.cc	/^WifiMac::Configure80211_5Mhz (void)$/;"	f	class:ns3::WifiMac
Configure80211a	model/wifi-mac.cc	/^WifiMac::Configure80211a (void)$/;"	f	class:ns3::WifiMac
Configure80211b	model/wifi-mac.cc	/^WifiMac::Configure80211b (void)$/;"	f	class:ns3::WifiMac
Configure80211g	model/wifi-mac.cc	/^WifiMac::Configure80211g (void)$/;"	f	class:ns3::WifiMac
Configure80211n_2_4Ghz	model/wifi-mac.cc	/^WifiMac::Configure80211n_2_4Ghz (void)$/;"	f	class:ns3::WifiMac
Configure80211n_5Ghz	model/wifi-mac.cc	/^WifiMac::Configure80211n_5Ghz (void)$/;"	f	class:ns3::WifiMac
ConfigureDcf	model/wifi-mac.cc	/^WifiMac::ConfigureDcf (Ptr<Dcf> dcf, uint32_t cwmin, uint32_t cwmax, enum AcIndex ac)$/;"	f	class:ns3::WifiMac
ConfigureStandard	model/wifi-mac.cc	/^WifiMac::ConfigureStandard (enum WifiPhyStandard standard)$/;"	f	class:ns3::WifiMac
GetBasicBlockAckTimeout	model/wifi-mac.cc	/^WifiMac::GetBasicBlockAckTimeout (void) const$/;"	f	class:ns3::WifiMac
GetCompressedBlockAckTimeout	model/wifi-mac.cc	/^WifiMac::GetCompressedBlockAckTimeout (void) const$/;"	f	class:ns3::WifiMac
GetDefaultBasicBlockAckDelay	model/wifi-mac.cc	/^WifiMac::GetDefaultBasicBlockAckDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultBasicBlockAckTimeout	model/wifi-mac.cc	/^WifiMac::GetDefaultBasicBlockAckTimeout (void)$/;"	f	class:ns3::WifiMac
GetDefaultCompressedBlockAckDelay	model/wifi-mac.cc	/^WifiMac::GetDefaultCompressedBlockAckDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultCompressedBlockAckTimeout	model/wifi-mac.cc	/^WifiMac::GetDefaultCompressedBlockAckTimeout (void)$/;"	f	class:ns3::WifiMac
GetDefaultCtsAckDelay	model/wifi-mac.cc	/^WifiMac::GetDefaultCtsAckDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultCtsAckTimeout	model/wifi-mac.cc	/^WifiMac::GetDefaultCtsAckTimeout (void)$/;"	f	class:ns3::WifiMac
GetDefaultEifsNoDifs	model/wifi-mac.cc	/^WifiMac::GetDefaultEifsNoDifs (void)$/;"	f	class:ns3::WifiMac
GetDefaultMaxPropagationDelay	model/wifi-mac.cc	/^WifiMac::GetDefaultMaxPropagationDelay (void)$/;"	f	class:ns3::WifiMac
GetDefaultRifs	model/wifi-mac.cc	/^WifiMac::GetDefaultRifs (void)$/;"	f	class:ns3::WifiMac
GetDefaultSifs	model/wifi-mac.cc	/^WifiMac::GetDefaultSifs (void)$/;"	f	class:ns3::WifiMac
GetDefaultSlot	model/wifi-mac.cc	/^WifiMac::GetDefaultSlot (void)$/;"	f	class:ns3::WifiMac
GetMaxPropagationDelay	model/wifi-mac.cc	/^WifiMac::GetMaxPropagationDelay (void) const$/;"	f	class:ns3::WifiMac
GetMsduLifetime	model/wifi-mac.cc	/^WifiMac::GetMsduLifetime (void) const$/;"	f	class:ns3::WifiMac
GetTypeId	model/wifi-mac.cc	/^WifiMac::GetTypeId (void)$/;"	f	class:ns3::WifiMac
NotifyPromiscRx	model/wifi-mac.cc	/^WifiMac::NotifyPromiscRx (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyRx	model/wifi-mac.cc	/^WifiMac::NotifyRx (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyRxDrop	model/wifi-mac.cc	/^WifiMac::NotifyRxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyTx	model/wifi-mac.cc	/^WifiMac::NotifyTx (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
NotifyTxDrop	model/wifi-mac.cc	/^WifiMac::NotifyTxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiMac
SetBasicBlockAckTimeout	model/wifi-mac.cc	/^WifiMac::SetBasicBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::WifiMac
SetCompressedBlockAckTimeout	model/wifi-mac.cc	/^WifiMac::SetCompressedBlockAckTimeout (Time blockAckTimeout)$/;"	f	class:ns3::WifiMac
SetMaxPropagationDelay	model/wifi-mac.cc	/^WifiMac::SetMaxPropagationDelay (Time delay)$/;"	f	class:ns3::WifiMac
ns3	model/wifi-mac.cc	/^namespace ns3 {$/;"	n	file:
WIFI_MAC_H	model/wifi-mac.h	21;"	d
WifiMac	model/wifi-mac.h	/^class WifiMac : public Object$/;"	c	namespace:ns3
m_macPromiscRxTrace	model/wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macPromiscRxTrace;$/;"	m	class:ns3::WifiMac
m_macRxDropTrace	model/wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macRxDropTrace;$/;"	m	class:ns3::WifiMac
m_macRxTrace	model/wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macRxTrace;$/;"	m	class:ns3::WifiMac
m_macTxDropTrace	model/wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macTxDropTrace;$/;"	m	class:ns3::WifiMac
m_macTxTrace	model/wifi-mac.h	/^  TracedCallback<Ptr<const Packet> > m_macTxTrace;$/;"	m	class:ns3::WifiMac
m_maxPropagationDelay	model/wifi-mac.h	/^  Time m_maxPropagationDelay;$/;"	m	class:ns3::WifiMac
ns3	model/wifi-mac.h	/^namespace ns3 {$/;"	n
AllocateUid	model/wifi-mode.cc	/^WifiModeFactory::AllocateUid (std::string uniqueUid)$/;"	f	class:ns3::WifiModeFactory
CreateWifiMode	model/wifi-mode.cc	/^WifiModeFactory::CreateWifiMode (std::string uniqueName,$/;"	f	class:ns3::WifiModeFactory
Get	model/wifi-mode.cc	/^WifiModeFactory::Get (uint32_t uid)$/;"	f	class:ns3::WifiModeFactory
GetBandwidth	model/wifi-mode.cc	/^WifiMode::GetBandwidth (void) const$/;"	f	class:ns3::WifiMode
GetCodeRate	model/wifi-mode.cc	/^WifiMode::GetCodeRate (void) const$/;"	f	class:ns3::WifiMode
GetConstellationSize	model/wifi-mode.cc	/^WifiMode::GetConstellationSize (void) const$/;"	f	class:ns3::WifiMode
GetDataRate	model/wifi-mode.cc	/^WifiMode::GetDataRate (void) const$/;"	f	class:ns3::WifiMode
GetFactory	model/wifi-mode.cc	/^WifiModeFactory::GetFactory (void)$/;"	f	class:ns3::WifiModeFactory
GetModulationClass	model/wifi-mode.cc	/^WifiMode::GetModulationClass () const$/;"	f	class:ns3::WifiMode
GetPhyRate	model/wifi-mode.cc	/^WifiMode::GetPhyRate (void) const$/;"	f	class:ns3::WifiMode
GetUid	model/wifi-mode.cc	/^WifiMode::GetUid (void) const$/;"	f	class:ns3::WifiMode
GetUniqueName	model/wifi-mode.cc	/^WifiMode::GetUniqueName (void) const$/;"	f	class:ns3::WifiMode
IsMandatory	model/wifi-mode.cc	/^WifiMode::IsMandatory (void) const$/;"	f	class:ns3::WifiMode
Search	model/wifi-mode.cc	/^WifiModeFactory::Search (std::string name)$/;"	f	class:ns3::WifiModeFactory
WifiMode	model/wifi-mode.cc	/^WifiMode::WifiMode ()$/;"	f	class:ns3::WifiMode
WifiMode	model/wifi-mode.cc	/^WifiMode::WifiMode (std::string name)$/;"	f	class:ns3::WifiMode
WifiMode	model/wifi-mode.cc	/^WifiMode::WifiMode (uint32_t uid)$/;"	f	class:ns3::WifiMode
WifiModeFactory	model/wifi-mode.cc	/^WifiModeFactory::WifiModeFactory ()$/;"	f	class:ns3::WifiModeFactory
ns3	model/wifi-mode.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/wifi-mode.cc	/^std::ostream & operator << (std::ostream & os, const WifiMode &mode)$/;"	f	namespace:ns3
operator ==	model/wifi-mode.cc	/^bool operator == (const WifiMode &a, const WifiMode &b)$/;"	f	namespace:ns3
operator >>	model/wifi-mode.cc	/^std::istream & operator >> (std::istream &is, WifiMode &mode)$/;"	f	namespace:ns3
WIFI_CODE_RATE_1_2	model/wifi-mode.h	/^  WIFI_CODE_RATE_1_2,$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_2_3	model/wifi-mode.h	/^  WIFI_CODE_RATE_2_3,$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_3_4	model/wifi-mode.h	/^  WIFI_CODE_RATE_3_4,$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_5_6	model/wifi-mode.h	/^ WIFI_CODE_RATE_5_6$/;"	e	enum:ns3::WifiCodeRate
WIFI_CODE_RATE_UNDEFINED	model/wifi-mode.h	/^  WIFI_CODE_RATE_UNDEFINED,$/;"	e	enum:ns3::WifiCodeRate
WIFI_MODE_H	model/wifi-mode.h	21;"	d
WIFI_MOD_CLASS_DSSS	model/wifi-mode.h	/^  WIFI_MOD_CLASS_DSSS,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_DSSS_OFDM	model/wifi-mode.h	/^  WIFI_MOD_CLASS_DSSS_OFDM,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_ERP_OFDM	model/wifi-mode.h	/^  WIFI_MOD_CLASS_ERP_OFDM,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_ERP_PBCC	model/wifi-mode.h	/^  WIFI_MOD_CLASS_ERP_PBCC,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_FHSS	model/wifi-mode.h	/^  WIFI_MOD_CLASS_FHSS,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_HT	model/wifi-mode.h	/^  WIFI_MOD_CLASS_HT$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_IR	model/wifi-mode.h	/^  WIFI_MOD_CLASS_IR,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_OFDM	model/wifi-mode.h	/^  WIFI_MOD_CLASS_OFDM,$/;"	e	enum:ns3::WifiModulationClass
WIFI_MOD_CLASS_UNKNOWN	model/wifi-mode.h	/^  WIFI_MOD_CLASS_UNKNOWN = 0,$/;"	e	enum:ns3::WifiModulationClass
WifiCodeRate	model/wifi-mode.h	/^enum WifiCodeRate$/;"	g	namespace:ns3
WifiMcsList	model/wifi-mode.h	/^typedef std::vector<uint8_t> WifiMcsList;$/;"	t	namespace:ns3
WifiMcsListIterator	model/wifi-mode.h	/^typedef WifiMcsList::const_iterator WifiMcsListIterator;$/;"	t	namespace:ns3
WifiMode	model/wifi-mode.h	/^class WifiMode$/;"	c	namespace:ns3
WifiModeFactory	model/wifi-mode.h	/^class WifiModeFactory$/;"	c	namespace:ns3
WifiModeItem	model/wifi-mode.h	/^  struct WifiModeItem$/;"	s	class:ns3::WifiModeFactory
WifiModeItemList	model/wifi-mode.h	/^  typedef std::vector<struct WifiModeItem> WifiModeItemList;$/;"	t	class:ns3::WifiModeFactory
WifiModeList	model/wifi-mode.h	/^typedef std::vector<WifiMode> WifiModeList;$/;"	t	namespace:ns3
WifiModeListIterator	model/wifi-mode.h	/^typedef WifiModeList::const_iterator WifiModeListIterator;$/;"	t	namespace:ns3
WifiModulationClass	model/wifi-mode.h	/^enum WifiModulationClass$/;"	g	namespace:ns3
bandwidth	model/wifi-mode.h	/^    uint32_t bandwidth;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
codingRate	model/wifi-mode.h	/^    enum WifiCodeRate codingRate;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem	typeref:enum:ns3::WifiModeFactory::WifiModeItem::WifiCodeRate
constellationSize	model/wifi-mode.h	/^    uint8_t constellationSize;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
dataRate	model/wifi-mode.h	/^    uint32_t dataRate;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
isMandatory	model/wifi-mode.h	/^    bool isMandatory;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
m_itemList	model/wifi-mode.h	/^  WifiModeItemList m_itemList;$/;"	m	class:ns3::WifiModeFactory
m_uid	model/wifi-mode.h	/^  uint32_t m_uid;$/;"	m	class:ns3::WifiMode
modClass	model/wifi-mode.h	/^    enum WifiModulationClass modClass;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem	typeref:enum:ns3::WifiModeFactory::WifiModeItem::WifiModulationClass
ns3	model/wifi-mode.h	/^namespace ns3 {$/;"	n
phyRate	model/wifi-mode.h	/^    uint32_t phyRate;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
uniqueUid	model/wifi-mode.h	/^    std::string uniqueUid;$/;"	m	struct:ns3::WifiModeFactory::WifiModeItem
AddLinkChangeCallback	model/wifi-net-device.cc	/^WifiNetDevice::AddLinkChangeCallback (Callback<void> callback)$/;"	f	class:ns3::WifiNetDevice
CompleteConfig	model/wifi-net-device.cc	/^WifiNetDevice::CompleteConfig (void)$/;"	f	class:ns3::WifiNetDevice
DoDispose	model/wifi-net-device.cc	/^WifiNetDevice::DoDispose (void)$/;"	f	class:ns3::WifiNetDevice
DoGetChannel	model/wifi-net-device.cc	/^WifiNetDevice::DoGetChannel (void) const$/;"	f	class:ns3::WifiNetDevice
DoInitialize	model/wifi-net-device.cc	/^WifiNetDevice::DoInitialize (void)$/;"	f	class:ns3::WifiNetDevice
ForwardUp	model/wifi-net-device.cc	/^WifiNetDevice::ForwardUp (Ptr<Packet> packet, Mac48Address from, Mac48Address to)$/;"	f	class:ns3::WifiNetDevice
GetAddress	model/wifi-net-device.cc	/^WifiNetDevice::GetAddress (void) const$/;"	f	class:ns3::WifiNetDevice
GetBroadcast	model/wifi-net-device.cc	/^WifiNetDevice::GetBroadcast (void) const$/;"	f	class:ns3::WifiNetDevice
GetChannel	model/wifi-net-device.cc	/^WifiNetDevice::GetChannel (void) const$/;"	f	class:ns3::WifiNetDevice
GetIfIndex	model/wifi-net-device.cc	/^WifiNetDevice::GetIfIndex (void) const$/;"	f	class:ns3::WifiNetDevice
GetMac	model/wifi-net-device.cc	/^WifiNetDevice::GetMac (void) const$/;"	f	class:ns3::WifiNetDevice
GetMtu	model/wifi-net-device.cc	/^WifiNetDevice::GetMtu (void) const$/;"	f	class:ns3::WifiNetDevice
GetMulticast	model/wifi-net-device.cc	/^Address WifiNetDevice::GetMulticast (Ipv6Address addr) const$/;"	f	class:ns3::WifiNetDevice
GetMulticast	model/wifi-net-device.cc	/^WifiNetDevice::GetMulticast (Ipv4Address multicastGroup) const$/;"	f	class:ns3::WifiNetDevice
GetNode	model/wifi-net-device.cc	/^WifiNetDevice::GetNode (void) const$/;"	f	class:ns3::WifiNetDevice
GetPhy	model/wifi-net-device.cc	/^WifiNetDevice::GetPhy (void) const$/;"	f	class:ns3::WifiNetDevice
GetRemoteStationManager	model/wifi-net-device.cc	/^WifiNetDevice::GetRemoteStationManager (void) const$/;"	f	class:ns3::WifiNetDevice
GetTypeId	model/wifi-net-device.cc	/^WifiNetDevice::GetTypeId (void)$/;"	f	class:ns3::WifiNetDevice
IsBridge	model/wifi-net-device.cc	/^WifiNetDevice::IsBridge (void) const$/;"	f	class:ns3::WifiNetDevice
IsBroadcast	model/wifi-net-device.cc	/^WifiNetDevice::IsBroadcast (void) const$/;"	f	class:ns3::WifiNetDevice
IsLinkUp	model/wifi-net-device.cc	/^WifiNetDevice::IsLinkUp (void) const$/;"	f	class:ns3::WifiNetDevice
IsMulticast	model/wifi-net-device.cc	/^WifiNetDevice::IsMulticast (void) const$/;"	f	class:ns3::WifiNetDevice
IsPointToPoint	model/wifi-net-device.cc	/^WifiNetDevice::IsPointToPoint (void) const$/;"	f	class:ns3::WifiNetDevice
LinkDown	model/wifi-net-device.cc	/^WifiNetDevice::LinkDown (void)$/;"	f	class:ns3::WifiNetDevice
LinkUp	model/wifi-net-device.cc	/^WifiNetDevice::LinkUp (void)$/;"	f	class:ns3::WifiNetDevice
NeedsArp	model/wifi-net-device.cc	/^WifiNetDevice::NeedsArp (void) const$/;"	f	class:ns3::WifiNetDevice
Send	model/wifi-net-device.cc	/^WifiNetDevice::Send (Ptr<Packet> packet, const Address& dest, uint16_t protocolNumber)$/;"	f	class:ns3::WifiNetDevice
SendFrom	model/wifi-net-device.cc	/^WifiNetDevice::SendFrom (Ptr<Packet> packet, const Address& source, const Address& dest, uint16_t protocolNumber)$/;"	f	class:ns3::WifiNetDevice
SetAddress	model/wifi-net-device.cc	/^WifiNetDevice::SetAddress (Address address)$/;"	f	class:ns3::WifiNetDevice
SetIfIndex	model/wifi-net-device.cc	/^WifiNetDevice::SetIfIndex (const uint32_t index)$/;"	f	class:ns3::WifiNetDevice
SetMac	model/wifi-net-device.cc	/^WifiNetDevice::SetMac (Ptr<WifiMac> mac)$/;"	f	class:ns3::WifiNetDevice
SetMtu	model/wifi-net-device.cc	/^WifiNetDevice::SetMtu (const uint16_t mtu)$/;"	f	class:ns3::WifiNetDevice
SetNode	model/wifi-net-device.cc	/^WifiNetDevice::SetNode (Ptr<Node> node)$/;"	f	class:ns3::WifiNetDevice
SetPhy	model/wifi-net-device.cc	/^WifiNetDevice::SetPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::WifiNetDevice
SetPromiscReceiveCallback	model/wifi-net-device.cc	/^WifiNetDevice::SetPromiscReceiveCallback (PromiscReceiveCallback cb)$/;"	f	class:ns3::WifiNetDevice
SetReceiveCallback	model/wifi-net-device.cc	/^WifiNetDevice::SetReceiveCallback (NetDevice::ReceiveCallback cb)$/;"	f	class:ns3::WifiNetDevice
SetRemoteStationManager	model/wifi-net-device.cc	/^WifiNetDevice::SetRemoteStationManager (Ptr<WifiRemoteStationManager> manager)$/;"	f	class:ns3::WifiNetDevice
SupportsSendFrom	model/wifi-net-device.cc	/^WifiNetDevice::SupportsSendFrom (void) const$/;"	f	class:ns3::WifiNetDevice
WifiNetDevice	model/wifi-net-device.cc	/^WifiNetDevice::WifiNetDevice ()$/;"	f	class:ns3::WifiNetDevice
ns3	model/wifi-net-device.cc	/^namespace ns3 {$/;"	n	file:
~WifiNetDevice	model/wifi-net-device.cc	/^WifiNetDevice::~WifiNetDevice ()$/;"	f	class:ns3::WifiNetDevice
MAX_MSDU_SIZE	model/wifi-net-device.h	/^  static const uint16_t MAX_MSDU_SIZE = 2304;$/;"	m	class:ns3::WifiNetDevice
WIFI_NET_DEVICE_H	model/wifi-net-device.h	22;"	d
WifiNetDevice	model/wifi-net-device.h	/^class WifiNetDevice : public NetDevice$/;"	c	namespace:ns3
m_configComplete	model/wifi-net-device.h	/^  bool m_configComplete;$/;"	m	class:ns3::WifiNetDevice
m_forwardUp	model/wifi-net-device.h	/^  NetDevice::ReceiveCallback m_forwardUp;$/;"	m	class:ns3::WifiNetDevice
m_ifIndex	model/wifi-net-device.h	/^  uint32_t m_ifIndex;$/;"	m	class:ns3::WifiNetDevice
m_linkChanges	model/wifi-net-device.h	/^  TracedCallback<> m_linkChanges;$/;"	m	class:ns3::WifiNetDevice
m_linkUp	model/wifi-net-device.h	/^  bool m_linkUp;$/;"	m	class:ns3::WifiNetDevice
m_mac	model/wifi-net-device.h	/^  Ptr<WifiMac> m_mac;$/;"	m	class:ns3::WifiNetDevice
m_mtu	model/wifi-net-device.h	/^  mutable uint16_t m_mtu;$/;"	m	class:ns3::WifiNetDevice
m_node	model/wifi-net-device.h	/^  Ptr<Node> m_node;$/;"	m	class:ns3::WifiNetDevice
m_phy	model/wifi-net-device.h	/^  Ptr<WifiPhy> m_phy;$/;"	m	class:ns3::WifiNetDevice
m_promiscRx	model/wifi-net-device.h	/^  NetDevice::PromiscReceiveCallback m_promiscRx;$/;"	m	class:ns3::WifiNetDevice
m_rxLogger	model/wifi-net-device.h	/^  TracedCallback<Ptr<const Packet>, Mac48Address> m_rxLogger;$/;"	m	class:ns3::WifiNetDevice
m_stationManager	model/wifi-net-device.h	/^  Ptr<WifiRemoteStationManager> m_stationManager;$/;"	m	class:ns3::WifiNetDevice
m_txLogger	model/wifi-net-device.h	/^  TracedCallback<Ptr<const Packet>, Mac48Address> m_txLogger;$/;"	m	class:ns3::WifiNetDevice
ns3	model/wifi-net-device.h	/^namespace ns3 {$/;"	n
WIFI_PHY_STANDARD_80211_10MHZ	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211_10MHZ,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211_5MHZ	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211_5MHZ,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211a	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211a,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211b	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211b,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211g	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211g,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211n_2_4GHZ	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211n_2_4GHZ,$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_80211n_5GHZ	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_80211n_5GHZ$/;"	e	enum:ns3::WifiPhyStandard
WIFI_PHY_STANDARD_H	model/wifi-phy-standard.h	21;"	d
WIFI_PHY_STANDARD_holland	model/wifi-phy-standard.h	/^  WIFI_PHY_STANDARD_holland,$/;"	e	enum:ns3::WifiPhyStandard
WifiPhyStandard	model/wifi-phy-standard.h	/^enum WifiPhyStandard$/;"	g	namespace:ns3
ns3	model/wifi-phy-standard.h	/^namespace ns3 {$/;"	n
DoSwitchFromRx	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::DoSwitchFromRx (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetDelayUntilIdle	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetDelayUntilIdle (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetLastRxStartTime	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetLastRxStartTime (void) const$/;"	f	class:ns3::WifiPhyStateHelper
GetState	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetState (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetStateDuration	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetStateDuration (void)$/;"	f	class:ns3::WifiPhyStateHelper
GetTypeId	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::GetTypeId (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateBusy	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateBusy (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateCcaBusy	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateCcaBusy (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateIdle	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateIdle (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateRx	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateRx (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateSleep	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateSleep (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateSwitching	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateSwitching (void)$/;"	f	class:ns3::WifiPhyStateHelper
IsStateTx	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::IsStateTx (void)$/;"	f	class:ns3::WifiPhyStateHelper
LogPreviousIdleAndCcaBusyStates	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::LogPreviousIdleAndCcaBusyStates (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyMaybeCcaBusyStart	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyMaybeCcaBusyStart (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyRxEndError	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyRxEndError (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyRxEndOk	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyRxEndOk (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyRxStart	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyRxStart (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
NotifySleep	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifySleep (void)$/;"	f	class:ns3::WifiPhyStateHelper
NotifySwitchingStart	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifySwitchingStart (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyTxStart	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyTxStart (Time duration, double txPowerDbm)$/;"	f	class:ns3::WifiPhyStateHelper
NotifyWakeup	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::NotifyWakeup (void)$/;"	f	class:ns3::WifiPhyStateHelper
RegisterListener	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::RegisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::WifiPhyStateHelper
SetReceiveErrorCallback	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SetReceiveErrorCallback (WifiPhy::RxErrorCallback callback)$/;"	f	class:ns3::WifiPhyStateHelper
SetReceiveOkCallback	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SetReceiveOkCallback (WifiPhy::RxOkCallback callback)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchFromRxEndError	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchFromRxEndError (Ptr<const Packet> packet, double snr)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchFromRxEndOk	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchFromRxEndOk (Ptr<Packet> packet, double snr, WifiMode mode, enum WifiPreamble preamble)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchFromSleep	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchFromSleep (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchMaybeToCcaBusy	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchMaybeToCcaBusy (Time duration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToChannelSwitching	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToChannelSwitching (Time switchingDuration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToRx	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToRx (Time rxDuration)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToSleep	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToSleep (void)$/;"	f	class:ns3::WifiPhyStateHelper
SwitchToTx	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::SwitchToTx (Time txDuration, Ptr<const Packet> packet, double txPowerDbm,$/;"	f	class:ns3::WifiPhyStateHelper
UnregisterListener	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::UnregisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::WifiPhyStateHelper
WifiPhyStateHelper	model/wifi-phy-state-helper.cc	/^WifiPhyStateHelper::WifiPhyStateHelper ()$/;"	f	class:ns3::WifiPhyStateHelper
ns3	model/wifi-phy-state-helper.cc	/^namespace ns3 {$/;"	n	file:
Listeners	model/wifi-phy-state-helper.h	/^  typedef std::vector<WifiPhyListener *> Listeners;$/;"	t	class:ns3::WifiPhyStateHelper
ListenersI	model/wifi-phy-state-helper.h	/^  typedef std::vector<WifiPhyListener *>::iterator ListenersI;$/;"	t	class:ns3::WifiPhyStateHelper
RxEndErrorTracedCallback	model/wifi-phy-state-helper.h	/^  typedef void (* RxEndErrorTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
RxOkTracedCallback	model/wifi-phy-state-helper.h	/^  typedef void (* RxOkTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
StateTracedCallback	model/wifi-phy-state-helper.h	/^  typedef void (* StateTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
TxTracedCallback	model/wifi-phy-state-helper.h	/^  typedef void (* TxTracedCallback)$/;"	t	class:ns3::WifiPhyStateHelper
WIFI_PHY_STATE_HELPER_H	model/wifi-phy-state-helper.h	21;"	d
WifiPhyStateHelper	model/wifi-phy-state-helper.h	/^class WifiPhyStateHelper : public Object$/;"	c	namespace:ns3
m_endCcaBusy	model/wifi-phy-state-helper.h	/^  Time m_endCcaBusy;$/;"	m	class:ns3::WifiPhyStateHelper
m_endRx	model/wifi-phy-state-helper.h	/^  Time m_endRx;$/;"	m	class:ns3::WifiPhyStateHelper
m_endSwitching	model/wifi-phy-state-helper.h	/^  Time m_endSwitching;$/;"	m	class:ns3::WifiPhyStateHelper
m_endTx	model/wifi-phy-state-helper.h	/^  Time m_endTx;$/;"	m	class:ns3::WifiPhyStateHelper
m_listeners	model/wifi-phy-state-helper.h	/^  Listeners m_listeners;$/;"	m	class:ns3::WifiPhyStateHelper
m_previousStateChangeTime	model/wifi-phy-state-helper.h	/^  Time m_previousStateChangeTime;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxErrorCallback	model/wifi-phy-state-helper.h	/^  WifiPhy::RxErrorCallback m_rxErrorCallback;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxErrorTrace	model/wifi-phy-state-helper.h	/^  TracedCallback<Ptr<const Packet>, double> m_rxErrorTrace;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxOkCallback	model/wifi-phy-state-helper.h	/^  WifiPhy::RxOkCallback m_rxOkCallback;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxOkTrace	model/wifi-phy-state-helper.h	/^  TracedCallback<Ptr<const Packet>, double, WifiMode, enum WifiPreamble> m_rxOkTrace;$/;"	m	class:ns3::WifiPhyStateHelper
m_rxing	model/wifi-phy-state-helper.h	/^  bool m_rxing;$/;"	m	class:ns3::WifiPhyStateHelper
m_sleeping	model/wifi-phy-state-helper.h	/^  bool m_sleeping;$/;"	m	class:ns3::WifiPhyStateHelper
m_startCcaBusy	model/wifi-phy-state-helper.h	/^  Time m_startCcaBusy;$/;"	m	class:ns3::WifiPhyStateHelper
m_startRx	model/wifi-phy-state-helper.h	/^  Time m_startRx;$/;"	m	class:ns3::WifiPhyStateHelper
m_startSleep	model/wifi-phy-state-helper.h	/^  Time m_startSleep;$/;"	m	class:ns3::WifiPhyStateHelper
m_startSwitching	model/wifi-phy-state-helper.h	/^  Time m_startSwitching;$/;"	m	class:ns3::WifiPhyStateHelper
m_startTx	model/wifi-phy-state-helper.h	/^  Time m_startTx;$/;"	m	class:ns3::WifiPhyStateHelper
m_stateLogger	model/wifi-phy-state-helper.h	/^  TracedCallback<Time,Time,enum WifiPhy::State> m_stateLogger;$/;"	m	class:ns3::WifiPhyStateHelper
m_txTrace	model/wifi-phy-state-helper.h	/^  TracedCallback<Ptr<const Packet>,WifiMode,WifiPreamble,uint8_t> m_txTrace;$/;"	m	class:ns3::WifiPhyStateHelper
ns3	model/wifi-phy-state-helper.h	/^namespace ns3 {$/;"	n
CalculateTxDuration	model/wifi-phy.cc	/^WifiPhy::CalculateTxDuration (uint32_t size, WifiTxVector txvector, WifiPreamble preamble, double frequency, uint8_t packetType, uint8_t incFlag)$/;"	f	class:ns3::WifiPhy
Constructor	model/wifi-phy.cc	/^  Constructor ()$/;"	f	class:__anon5::Constructor
Constructor	model/wifi-phy.cc	/^static class Constructor$/;"	c	namespace:__anon5	file:
GetDsssRate11Mbps	model/wifi-phy.cc	/^WifiPhy::GetDsssRate11Mbps ()$/;"	f	class:ns3::WifiPhy
GetDsssRate1Mbps	model/wifi-phy.cc	/^WifiPhy::GetDsssRate1Mbps ()$/;"	f	class:ns3::WifiPhy
GetDsssRate2Mbps	model/wifi-phy.cc	/^WifiPhy::GetDsssRate2Mbps ()$/;"	f	class:ns3::WifiPhy
GetDsssRate5_5Mbps	model/wifi-phy.cc	/^WifiPhy::GetDsssRate5_5Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate12Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate12Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate18Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate18Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate24Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate24Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate36Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate36Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate48Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate48Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate54Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate54Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate6Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate6Mbps ()$/;"	f	class:ns3::WifiPhy
GetErpOfdmRate9Mbps	model/wifi-phy.cc	/^WifiPhy::GetErpOfdmRate9Mbps ()$/;"	f	class:ns3::WifiPhy
GetMFPlcpHeaderMode	model/wifi-phy.cc	/^WifiPhy::GetMFPlcpHeaderMode (WifiMode payloadMode, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetOfdmRate108MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate108MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate120MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate120MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate121_5MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate121_5MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate12Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate12Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate12MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate12MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate12MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate12MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate135MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate135MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate135MbpsBW40MHzShGi	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate135MbpsBW40MHzShGi ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate13MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate13MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate13_5MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate13_5MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate13_5MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate13_5MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate14_4MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate14_4MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate150MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate150MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate15MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate15MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate18Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate18Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate18MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate18MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate19_5MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate19_5MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate1_5MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate1_5MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate21_7MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate21_7MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate24Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate24Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate24MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate24MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate26MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate26MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate27MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate27MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate27MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate27MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate28_9MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate28_9MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate2_25MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate2_25MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate30MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate30MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate36Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate36Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate39MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate39MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate3MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate3MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate3MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate3MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate40_5MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate40_5MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate43_3MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate43_3MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate45MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate45MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate48Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate48Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate4_5MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate4_5MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate4_5MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate4_5MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate52MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate52MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate54Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate54Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate54MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate54MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate57_8MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate57_8MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate58_5MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate58_5MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate60MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate60MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate65MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate65MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate65MbpsBW20MHzShGi	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate65MbpsBW20MHzShGi ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate6Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate6Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate6MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate6MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate6MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate6MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate6_5MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate6_5MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate72_2MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate72_2MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate7_2MbpsBW20MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate7_2MbpsBW20MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate81MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate81MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate90MbpsBW40MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate90MbpsBW40MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate9Mbps	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate9Mbps ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate9MbpsBW10MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate9MbpsBW10MHz ()$/;"	f	class:ns3::WifiPhy
GetOfdmRate9MbpsBW5MHz	model/wifi-phy.cc	/^WifiPhy::GetOfdmRate9MbpsBW5MHz ()$/;"	f	class:ns3::WifiPhy
GetPayloadDuration	model/wifi-phy.cc	/^WifiPhy::GetPayloadDuration (uint32_t size, WifiTxVector txvector, WifiPreamble preamble, double frequency, uint8_t packetType, uint8_t incFlag)$/;"	f	class:ns3::WifiPhy
GetPlcpHeaderDuration	model/wifi-phy.cc	/^WifiPhy::GetPlcpHeaderDuration (WifiMode payloadMode, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpHeaderMode	model/wifi-phy.cc	/^WifiPhy::GetPlcpHeaderMode (WifiMode payloadMode, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpHtSigHeaderDuration	model/wifi-phy.cc	/^WifiPhy::GetPlcpHtSigHeaderDuration (WifiMode payloadMode, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetPlcpHtTrainingSymbolDuration	model/wifi-phy.cc	/^WifiPhy::GetPlcpHtTrainingSymbolDuration (WifiPreamble preamble, WifiTxVector txvector)$/;"	f	class:ns3::WifiPhy
GetPlcpPreambleDuration	model/wifi-phy.cc	/^WifiPhy::GetPlcpPreambleDuration (WifiMode payloadMode, WifiPreamble preamble)$/;"	f	class:ns3::WifiPhy
GetTypeId	model/wifi-phy.cc	/^WifiPhy::GetTypeId (void)$/;"	f	class:ns3::WifiPhy
NotifyMonitorSniffRx	model/wifi-phy.cc	/^WifiPhy::NotifyMonitorSniffRx (Ptr<const Packet> packet, uint16_t channelFreqMhz, uint16_t channelNumber, uint32_t rate, bool isShortPreamble, double signalDbm, double noiseDbm)$/;"	f	class:ns3::WifiPhy
NotifyMonitorSniffTx	model/wifi-phy.cc	/^WifiPhy::NotifyMonitorSniffTx (Ptr<const Packet> packet, uint16_t channelFreqMhz, uint16_t channelNumber, uint32_t rate, bool isShortPreamble, uint8_t txPower)$/;"	f	class:ns3::WifiPhy
NotifyRxBegin	model/wifi-phy.cc	/^WifiPhy::NotifyRxBegin (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyRxDrop	model/wifi-phy.cc	/^WifiPhy::NotifyRxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyRxEnd	model/wifi-phy.cc	/^WifiPhy::NotifyRxEnd (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyTxBegin	model/wifi-phy.cc	/^WifiPhy::NotifyTxBegin (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyTxDrop	model/wifi-phy.cc	/^WifiPhy::NotifyTxDrop (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
NotifyTxEnd	model/wifi-phy.cc	/^WifiPhy::NotifyTxEnd (Ptr<const Packet> packet)$/;"	f	class:ns3::WifiPhy
WifiPhy	model/wifi-phy.cc	/^WifiPhy::WifiPhy ()$/;"	f	class:ns3::WifiPhy
g_constructor	model/wifi-phy.cc	/^} g_constructor;$/;"	m	namespace:__anon5	typeref:class:__anon5::Constructor	file:
ns3	model/wifi-phy.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/wifi-phy.cc	/^std::ostream& operator<< (std::ostream& os, enum WifiPhy::State state)$/;"	f	namespace:ns3
~WifiPhy	model/wifi-phy.cc	/^WifiPhy::~WifiPhy ()$/;"	f	class:ns3::WifiPhy
~WifiPhyListener	model/wifi-phy.cc	/^WifiPhyListener::~WifiPhyListener ()$/;"	f	class:ns3::WifiPhyListener
CCA_BUSY	model/wifi-phy.h	/^    CCA_BUSY,$/;"	e	enum:ns3::WifiPhy::State
IDLE	model/wifi-phy.h	/^    IDLE,$/;"	e	enum:ns3::WifiPhy::State
MonitorSnifferRxCallback	model/wifi-phy.h	/^  typedef void (* MonitorSnifferRxCallback)$/;"	t	class:ns3::WifiPhy
MonitorSnifferTxCallback	model/wifi-phy.h	/^  typedef void (* MonitorSnifferTxCallback)$/;"	t	class:ns3::WifiPhy
RX	model/wifi-phy.h	/^    RX,$/;"	e	enum:ns3::WifiPhy::State
RxErrorCallback	model/wifi-phy.h	/^  typedef Callback<void,Ptr<const Packet>, double> RxErrorCallback;$/;"	t	class:ns3::WifiPhy
RxOkCallback	model/wifi-phy.h	/^  typedef Callback<void,Ptr<Packet>, double, WifiMode, enum WifiPreamble> RxOkCallback;$/;"	t	class:ns3::WifiPhy
SLEEP	model/wifi-phy.h	/^    SLEEP$/;"	e	enum:ns3::WifiPhy::State
SWITCHING	model/wifi-phy.h	/^    SWITCHING,$/;"	e	enum:ns3::WifiPhy::State
State	model/wifi-phy.h	/^  enum State$/;"	g	class:ns3::WifiPhy
TX	model/wifi-phy.h	/^    TX,$/;"	e	enum:ns3::WifiPhy::State
WIFI_PHY_H	model/wifi-phy.h	22;"	d
WifiPhy	model/wifi-phy.h	/^class WifiPhy : public Object$/;"	c	namespace:ns3
WifiPhyListener	model/wifi-phy.h	/^class WifiPhyListener$/;"	c	namespace:ns3
m_phyMonitorSniffRxTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet>, uint16_t, uint16_t, uint32_t, bool, double, double> m_phyMonitorSniffRxTrace;$/;"	m	class:ns3::WifiPhy
m_phyMonitorSniffTxTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet>, uint16_t, uint16_t, uint32_t, bool,uint8_t> m_phyMonitorSniffTxTrace;$/;"	m	class:ns3::WifiPhy
m_phyRxBeginTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyRxBeginTrace;$/;"	m	class:ns3::WifiPhy
m_phyRxDropTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyRxDropTrace;$/;"	m	class:ns3::WifiPhy
m_phyRxEndTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyRxEndTrace;$/;"	m	class:ns3::WifiPhy
m_phyTxBeginTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyTxBeginTrace;$/;"	m	class:ns3::WifiPhy
m_phyTxDropTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyTxDropTrace;$/;"	m	class:ns3::WifiPhy
m_phyTxEndTrace	model/wifi-phy.h	/^  TracedCallback<Ptr<const Packet> > m_phyTxEndTrace;$/;"	m	class:ns3::WifiPhy
m_totalAmpduNumSymbols	model/wifi-phy.h	/^  uint32_t m_totalAmpduNumSymbols; \/\/!< Number of symbols previously transmitted for the MPDUs in an A-MPDU, used for the computation of the number of symbols needed for the last MPDU in the A-MPDU$/;"	m	class:ns3::WifiPhy
m_totalAmpduSize	model/wifi-phy.h	/^  uint32_t m_totalAmpduSize;       \/\/!< Total size of the previously transmitted MPDUs in an A-MPDU, used for the computation of the number of symbols needed for the last MPDU in the A-MPDU$/;"	m	class:ns3::WifiPhy
ns3	model/wifi-phy.h	/^namespace ns3 {$/;"	n
WIFI_PREAMBLE_H	model/wifi-preamble.h	21;"	d
WIFI_PREAMBLE_HT_GF	model/wifi-preamble.h	/^  WIFI_PREAMBLE_HT_GF,$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_HT_MF	model/wifi-preamble.h	/^  WIFI_PREAMBLE_HT_MF,$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_LONG	model/wifi-preamble.h	/^  WIFI_PREAMBLE_LONG,$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_NONE	model/wifi-preamble.h	/^  WIFI_PREAMBLE_NONE$/;"	e	enum:ns3::WifiPreamble
WIFI_PREAMBLE_SHORT	model/wifi-preamble.h	/^  WIFI_PREAMBLE_SHORT,$/;"	e	enum:ns3::WifiPreamble
WifiPreamble	model/wifi-preamble.h	/^enum WifiPreamble$/;"	g	namespace:ns3
ns3	model/wifi-preamble.h	/^namespace ns3 {$/;"	n
AddAllSupportedModes	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddAllSupportedModes (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
AddBasicMcs	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddBasicMcs (uint8_t mcs)$/;"	f	class:ns3::WifiRemoteStationManager
AddBasicMode	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddBasicMode (WifiMode mode)$/;"	f	class:ns3::WifiRemoteStationManager
AddStationHtCapabilities	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddStationHtCapabilities (Mac48Address from, HtCapabilities htcapabilities)$/;"	f	class:ns3::WifiRemoteStationManager
AddSupportedMcs	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddSupportedMcs (Mac48Address address, uint8_t mcs)$/;"	f	class:ns3::WifiRemoteStationManager
AddSupportedMode	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::AddSupportedMode (Mac48Address address, WifiMode mode)$/;"	f	class:ns3::WifiRemoteStationManager
CalculateAveragingCoefficient	model/wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::CalculateAveragingCoefficient ()$/;"	f	class:ns3::WifiRemoteStationInfo
Deserialize	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
Deserialize	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::HighLatencyDataTxVectorTag
Deserialize	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::Deserialize (TagBuffer i)$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
DoDispose	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoDispose (void)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxGuardInterval	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxGuardInterval(Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxNess	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxNess(Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxNss	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxNss(Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxPowerLevel	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxPowerLevel (Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetAckTxStbc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetAckTxStbc(Mac48Address address, WifiMode ackMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxGuardInterval	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxGuardInterval(Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxNess	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxNess(Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxNss	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxNss(Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxPowerLevel	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxPowerLevel (Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetBlockAckTxStbc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetBlockAckTxStbc(Mac48Address address, WifiMode blockAckMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsToSelfTxVector	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsToSelfTxVector (void)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxGuardInterval	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxGuardInterval(Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxNess	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxNess(Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxNss	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxNss(Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxPowerLevel	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxPowerLevel (Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetCtsTxStbc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetCtsTxStbc(Mac48Address address, WifiMode ctsMode)$/;"	f	class:ns3::WifiRemoteStationManager
DoGetFragmentationThreshold	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoGetFragmentationThreshold (void) const$/;"	f	class:ns3::WifiRemoteStationManager
DoNeedDataRetransmission	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedDataRetransmission (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoNeedFragmentation	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedFragmentation (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoNeedRts	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedRts (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoNeedRtsRetransmission	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoNeedRtsRetransmission (WifiRemoteStation *station,$/;"	f	class:ns3::WifiRemoteStationManager
DoSetFragmentationThreshold	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::DoSetFragmentationThreshold (uint32_t threshold)$/;"	f	class:ns3::WifiRemoteStationManager
GetAckTxVector	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetAckTxVector (Mac48Address address, WifiMode dataMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetBasicMcs	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetBasicMcs (uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetBasicMode	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetBasicMode (uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetBlockAckTxVector	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetBlockAckTxVector (Mac48Address address, WifiMode blockAckReqMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetControlAnswerMode	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetControlAnswerMode (Mac48Address address, WifiMode reqMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetCtsToSelfTxVector	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetCtsToSelfTxVector (void) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetCtsToSelfTxVector	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetCtsToSelfTxVector(const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetCtsTxVector	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetCtsTxVector (Mac48Address address, WifiMode rtsMode)$/;"	f	class:ns3::WifiRemoteStationManager
GetDataTxVector	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetDataTxVector (void) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetDataTxVector	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDataTxVector (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetDefaultMcs	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDefaultMcs (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetDefaultMode	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDefaultMode (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetDefaultTxPowerLevel	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetDefaultTxPowerLevel (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetFragmentOffset	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetFragmentOffset (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetFragmentSize	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetFragmentSize (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetFragmentationThreshold	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetFragmentationThreshold (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetFrameErrorRate	model/wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::GetFrameErrorRate () const$/;"	f	class:ns3::WifiRemoteStationInfo
GetGreenfield	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetGreenfield (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetGreenfieldSupported	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetGreenfieldSupported (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
GetInfo	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetInfo (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
GetInstanceTypeId	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetInstanceTypeId	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetInstanceTypeId	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetInstanceTypeId (void) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetLongRetryCount	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetLongRetryCount (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMac	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMac (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMaxSlrc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMaxSlrc (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMaxSsrc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMaxSsrc (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetMcsSupported	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetMcsSupported (const WifiRemoteStation *station, uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNBasicMcs	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNBasicMcs (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNBasicModes	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNBasicModes (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNFragments	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNFragments (const WifiMacHeader *header, Ptr<const Packet> packet)$/;"	f	class:ns3::WifiRemoteStationManager
GetNMcsSupported	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNMcsSupported (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNSupported	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNSupported (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNess	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNess (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNonUnicastMode	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNonUnicastMode (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNumberOfReceiveAntennas	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNumberOfReceiveAntennas (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNumberOfTransmitAntennas	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNumberOfTransmitAntennas (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetNumberOfTransmitAntennas	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetNumberOfTransmitAntennas (void)$/;"	f	class:ns3::WifiRemoteStationManager
GetPhy	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetPhy (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetRtsCtsThreshold	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetRtsCtsThreshold (void) const$/;"	f	class:ns3::WifiRemoteStationManager
GetRtsTxVector	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetRtsTxVector (void) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetRtsTxVector	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetRtsTxVector (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
GetSerializedSize	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetSerializedSize (void) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetSerializedSize	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetSerializedSize (void) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetSerializedSize	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetSerializedSize (void) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetShortGuardInterval	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortGuardInterval (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetShortRetryCount	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetShortRetryCount (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetStbc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetStbc (const WifiRemoteStation *station) const$/;"	f	class:ns3::WifiRemoteStationManager
GetSupported	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetSupported (const WifiRemoteStation *station, uint32_t i) const$/;"	f	class:ns3::WifiRemoteStationManager
GetTypeId	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::GetTypeId (void)$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
GetTypeId	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::GetTypeId (void)$/;"	f	class:ns3::HighLatencyDataTxVectorTag
GetTypeId	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::GetTypeId (void)$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
GetTypeId	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::GetTypeId (void)$/;"	f	class:ns3::WifiRemoteStationManager
HasHtSupported	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::HasHtSupported (void) const$/;"	f	class:ns3::WifiRemoteStationManager
HighLatencyCtsToSelfTxVectorTag	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::HighLatencyCtsToSelfTxVectorTag ( WifiTxVector ctsToSelfTxVector)$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
HighLatencyCtsToSelfTxVectorTag	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::HighLatencyCtsToSelfTxVectorTag ()$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
HighLatencyCtsToSelfTxVectorTag	model/wifi-remote-station-manager.cc	/^class HighLatencyCtsToSelfTxVectorTag : public Tag$/;"	c	namespace:ns3	file:
HighLatencyDataTxVectorTag	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::HighLatencyDataTxVectorTag ( WifiTxVector dataTxVector)$/;"	f	class:ns3::HighLatencyDataTxVectorTag
HighLatencyDataTxVectorTag	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::HighLatencyDataTxVectorTag ()$/;"	f	class:ns3::HighLatencyDataTxVectorTag
HighLatencyDataTxVectorTag	model/wifi-remote-station-manager.cc	/^class HighLatencyDataTxVectorTag : public Tag$/;"	c	namespace:ns3	file:
HighLatencyRtsTxVectorTag	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::HighLatencyRtsTxVectorTag ( WifiTxVector rtsTxVector)$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
HighLatencyRtsTxVectorTag	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::HighLatencyRtsTxVectorTag ()$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
HighLatencyRtsTxVectorTag	model/wifi-remote-station-manager.cc	/^class HighLatencyRtsTxVectorTag : public Tag$/;"	c	namespace:ns3	file:
IsAssociated	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsAssociated (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
IsBrandNew	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsBrandNew (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
IsLastFragment	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsLastFragment (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
IsWaitAssocTxOk	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::IsWaitAssocTxOk (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
Lookup	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Lookup (Mac48Address address, const WifiMacHeader *header) const$/;"	f	class:ns3::WifiRemoteStationManager
Lookup	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Lookup (Mac48Address address, uint8_t tid) const$/;"	f	class:ns3::WifiRemoteStationManager
LookupState	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::LookupState (Mac48Address address) const$/;"	f	class:ns3::WifiRemoteStationManager
NeedCtsToSelf	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedCtsToSelf (WifiTxVector txVector)$/;"	f	class:ns3::WifiRemoteStationManager
NeedDataRetransmission	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedDataRetransmission (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NeedFragmentation	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedFragmentation (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NeedRts	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedRts (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NeedRtsRetransmission	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::NeedRtsRetransmission (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
NotifyTxFailed	model/wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::NotifyTxFailed ()$/;"	f	class:ns3::WifiRemoteStationInfo
NotifyTxSuccess	model/wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::NotifyTxSuccess (uint32_t retryCounter)$/;"	f	class:ns3::WifiRemoteStationInfo
PrepareForQueue	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::PrepareForQueue (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
Print	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::Print (std::ostream &os) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
Print	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::Print (std::ostream &os) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
Print	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::Print (std::ostream &os) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
RecordDisassociated	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordDisassociated (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
RecordGotAssocTxFailed	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordGotAssocTxFailed (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
RecordGotAssocTxOk	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordGotAssocTxOk (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
RecordWaitAssocTxOk	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::RecordWaitAssocTxOk (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
ReportDataFailed	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportDataFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportDataOk	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportDataOk (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
ReportFinalDataFailed	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportFinalDataFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportFinalRtsFailed	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportFinalRtsFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportRtsFailed	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportRtsFailed (Mac48Address address, const WifiMacHeader *header)$/;"	f	class:ns3::WifiRemoteStationManager
ReportRtsOk	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportRtsOk (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
ReportRxOk	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::ReportRxOk (Mac48Address address, const WifiMacHeader *header,$/;"	f	class:ns3::WifiRemoteStationManager
Reset	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Reset (Mac48Address address)$/;"	f	class:ns3::WifiRemoteStationManager
Reset	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::Reset (void)$/;"	f	class:ns3::WifiRemoteStationManager
Serialize	model/wifi-remote-station-manager.cc	/^HighLatencyCtsToSelfTxVectorTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::HighLatencyCtsToSelfTxVectorTag
Serialize	model/wifi-remote-station-manager.cc	/^HighLatencyDataTxVectorTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::HighLatencyDataTxVectorTag
Serialize	model/wifi-remote-station-manager.cc	/^HighLatencyRtsTxVectorTag::Serialize (TagBuffer i) const$/;"	f	class:ns3::HighLatencyRtsTxVectorTag
SetDefaultTxPowerLevel	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetDefaultTxPowerLevel (uint8_t txPower)$/;"	f	class:ns3::WifiRemoteStationManager
SetFragmentationThreshold	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetFragmentationThreshold (uint32_t threshold)$/;"	f	class:ns3::WifiRemoteStationManager
SetHtSupported	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetHtSupported (bool enable)$/;"	f	class:ns3::WifiRemoteStationManager
SetMaxSlrc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetMaxSlrc (uint32_t maxSlrc)$/;"	f	class:ns3::WifiRemoteStationManager
SetMaxSsrc	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetMaxSsrc (uint32_t maxSsrc)$/;"	f	class:ns3::WifiRemoteStationManager
SetRtsCtsThreshold	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetRtsCtsThreshold (uint32_t threshold)$/;"	f	class:ns3::WifiRemoteStationManager
SetupMac	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetupMac (Ptr<WifiMac> mac)$/;"	f	class:ns3::WifiRemoteStationManager
SetupPhy	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::SetupPhy (Ptr<WifiPhy> phy)$/;"	f	class:ns3::WifiRemoteStationManager
WifiRemoteStationInfo	model/wifi-remote-station-manager.cc	/^WifiRemoteStationInfo::WifiRemoteStationInfo ()$/;"	f	class:ns3::WifiRemoteStationInfo
WifiRemoteStationManager	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::WifiRemoteStationManager ()$/;"	f	class:ns3::WifiRemoteStationManager
m_ctsToSelfTxVector	model/wifi-remote-station-manager.cc	/^  WifiTxVector m_ctsToSelfTxVector;$/;"	m	class:ns3::HighLatencyCtsToSelfTxVectorTag	file:
m_dataTxVector	model/wifi-remote-station-manager.cc	/^  WifiTxVector m_dataTxVector;$/;"	m	class:ns3::HighLatencyDataTxVectorTag	file:
m_rtsTxVector	model/wifi-remote-station-manager.cc	/^  WifiTxVector m_rtsTxVector;$/;"	m	class:ns3::HighLatencyRtsTxVectorTag	file:
ns3	model/wifi-remote-station-manager.cc	/^namespace ns3 {$/;"	n	file:
~WifiRemoteStation	model/wifi-remote-station-manager.cc	/^WifiRemoteStation::~WifiRemoteStation ()$/;"	f	class:ns3::WifiRemoteStation
~WifiRemoteStationManager	model/wifi-remote-station-manager.cc	/^WifiRemoteStationManager::~WifiRemoteStationManager ()$/;"	f	class:ns3::WifiRemoteStationManager
BRAND_NEW	model/wifi-remote-station-manager.h	/^    BRAND_NEW,$/;"	e	enum:ns3::WifiRemoteStationState::__anon7
DISASSOC	model/wifi-remote-station-manager.h	/^    DISASSOC,$/;"	e	enum:ns3::WifiRemoteStationState::__anon7
GOT_ASSOC_TX_OK	model/wifi-remote-station-manager.h	/^    GOT_ASSOC_TX_OK$/;"	e	enum:ns3::WifiRemoteStationState::__anon7
StationStates	model/wifi-remote-station-manager.h	/^  typedef std::vector <WifiRemoteStationState *> StationStates;$/;"	t	class:ns3::WifiRemoteStationManager
Stations	model/wifi-remote-station-manager.h	/^  typedef std::vector <WifiRemoteStation *> Stations;$/;"	t	class:ns3::WifiRemoteStationManager
WAIT_ASSOC_TX_OK	model/wifi-remote-station-manager.h	/^    WAIT_ASSOC_TX_OK,$/;"	e	enum:ns3::WifiRemoteStationState::__anon7
WIFI_REMOTE_STATION_MANAGER_H	model/wifi-remote-station-manager.h	21;"	d
WifiRemoteStation	model/wifi-remote-station-manager.h	/^struct WifiRemoteStation$/;"	s	namespace:ns3
WifiRemoteStationInfo	model/wifi-remote-station-manager.h	/^class WifiRemoteStationInfo$/;"	c	namespace:ns3
WifiRemoteStationManager	model/wifi-remote-station-manager.h	/^class WifiRemoteStationManager : public Object$/;"	c	namespace:ns3
WifiRemoteStationState	model/wifi-remote-station-manager.h	/^struct WifiRemoteStationState$/;"	s	namespace:ns3
m_address	model/wifi-remote-station-manager.h	/^  Mac48Address m_address;  \/\/!< Mac48Address of the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_bssBasicMcsSet	model/wifi-remote-station-manager.h	/^  WifiMcsList m_bssBasicMcsSet;$/;"	m	class:ns3::WifiRemoteStationManager
m_bssBasicRateSet	model/wifi-remote-station-manager.h	/^  WifiModeList m_bssBasicRateSet;$/;"	m	class:ns3::WifiRemoteStationManager
m_defaultTxMcs	model/wifi-remote-station-manager.h	/^  uint8_t m_defaultTxMcs;  \/\/!< The default transmission modulation-coding scheme (MCS)$/;"	m	class:ns3::WifiRemoteStationManager
m_defaultTxMode	model/wifi-remote-station-manager.h	/^  WifiMode m_defaultTxMode;  \/\/!< The default transmission mode$/;"	m	class:ns3::WifiRemoteStationManager
m_defaultTxPowerLevel	model/wifi-remote-station-manager.h	/^  uint8_t m_defaultTxPowerLevel;  \/\/!< Default tranmission power level$/;"	m	class:ns3::WifiRemoteStationManager
m_failAvg	model/wifi-remote-station-manager.h	/^  double m_failAvg;$/;"	m	class:ns3::WifiRemoteStationInfo
m_fragmentationThreshold	model/wifi-remote-station-manager.h	/^  uint32_t m_fragmentationThreshold;  \/\/!< Threshold for fragmentation$/;"	m	class:ns3::WifiRemoteStationManager
m_greenfield	model/wifi-remote-station-manager.h	/^  bool m_greenfield;  \/\/!< Flag if green field is used by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_htSupported	model/wifi-remote-station-manager.h	/^  bool m_htSupported;  \/\/!< Flag if HT capability is supported$/;"	m	class:ns3::WifiRemoteStationManager
m_info	model/wifi-remote-station-manager.h	/^  WifiRemoteStationInfo m_info;$/;"	m	struct:ns3::WifiRemoteStationState
m_lastUpdate	model/wifi-remote-station-manager.h	/^  Time m_lastUpdate;$/;"	m	class:ns3::WifiRemoteStationInfo
m_macTxDataFailed	model/wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxDataFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_macTxFinalDataFailed	model/wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxFinalDataFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_macTxFinalRtsFailed	model/wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxFinalRtsFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_macTxRtsFailed	model/wifi-remote-station-manager.h	/^  TracedCallback<Mac48Address> m_macTxRtsFailed;$/;"	m	class:ns3::WifiRemoteStationManager
m_maxSlrc	model/wifi-remote-station-manager.h	/^  uint32_t m_maxSlrc;  \/\/!< Maximum STA long retry count (SLRC)$/;"	m	class:ns3::WifiRemoteStationManager
m_maxSsrc	model/wifi-remote-station-manager.h	/^  uint32_t m_maxSsrc;  \/\/!< Maximum STA short retry count (SSRC)$/;"	m	class:ns3::WifiRemoteStationManager
m_memoryTime	model/wifi-remote-station-manager.h	/^  Time m_memoryTime;$/;"	m	class:ns3::WifiRemoteStationInfo
m_ness	model/wifi-remote-station-manager.h	/^  uint32_t m_ness;  \/\/!< Number of streams in beamforming of the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_nonUnicastMode	model/wifi-remote-station-manager.h	/^  WifiMode m_nonUnicastMode;  \/\/!< Transmission mode for non-unicast DATA frames$/;"	m	class:ns3::WifiRemoteStationManager
m_operationalMcsSet	model/wifi-remote-station-manager.h	/^  WifiMcsList m_operationalMcsSet;$/;"	m	struct:ns3::WifiRemoteStationState
m_operationalRateSet	model/wifi-remote-station-manager.h	/^  WifiModeList m_operationalRateSet;$/;"	m	struct:ns3::WifiRemoteStationState
m_rtsCtsThreshold	model/wifi-remote-station-manager.h	/^  uint32_t m_rtsCtsThreshold;  \/\/!< Threshold for RTS\/CTS$/;"	m	class:ns3::WifiRemoteStationManager
m_rx	model/wifi-remote-station-manager.h	/^  uint32_t m_rx;  \/\/!< Number of RX antennas of the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_shortGuardInterval	model/wifi-remote-station-manager.h	/^  bool m_shortGuardInterval;  \/\/!< Flag if short guard interval is supported by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_slrc	model/wifi-remote-station-manager.h	/^  uint32_t m_slrc; \/\/!< STA long retry count$/;"	m	struct:ns3::WifiRemoteStation
m_ssrc	model/wifi-remote-station-manager.h	/^  uint32_t m_ssrc; \/\/!< STA short retry count$/;"	m	struct:ns3::WifiRemoteStation
m_state	model/wifi-remote-station-manager.h	/^  WifiRemoteStationState *m_state; \/\/!< Remote station state$/;"	m	struct:ns3::WifiRemoteStation
m_state	model/wifi-remote-station-manager.h	/^  } m_state;$/;"	m	struct:ns3::WifiRemoteStationState	typeref:enum:ns3::WifiRemoteStationState::__anon7
m_states	model/wifi-remote-station-manager.h	/^  StationStates m_states;  \/\/!< States of known stations$/;"	m	class:ns3::WifiRemoteStationManager
m_stations	model/wifi-remote-station-manager.h	/^  Stations m_stations;  \/\/!< Information for each known stations$/;"	m	class:ns3::WifiRemoteStationManager
m_stbc	model/wifi-remote-station-manager.h	/^  bool m_stbc;  \/\/!< Flag if STBC is used by the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_tid	model/wifi-remote-station-manager.h	/^  uint8_t m_tid; \/\/!< traffic ID$/;"	m	struct:ns3::WifiRemoteStation
m_tx	model/wifi-remote-station-manager.h	/^  uint32_t m_tx;  \/\/!< Number of TX antennas of the remote station$/;"	m	struct:ns3::WifiRemoteStationState
m_wifiMac	model/wifi-remote-station-manager.h	/^  Ptr<WifiMac> m_wifiMac;$/;"	m	class:ns3::WifiRemoteStationManager
m_wifiPhy	model/wifi-remote-station-manager.h	/^  Ptr<WifiPhy> m_wifiPhy;$/;"	m	class:ns3::WifiRemoteStationManager
ns3	model/wifi-remote-station-manager.h	/^namespace ns3 {$/;"	n
GetMode	model/wifi-tx-vector.cc	/^WifiTxVector::GetMode (void) const$/;"	f	class:ns3::WifiTxVector
GetNess	model/wifi-tx-vector.cc	/^WifiTxVector::GetNess (void) const$/;"	f	class:ns3::WifiTxVector
GetNss	model/wifi-tx-vector.cc	/^WifiTxVector::GetNss (void) const$/;"	f	class:ns3::WifiTxVector
GetRetries	model/wifi-tx-vector.cc	/^WifiTxVector::GetRetries (void) const$/;"	f	class:ns3::WifiTxVector
GetTxPowerLevel	model/wifi-tx-vector.cc	/^WifiTxVector::GetTxPowerLevel (void) const$/;"	f	class:ns3::WifiTxVector
IsShortGuardInterval	model/wifi-tx-vector.cc	/^WifiTxVector::IsShortGuardInterval (void) const$/;"	f	class:ns3::WifiTxVector
IsStbc	model/wifi-tx-vector.cc	/^WifiTxVector::IsStbc (void) const$/;"	f	class:ns3::WifiTxVector
SetMode	model/wifi-tx-vector.cc	/^WifiTxVector::SetMode (WifiMode mode)$/;"	f	class:ns3::WifiTxVector
SetNess	model/wifi-tx-vector.cc	/^WifiTxVector::SetNess (uint8_t ness)$/;"	f	class:ns3::WifiTxVector
SetNss	model/wifi-tx-vector.cc	/^WifiTxVector::SetNss (uint8_t nss)$/;"	f	class:ns3::WifiTxVector
SetRetries	model/wifi-tx-vector.cc	/^WifiTxVector::SetRetries (uint8_t retries)$/;"	f	class:ns3::WifiTxVector
SetShortGuardInterval	model/wifi-tx-vector.cc	/^WifiTxVector::SetShortGuardInterval (bool guardinterval)$/;"	f	class:ns3::WifiTxVector
SetStbc	model/wifi-tx-vector.cc	/^WifiTxVector::SetStbc (bool stbc)$/;"	f	class:ns3::WifiTxVector
SetTxPowerLevel	model/wifi-tx-vector.cc	/^WifiTxVector::SetTxPowerLevel (uint8_t powerlevel)$/;"	f	class:ns3::WifiTxVector
WifiTxVector	model/wifi-tx-vector.cc	/^WifiTxVector::WifiTxVector ()$/;"	f	class:ns3::WifiTxVector
WifiTxVector	model/wifi-tx-vector.cc	/^WifiTxVector::WifiTxVector (WifiMode mode, uint8_t powerLevel, uint8_t retries,$/;"	f	class:ns3::WifiTxVector
ns3	model/wifi-tx-vector.cc	/^namespace ns3 {$/;"	n	file:
operator <<	model/wifi-tx-vector.cc	/^std::ostream & operator << ( std::ostream &os, const WifiTxVector &v)$/;"	f	namespace:ns3
WIFI_TX_VECTOR_H	model/wifi-tx-vector.h	23;"	d
WifiTxVector	model/wifi-tx-vector.h	/^class WifiTxVector$/;"	c	namespace:ns3
m_mode	model/wifi-tx-vector.h	/^  WifiMode m_mode;         \/**< The DATARATE parameter in Table 15-4. $/;"	m	class:ns3::WifiTxVector
m_modeInitialized	model/wifi-tx-vector.h	/^  bool     m_modeInitialized; \/\/*< Internal initialization flag *\/$/;"	m	class:ns3::WifiTxVector
m_ness	model/wifi-tx-vector.h	/^  uint8_t  m_ness; \/**< number of streams in beamforming *\/$/;"	m	class:ns3::WifiTxVector
m_nss	model/wifi-tx-vector.h	/^  uint8_t  m_nss; \/**< number of streams *\/$/;"	m	class:ns3::WifiTxVector
m_retries	model/wifi-tx-vector.h	/^  uint8_t  m_retries;      \/**< The DATA_RETRIES\/RTS_RETRIES parameter$/;"	m	class:ns3::WifiTxVector
m_shortGuardInterval	model/wifi-tx-vector.h	/^  bool     m_shortGuardInterval; \/**< true if short GI is going to be used *\/$/;"	m	class:ns3::WifiTxVector
m_stbc	model/wifi-tx-vector.h	/^  bool     m_stbc; \/**< STBC used or not *\/$/;"	m	class:ns3::WifiTxVector
m_txPowerLevel	model/wifi-tx-vector.h	/^  uint8_t  m_txPowerLevel;  \/**< The TXPWR_LEVEL parameter in Table 15-4. $/;"	m	class:ns3::WifiTxVector
m_txPowerLevelInitialized	model/wifi-tx-vector.h	/^  bool     m_txPowerLevelInitialized; \/\/*< Internal initialization flag *\/$/;"	m	class:ns3::WifiTxVector
ns3	model/wifi-tx-vector.h	/^namespace ns3 {$/;"	n
Binomial	model/yans-error-rate-model.cc	/^YansErrorRateModel::Binomial (uint32_t k, double p, uint32_t n) const$/;"	f	class:ns3::YansErrorRateModel
CalculatePd	model/yans-error-rate-model.cc	/^YansErrorRateModel::CalculatePd (double ber, unsigned int d) const$/;"	f	class:ns3::YansErrorRateModel
CalculatePdEven	model/yans-error-rate-model.cc	/^YansErrorRateModel::CalculatePdEven (double ber, unsigned int d) const$/;"	f	class:ns3::YansErrorRateModel
CalculatePdOdd	model/yans-error-rate-model.cc	/^YansErrorRateModel::CalculatePdOdd (double ber, unsigned int d) const$/;"	f	class:ns3::YansErrorRateModel
Factorial	model/yans-error-rate-model.cc	/^YansErrorRateModel::Factorial (uint32_t k) const$/;"	f	class:ns3::YansErrorRateModel
GetBpskBer	model/yans-error-rate-model.cc	/^YansErrorRateModel::GetBpskBer (double snr, uint32_t signalSpread, uint32_t phyRate) const$/;"	f	class:ns3::YansErrorRateModel
GetChunkSuccessRate	model/yans-error-rate-model.cc	/^YansErrorRateModel::GetChunkSuccessRate (WifiMode mode, double snr, uint32_t nbits) const$/;"	f	class:ns3::YansErrorRateModel
GetFecBpskBer	model/yans-error-rate-model.cc	/^YansErrorRateModel::GetFecBpskBer (double snr, double nbits,$/;"	f	class:ns3::YansErrorRateModel
GetFecQamBer	model/yans-error-rate-model.cc	/^YansErrorRateModel::GetFecQamBer (double snr, uint32_t nbits,$/;"	f	class:ns3::YansErrorRateModel
GetQamBer	model/yans-error-rate-model.cc	/^YansErrorRateModel::GetQamBer (double snr, unsigned int m, uint32_t signalSpread, uint32_t phyRate) const$/;"	f	class:ns3::YansErrorRateModel
GetTypeId	model/yans-error-rate-model.cc	/^YansErrorRateModel::GetTypeId (void)$/;"	f	class:ns3::YansErrorRateModel
Log2	model/yans-error-rate-model.cc	/^YansErrorRateModel::Log2 (double val) const$/;"	f	class:ns3::YansErrorRateModel
YansErrorRateModel	model/yans-error-rate-model.cc	/^YansErrorRateModel::YansErrorRateModel ()$/;"	f	class:ns3::YansErrorRateModel
ns3	model/yans-error-rate-model.cc	/^namespace ns3 {$/;"	n	file:
YANS_ERROR_RATE_MODEL_H	model/yans-error-rate-model.h	21;"	d
YansErrorRateModel	model/yans-error-rate-model.h	/^class YansErrorRateModel : public ErrorRateModel$/;"	c	namespace:ns3
ns3	model/yans-error-rate-model.h	/^namespace ns3 {$/;"	n
Add	model/yans-wifi-channel.cc	/^YansWifiChannel::Add (Ptr<YansWifiPhy> phy)$/;"	f	class:ns3::YansWifiChannel
AssignStreams	model/yans-wifi-channel.cc	/^YansWifiChannel::AssignStreams (int64_t stream)$/;"	f	class:ns3::YansWifiChannel
GetDevice	model/yans-wifi-channel.cc	/^YansWifiChannel::GetDevice (uint32_t i) const$/;"	f	class:ns3::YansWifiChannel
GetNDevices	model/yans-wifi-channel.cc	/^YansWifiChannel::GetNDevices (void) const$/;"	f	class:ns3::YansWifiChannel
GetTypeId	model/yans-wifi-channel.cc	/^YansWifiChannel::GetTypeId (void)$/;"	f	class:ns3::YansWifiChannel
Receive	model/yans-wifi-channel.cc	/^YansWifiChannel::Receive (uint32_t i, Ptr<Packet> packet, double *atts,$/;"	f	class:ns3::YansWifiChannel
Send	model/yans-wifi-channel.cc	/^YansWifiChannel::Send (Ptr<YansWifiPhy> sender, Ptr<const Packet> packet, double txPowerDbm,$/;"	f	class:ns3::YansWifiChannel
SetPropagationDelayModel	model/yans-wifi-channel.cc	/^YansWifiChannel::SetPropagationDelayModel (Ptr<PropagationDelayModel> delay)$/;"	f	class:ns3::YansWifiChannel
SetPropagationLossModel	model/yans-wifi-channel.cc	/^YansWifiChannel::SetPropagationLossModel (Ptr<PropagationLossModel> loss)$/;"	f	class:ns3::YansWifiChannel
YansWifiChannel	model/yans-wifi-channel.cc	/^YansWifiChannel::YansWifiChannel ()$/;"	f	class:ns3::YansWifiChannel
ns3	model/yans-wifi-channel.cc	/^namespace ns3 {$/;"	n	file:
~YansWifiChannel	model/yans-wifi-channel.cc	/^YansWifiChannel::~YansWifiChannel ()$/;"	f	class:ns3::YansWifiChannel
PhyList	model/yans-wifi-channel.h	/^  typedef std::vector<Ptr<YansWifiPhy> > PhyList;$/;"	t	class:ns3::YansWifiChannel
YANS_WIFI_CHANNEL_H	model/yans-wifi-channel.h	21;"	d
YansWifiChannel	model/yans-wifi-channel.h	/^class YansWifiChannel : public WifiChannel$/;"	c	namespace:ns3
m_delay	model/yans-wifi-channel.h	/^  Ptr<PropagationDelayModel> m_delay; \/\/!< Propagation delay model$/;"	m	class:ns3::YansWifiChannel
m_loss	model/yans-wifi-channel.h	/^  Ptr<PropagationLossModel> m_loss; \/\/!< Propagation loss model$/;"	m	class:ns3::YansWifiChannel
m_phyList	model/yans-wifi-channel.h	/^  PhyList m_phyList; \/\/!< List of YansWifiPhys connected to this YansWifiChannel$/;"	m	class:ns3::YansWifiChannel
ns3	model/yans-wifi-channel.h	/^namespace ns3 {$/;"	n
AssignStreams	model/yans-wifi-phy.cc	/^YansWifiPhy::AssignStreams (int64_t stream)$/;"	f	class:ns3::YansWifiPhy
CalculateSnr	model/yans-wifi-phy.cc	/^YansWifiPhy::CalculateSnr (WifiMode txMode, double ber) const$/;"	f	class:ns3::YansWifiPhy
Configure80211_10Mhz	model/yans-wifi-phy.cc	/^YansWifiPhy::Configure80211_10Mhz (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211_5Mhz	model/yans-wifi-phy.cc	/^YansWifiPhy::Configure80211_5Mhz (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211a	model/yans-wifi-phy.cc	/^YansWifiPhy::Configure80211a (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211b	model/yans-wifi-phy.cc	/^YansWifiPhy::Configure80211b (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211g	model/yans-wifi-phy.cc	/^YansWifiPhy::Configure80211g (void)$/;"	f	class:ns3::YansWifiPhy
Configure80211n	model/yans-wifi-phy.cc	/^YansWifiPhy::Configure80211n (void)$/;"	f	class:ns3::YansWifiPhy
ConfigureHolland	model/yans-wifi-phy.cc	/^YansWifiPhy::ConfigureHolland (void)$/;"	f	class:ns3::YansWifiPhy
ConfigureStandard	model/yans-wifi-phy.cc	/^YansWifiPhy::ConfigureStandard (enum WifiPhyStandard standard)$/;"	f	class:ns3::YansWifiPhy
DbToRatio	model/yans-wifi-phy.cc	/^YansWifiPhy::DbToRatio (double dB) const$/;"	f	class:ns3::YansWifiPhy
DbmToW	model/yans-wifi-phy.cc	/^YansWifiPhy::DbmToW (double dBm) const$/;"	f	class:ns3::YansWifiPhy
DoDispose	model/yans-wifi-phy.cc	/^YansWifiPhy::DoDispose (void)$/;"	f	class:ns3::YansWifiPhy
DoInitialize	model/yans-wifi-phy.cc	/^YansWifiPhy::DoInitialize ()$/;"	f	class:ns3::YansWifiPhy
EndReceive	model/yans-wifi-phy.cc	/^YansWifiPhy::EndReceive (Ptr<Packet> packet, Ptr<InterferenceHelper::Event> event)$/;"	f	class:ns3::YansWifiPhy
GetBssMembershipSelector	model/yans-wifi-phy.cc	/^YansWifiPhy::GetBssMembershipSelector (uint32_t selector) const$/;"	f	class:ns3::YansWifiPhy
GetCcaMode1Threshold	model/yans-wifi-phy.cc	/^YansWifiPhy::GetCcaMode1Threshold (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannel	model/yans-wifi-phy.cc	/^YansWifiPhy::GetChannel (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannelBonding	model/yans-wifi-phy.cc	/^YansWifiPhy::GetChannelBonding(void) const$/;"	f	class:ns3::YansWifiPhy
GetChannelFrequencyMhz	model/yans-wifi-phy.cc	/^YansWifiPhy::GetChannelFrequencyMhz () const$/;"	f	class:ns3::YansWifiPhy
GetChannelNumber	model/yans-wifi-phy.cc	/^YansWifiPhy::GetChannelNumber (void) const$/;"	f	class:ns3::YansWifiPhy
GetChannelSwitchDelay	model/yans-wifi-phy.cc	/^YansWifiPhy::GetChannelSwitchDelay (void) const$/;"	f	class:ns3::YansWifiPhy
GetDelayUntilIdle	model/yans-wifi-phy.cc	/^YansWifiPhy::GetDelayUntilIdle (void)$/;"	f	class:ns3::YansWifiPhy
GetDevice	model/yans-wifi-phy.cc	/^YansWifiPhy::GetDevice (void) const$/;"	f	class:ns3::YansWifiPhy
GetEdThreshold	model/yans-wifi-phy.cc	/^YansWifiPhy::GetEdThreshold (void) const$/;"	f	class:ns3::YansWifiPhy
GetEdThresholdW	model/yans-wifi-phy.cc	/^YansWifiPhy::GetEdThresholdW (void) const$/;"	f	class:ns3::YansWifiPhy
GetErrorRateModel	model/yans-wifi-phy.cc	/^YansWifiPhy::GetErrorRateModel (void) const$/;"	f	class:ns3::YansWifiPhy
GetFrequency	model/yans-wifi-phy.cc	/^YansWifiPhy::GetFrequency (void) const$/;"	f	class:ns3::YansWifiPhy
GetGreenfield	model/yans-wifi-phy.cc	/^YansWifiPhy::GetGreenfield (void) const$/;"	f	class:ns3::YansWifiPhy
GetGuardInterval	model/yans-wifi-phy.cc	/^YansWifiPhy::GetGuardInterval (void) const$/;"	f	class:ns3::YansWifiPhy
GetLastRxStartTime	model/yans-wifi-phy.cc	/^YansWifiPhy::GetLastRxStartTime (void) const$/;"	f	class:ns3::YansWifiPhy
GetLdpc	model/yans-wifi-phy.cc	/^YansWifiPhy::GetLdpc (void) const$/;"	f	class:ns3::YansWifiPhy
GetMcs	model/yans-wifi-phy.cc	/^YansWifiPhy::GetMcs (uint8_t mcs) const$/;"	f	class:ns3::YansWifiPhy
GetMembershipSelectorModes	model/yans-wifi-phy.cc	/^YansWifiPhy::GetMembershipSelectorModes(uint32_t selector)$/;"	f	class:ns3::YansWifiPhy
GetMobility	model/yans-wifi-phy.cc	/^YansWifiPhy::GetMobility (void)$/;"	f	class:ns3::YansWifiPhy
GetMode	model/yans-wifi-phy.cc	/^YansWifiPhy::GetMode (uint32_t mode) const$/;"	f	class:ns3::YansWifiPhy
GetNBssMembershipSelectors	model/yans-wifi-phy.cc	/^YansWifiPhy::GetNBssMembershipSelectors (void) const$/;"	f	class:ns3::YansWifiPhy
GetNMcs	model/yans-wifi-phy.cc	/^YansWifiPhy::GetNMcs (void) const$/;"	f	class:ns3::YansWifiPhy
GetNModes	model/yans-wifi-phy.cc	/^YansWifiPhy::GetNModes (void) const$/;"	f	class:ns3::YansWifiPhy
GetNTxPower	model/yans-wifi-phy.cc	/^YansWifiPhy::GetNTxPower (void) const$/;"	f	class:ns3::YansWifiPhy
GetNumberOfReceiveAntennas	model/yans-wifi-phy.cc	/^YansWifiPhy::GetNumberOfReceiveAntennas (void) const$/;"	f	class:ns3::YansWifiPhy
GetNumberOfTransmitAntennas	model/yans-wifi-phy.cc	/^YansWifiPhy::GetNumberOfTransmitAntennas (void) const$/;"	f	class:ns3::YansWifiPhy
GetPowerDbm	model/yans-wifi-phy.cc	/^YansWifiPhy::GetPowerDbm (uint8_t power) const$/;"	f	class:ns3::YansWifiPhy
GetRxGain	model/yans-wifi-phy.cc	/^YansWifiPhy::GetRxGain (void) const$/;"	f	class:ns3::YansWifiPhy
GetRxNoiseFigure	model/yans-wifi-phy.cc	/^YansWifiPhy::GetRxNoiseFigure (void) const$/;"	f	class:ns3::YansWifiPhy
GetStateDuration	model/yans-wifi-phy.cc	/^YansWifiPhy::GetStateDuration (void)$/;"	f	class:ns3::YansWifiPhy
GetStbc	model/yans-wifi-phy.cc	/^YansWifiPhy::GetStbc (void) const$/;"	f	class:ns3::YansWifiPhy
GetTxGain	model/yans-wifi-phy.cc	/^YansWifiPhy::GetTxGain (void) const$/;"	f	class:ns3::YansWifiPhy
GetTxPowerEnd	model/yans-wifi-phy.cc	/^YansWifiPhy::GetTxPowerEnd (void) const$/;"	f	class:ns3::YansWifiPhy
GetTxPowerStart	model/yans-wifi-phy.cc	/^YansWifiPhy::GetTxPowerStart (void) const$/;"	f	class:ns3::YansWifiPhy
GetTypeId	model/yans-wifi-phy.cc	/^YansWifiPhy::GetTypeId (void)$/;"	f	class:ns3::YansWifiPhy
IsMcsSupported	model/yans-wifi-phy.cc	/^YansWifiPhy::IsMcsSupported (WifiMode mode)$/;"	f	class:ns3::YansWifiPhy
IsModeSupported	model/yans-wifi-phy.cc	/^YansWifiPhy::IsModeSupported (WifiMode mode) const$/;"	f	class:ns3::YansWifiPhy
IsStateBusy	model/yans-wifi-phy.cc	/^YansWifiPhy::IsStateBusy (void)$/;"	f	class:ns3::YansWifiPhy
IsStateCcaBusy	model/yans-wifi-phy.cc	/^YansWifiPhy::IsStateCcaBusy (void)$/;"	f	class:ns3::YansWifiPhy
IsStateIdle	model/yans-wifi-phy.cc	/^YansWifiPhy::IsStateIdle (void)$/;"	f	class:ns3::YansWifiPhy
IsStateRx	model/yans-wifi-phy.cc	/^YansWifiPhy::IsStateRx (void)$/;"	f	class:ns3::YansWifiPhy
IsStateSleep	model/yans-wifi-phy.cc	/^YansWifiPhy::IsStateSleep (void)$/;"	f	class:ns3::YansWifiPhy
IsStateSwitching	model/yans-wifi-phy.cc	/^YansWifiPhy::IsStateSwitching (void)$/;"	f	class:ns3::YansWifiPhy
IsStateTx	model/yans-wifi-phy.cc	/^YansWifiPhy::IsStateTx (void)$/;"	f	class:ns3::YansWifiPhy
McsToWifiMode	model/yans-wifi-phy.cc	/^YansWifiPhy::McsToWifiMode (uint8_t mcs)$/;"	f	class:ns3::YansWifiPhy
RatioToDb	model/yans-wifi-phy.cc	/^YansWifiPhy::RatioToDb (double ratio) const$/;"	f	class:ns3::YansWifiPhy
RegisterListener	model/yans-wifi-phy.cc	/^YansWifiPhy::RegisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::YansWifiPhy
ResumeFromSleep	model/yans-wifi-phy.cc	/^YansWifiPhy::ResumeFromSleep (void)$/;"	f	class:ns3::YansWifiPhy
SendPacket	model/yans-wifi-phy.cc	/^YansWifiPhy::SendPacket (Ptr<const Packet> packet, WifiTxVector txVector, WifiPreamble preamble, uint8_t packetType)$/;"	f	class:ns3::YansWifiPhy
SetCcaMode1Threshold	model/yans-wifi-phy.cc	/^YansWifiPhy::SetCcaMode1Threshold (double threshold)$/;"	f	class:ns3::YansWifiPhy
SetChannel	model/yans-wifi-phy.cc	/^YansWifiPhy::SetChannel (Ptr<YansWifiChannel> channel)$/;"	f	class:ns3::YansWifiPhy
SetChannelBonding	model/yans-wifi-phy.cc	/^YansWifiPhy::SetChannelBonding(bool channelbonding) $/;"	f	class:ns3::YansWifiPhy
SetChannelNumber	model/yans-wifi-phy.cc	/^YansWifiPhy::SetChannelNumber (uint16_t nch)$/;"	f	class:ns3::YansWifiPhy
SetDevice	model/yans-wifi-phy.cc	/^YansWifiPhy::SetDevice (Ptr<Object> device)$/;"	f	class:ns3::YansWifiPhy
SetEdThreshold	model/yans-wifi-phy.cc	/^YansWifiPhy::SetEdThreshold (double threshold)$/;"	f	class:ns3::YansWifiPhy
SetErrorRateModel	model/yans-wifi-phy.cc	/^YansWifiPhy::SetErrorRateModel (Ptr<ErrorRateModel> rate)$/;"	f	class:ns3::YansWifiPhy
SetFrequency	model/yans-wifi-phy.cc	/^YansWifiPhy::SetFrequency (uint32_t freq)$/;"	f	class:ns3::YansWifiPhy
SetGreenfield	model/yans-wifi-phy.cc	/^YansWifiPhy::SetGreenfield (bool greenfield)$/;"	f	class:ns3::YansWifiPhy
SetGuardInterval	model/yans-wifi-phy.cc	/^YansWifiPhy::SetGuardInterval (bool guardInterval)$/;"	f	class:ns3::YansWifiPhy
SetLdpc	model/yans-wifi-phy.cc	/^YansWifiPhy::SetLdpc (bool Ldpc)$/;"	f	class:ns3::YansWifiPhy
SetMobility	model/yans-wifi-phy.cc	/^YansWifiPhy::SetMobility (Ptr<Object> mobility)$/;"	f	class:ns3::YansWifiPhy
SetNTxPower	model/yans-wifi-phy.cc	/^YansWifiPhy::SetNTxPower (uint32_t n)$/;"	f	class:ns3::YansWifiPhy
SetNumberOfReceiveAntennas	model/yans-wifi-phy.cc	/^YansWifiPhy::SetNumberOfReceiveAntennas (uint32_t rx)$/;"	f	class:ns3::YansWifiPhy
SetNumberOfTransmitAntennas	model/yans-wifi-phy.cc	/^YansWifiPhy::SetNumberOfTransmitAntennas (uint32_t tx)$/;"	f	class:ns3::YansWifiPhy
SetReceiveErrorCallback	model/yans-wifi-phy.cc	/^YansWifiPhy::SetReceiveErrorCallback (RxErrorCallback callback)$/;"	f	class:ns3::YansWifiPhy
SetReceiveOkCallback	model/yans-wifi-phy.cc	/^YansWifiPhy::SetReceiveOkCallback (RxOkCallback callback)$/;"	f	class:ns3::YansWifiPhy
SetRxGain	model/yans-wifi-phy.cc	/^YansWifiPhy::SetRxGain (double gain)$/;"	f	class:ns3::YansWifiPhy
SetRxNoiseFigure	model/yans-wifi-phy.cc	/^YansWifiPhy::SetRxNoiseFigure (double noiseFigureDb)$/;"	f	class:ns3::YansWifiPhy
SetSleepMode	model/yans-wifi-phy.cc	/^YansWifiPhy::SetSleepMode (void)$/;"	f	class:ns3::YansWifiPhy
SetStbc	model/yans-wifi-phy.cc	/^YansWifiPhy::SetStbc (bool stbc)$/;"	f	class:ns3::YansWifiPhy
SetTxGain	model/yans-wifi-phy.cc	/^YansWifiPhy::SetTxGain (double gain)$/;"	f	class:ns3::YansWifiPhy
SetTxPowerEnd	model/yans-wifi-phy.cc	/^YansWifiPhy::SetTxPowerEnd (double end)$/;"	f	class:ns3::YansWifiPhy
SetTxPowerStart	model/yans-wifi-phy.cc	/^YansWifiPhy::SetTxPowerStart (double start)$/;"	f	class:ns3::YansWifiPhy
StartReceivePacket	model/yans-wifi-phy.cc	/^YansWifiPhy::StartReceivePacket (Ptr<Packet> packet,$/;"	f	class:ns3::YansWifiPhy
UnregisterListener	model/yans-wifi-phy.cc	/^YansWifiPhy::UnregisterListener (WifiPhyListener *listener)$/;"	f	class:ns3::YansWifiPhy
WToDbm	model/yans-wifi-phy.cc	/^YansWifiPhy::WToDbm (double w) const$/;"	f	class:ns3::YansWifiPhy
WifiModeToMcs	model/yans-wifi-phy.cc	/^YansWifiPhy::WifiModeToMcs (WifiMode mode)$/;"	f	class:ns3::YansWifiPhy
YansWifiPhy	model/yans-wifi-phy.cc	/^YansWifiPhy::YansWifiPhy ()$/;"	f	class:ns3::YansWifiPhy
ns3	model/yans-wifi-phy.cc	/^namespace ns3 {$/;"	n	file:
~YansWifiPhy	model/yans-wifi-phy.cc	/^YansWifiPhy::~YansWifiPhy ()$/;"	f	class:ns3::YansWifiPhy
HT_PHY	model/yans-wifi-phy.h	43;"	d
YANS_WIFI_PHY_H	model/yans-wifi-phy.h	23;"	d
YansWifiPhy	model/yans-wifi-phy.h	/^class YansWifiPhy : public WifiPhy$/;"	c	namespace:ns3
m_bssMembershipSelectorSet	model/yans-wifi-phy.h	/^  std::vector<uint32_t> m_bssMembershipSelectorSet;$/;"	m	class:ns3::YansWifiPhy
m_ccaMode1ThresholdW	model/yans-wifi-phy.h	/^  double   m_ccaMode1ThresholdW;  \/\/!< Clear channel assessment (CCA) threshold in watts$/;"	m	class:ns3::YansWifiPhy
m_channel	model/yans-wifi-phy.h	/^  Ptr<YansWifiChannel> m_channel;        \/\/!< YansWifiChannel that this YansWifiPhy is connected to$/;"	m	class:ns3::YansWifiPhy
m_channelBonding	model/yans-wifi-phy.h	/^  bool     m_channelBonding;        \/\/!< Flag if channel bonding is used$/;"	m	class:ns3::YansWifiPhy
m_channelNumber	model/yans-wifi-phy.h	/^  uint16_t             m_channelNumber;  \/\/!< Operating channel number$/;"	m	class:ns3::YansWifiPhy
m_channelStartingFrequency	model/yans-wifi-phy.h	/^  double m_channelStartingFrequency;    \/\/!< Standard-dependent center frequency of 0-th channel in MHz$/;"	m	class:ns3::YansWifiPhy
m_channelSwitchDelay	model/yans-wifi-phy.h	/^  Time m_channelSwitchDelay;            \/\/!< Time required to switch between channel$/;"	m	class:ns3::YansWifiPhy
m_device	model/yans-wifi-phy.h	/^  Ptr<Object>          m_device;         \/\/!< Pointer to the device$/;"	m	class:ns3::YansWifiPhy
m_deviceMcsSet	model/yans-wifi-phy.h	/^  std::vector<uint8_t> m_deviceMcsSet;$/;"	m	class:ns3::YansWifiPhy
m_deviceRateSet	model/yans-wifi-phy.h	/^  WifiModeList m_deviceRateSet;$/;"	m	class:ns3::YansWifiPhy
m_edThresholdW	model/yans-wifi-phy.h	/^  double   m_edThresholdW;        \/\/!< Energy detection threshold in watts$/;"	m	class:ns3::YansWifiPhy
m_endRxEvent	model/yans-wifi-phy.h	/^  EventId m_endRxEvent;$/;"	m	class:ns3::YansWifiPhy
m_greenfield	model/yans-wifi-phy.h	/^  bool     m_greenfield;            \/\/!< Flag if GreenField format is supported$/;"	m	class:ns3::YansWifiPhy
m_guardInterval	model/yans-wifi-phy.h	/^  bool     m_guardInterval;         \/\/!< Flag if short guard interval is used$/;"	m	class:ns3::YansWifiPhy
m_initialized	model/yans-wifi-phy.h	/^  bool     m_initialized;         \/\/!< Flag for runtime initialization$/;"	m	class:ns3::YansWifiPhy
m_interference	model/yans-wifi-phy.h	/^  InterferenceHelper m_interference;    \/\/!< Pointer to InterferenceHelper$/;"	m	class:ns3::YansWifiPhy
m_ldpc	model/yans-wifi-phy.h	/^  bool     m_ldpc;                  \/\/!< Flag if LDPC is used$/;"	m	class:ns3::YansWifiPhy
m_mobility	model/yans-wifi-phy.h	/^  Ptr<Object>          m_mobility;       \/\/!< Pointer to the mobility model$/;"	m	class:ns3::YansWifiPhy
m_mpdusNum	model/yans-wifi-phy.h	/^  uint16_t m_mpdusNum;                  \/\/!< carries the number of expected mpdus that are part of an A-MPDU$/;"	m	class:ns3::YansWifiPhy
m_nTxPower	model/yans-wifi-phy.h	/^  uint32_t m_nTxPower;            \/\/!< Number of available transmission power levels$/;"	m	class:ns3::YansWifiPhy
m_numberOfReceivers	model/yans-wifi-phy.h	/^  uint32_t m_numberOfReceivers;     \/\/!< Number of receivers$/;"	m	class:ns3::YansWifiPhy
m_numberOfTransmitters	model/yans-wifi-phy.h	/^  uint32_t m_numberOfTransmitters;  \/\/!< Number of transmitters$/;"	m	class:ns3::YansWifiPhy
m_random	model/yans-wifi-phy.h	/^  Ptr<UniformRandomVariable> m_random;  \/\/!< Provides uniform random variables.$/;"	m	class:ns3::YansWifiPhy
m_rxGainDb	model/yans-wifi-phy.h	/^  double   m_rxGainDb;            \/\/!< Reception gain (dB)$/;"	m	class:ns3::YansWifiPhy
m_state	model/yans-wifi-phy.h	/^  Ptr<WifiPhyStateHelper> m_state;      \/\/!< Pointer to WifiPhyStateHelper$/;"	m	class:ns3::YansWifiPhy
m_stbc	model/yans-wifi-phy.h	/^  bool     m_stbc;                  \/\/!< Flag if STBC is used      $/;"	m	class:ns3::YansWifiPhy
m_txGainDb	model/yans-wifi-phy.h	/^  double   m_txGainDb;            \/\/!< Transmission gain (dB)$/;"	m	class:ns3::YansWifiPhy
m_txPowerBaseDbm	model/yans-wifi-phy.h	/^  double   m_txPowerBaseDbm;      \/\/!< Minimum transmission power (dBm)$/;"	m	class:ns3::YansWifiPhy
m_txPowerEndDbm	model/yans-wifi-phy.h	/^  double   m_txPowerEndDbm;       \/\/!< Maximum transmission power (dBm)$/;"	m	class:ns3::YansWifiPhy
ns3	model/yans-wifi-phy.h	/^namespace ns3 {$/;"	n
BlockAckTestSuite	test/block-ack-test-suite.cc	/^BlockAckTestSuite::BlockAckTestSuite ()$/;"	f	class:BlockAckTestSuite
BlockAckTestSuite	test/block-ack-test-suite.cc	/^class BlockAckTestSuite : public TestSuite$/;"	c	file:
CtrlBAckResponseHeaderTest	test/block-ack-test-suite.cc	/^CtrlBAckResponseHeaderTest::CtrlBAckResponseHeaderTest ()$/;"	f	class:CtrlBAckResponseHeaderTest
CtrlBAckResponseHeaderTest	test/block-ack-test-suite.cc	/^class CtrlBAckResponseHeaderTest : public TestCase$/;"	c	file:
DoRun	test/block-ack-test-suite.cc	/^CtrlBAckResponseHeaderTest::DoRun (void)$/;"	f	class:CtrlBAckResponseHeaderTest
DoRun	test/block-ack-test-suite.cc	/^PacketBufferingCaseA::DoRun (void)$/;"	f	class:PacketBufferingCaseA
DoRun	test/block-ack-test-suite.cc	/^PacketBufferingCaseB::DoRun (void)$/;"	f	class:PacketBufferingCaseB
PacketBufferingCaseA	test/block-ack-test-suite.cc	/^PacketBufferingCaseA::PacketBufferingCaseA ()$/;"	f	class:PacketBufferingCaseA
PacketBufferingCaseA	test/block-ack-test-suite.cc	/^class PacketBufferingCaseA : public TestCase$/;"	c	file:
PacketBufferingCaseB	test/block-ack-test-suite.cc	/^PacketBufferingCaseB::PacketBufferingCaseB ()$/;"	f	class:PacketBufferingCaseB
PacketBufferingCaseB	test/block-ack-test-suite.cc	/^class PacketBufferingCaseB : public TestCase$/;"	c	file:
g_blockAckTestSuite	test/block-ack-test-suite.cc	/^static BlockAckTestSuite g_blockAckTestSuite;$/;"	v	file:
m_blockAckHdr	test/block-ack-test-suite.cc	/^  CtrlBAckResponseHeader m_blockAckHdr;$/;"	m	class:CtrlBAckResponseHeaderTest	file:
m_expectedBuffer	test/block-ack-test-suite.cc	/^  std::list<uint16_t> m_expectedBuffer;$/;"	m	class:PacketBufferingCaseA	file:
m_expectedBuffer	test/block-ack-test-suite.cc	/^  std::list<uint16_t> m_expectedBuffer;$/;"	m	class:PacketBufferingCaseB	file:
~PacketBufferingCaseA	test/block-ack-test-suite.cc	/^PacketBufferingCaseA::~PacketBufferingCaseA ()$/;"	f	class:PacketBufferingCaseA
~PacketBufferingCaseB	test/block-ack-test-suite.cc	/^PacketBufferingCaseB::~PacketBufferingCaseB ()$/;"	f	class:PacketBufferingCaseB
AddAccessRequest	test/dcf-manager-test.cc	/^DcfManagerTest::AddAccessRequest (uint64_t at, uint64_t txTime,$/;"	f	class:DcfManagerTest
AddAccessRequestWithAckTimeout	test/dcf-manager-test.cc	/^DcfManagerTest::AddAccessRequestWithAckTimeout (uint64_t at, uint64_t txTime,$/;"	f	class:DcfManagerTest
AddAccessRequestWithSuccessfullAck	test/dcf-manager-test.cc	/^DcfManagerTest::AddAccessRequestWithSuccessfullAck (uint64_t at, uint64_t txTime,$/;"	f	class:DcfManagerTest
AddAckTimeoutReset	test/dcf-manager-test.cc	/^DcfManagerTest::AddAckTimeoutReset (uint64_t at)$/;"	f	class:DcfManagerTest
AddCcaBusyEvt	test/dcf-manager-test.cc	/^DcfManagerTest::AddCcaBusyEvt (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddDcfState	test/dcf-manager-test.cc	/^DcfManagerTest::AddDcfState (uint32_t aifsn)$/;"	f	class:DcfManagerTest
AddNavReset	test/dcf-manager-test.cc	/^DcfManagerTest::AddNavReset (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddNavStart	test/dcf-manager-test.cc	/^DcfManagerTest::AddNavStart (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddRxErrorEvt	test/dcf-manager-test.cc	/^DcfManagerTest::AddRxErrorEvt (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddRxInsideSifsEvt	test/dcf-manager-test.cc	/^DcfManagerTest::AddRxInsideSifsEvt (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddRxOkEvt	test/dcf-manager-test.cc	/^DcfManagerTest::AddRxOkEvt (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddRxStartEvt	test/dcf-manager-test.cc	/^DcfManagerTest::AddRxStartEvt (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddSwitchingEvt	test/dcf-manager-test.cc	/^DcfManagerTest::AddSwitchingEvt (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
AddTxEvt	test/dcf-manager-test.cc	/^DcfManagerTest::AddTxEvt (uint64_t at, uint64_t duration)$/;"	f	class:DcfManagerTest
DcfManagerTest	test/dcf-manager-test.cc	/^DcfManagerTest::DcfManagerTest ()$/;"	f	class:DcfManagerTest
DcfManagerTest	test/dcf-manager-test.cc	/^class DcfManagerTest : public TestCase$/;"	c	file:
DcfStateTest	test/dcf-manager-test.cc	/^DcfStateTest::DcfStateTest (DcfManagerTest *test, uint32_t i)$/;"	f	class:DcfStateTest
DcfStateTest	test/dcf-manager-test.cc	/^class DcfStateTest : public DcfState$/;"	c	file:
DcfStates	test/dcf-manager-test.cc	/^  typedef std::vector<DcfStateTest *> DcfStates;$/;"	t	class:DcfManagerTest	file:
DcfTestSuite	test/dcf-manager-test.cc	/^DcfTestSuite::DcfTestSuite ()$/;"	f	class:DcfTestSuite
DcfTestSuite	test/dcf-manager-test.cc	/^class DcfTestSuite : public TestSuite$/;"	c	file:
DoAccessRequest	test/dcf-manager-test.cc	/^DcfManagerTest::DoAccessRequest (uint64_t txTime, uint64_t expectedGrantTime, DcfStateTest *state)$/;"	f	class:DcfManagerTest
DoNotifyAccessGranted	test/dcf-manager-test.cc	/^DcfStateTest::DoNotifyAccessGranted (void)$/;"	f	class:DcfStateTest
DoNotifyChannelSwitching	test/dcf-manager-test.cc	/^DcfStateTest::DoNotifyChannelSwitching (void)$/;"	f	class:DcfStateTest
DoNotifyCollision	test/dcf-manager-test.cc	/^DcfStateTest::DoNotifyCollision (void)$/;"	f	class:DcfStateTest
DoNotifyInternalCollision	test/dcf-manager-test.cc	/^DcfStateTest::DoNotifyInternalCollision (void)$/;"	f	class:DcfStateTest
DoNotifySleep	test/dcf-manager-test.cc	/^DcfStateTest::DoNotifySleep (void)$/;"	f	class:DcfStateTest
DoNotifyWakeUp	test/dcf-manager-test.cc	/^DcfStateTest::DoNotifyWakeUp (void)$/;"	f	class:DcfStateTest
DoRun	test/dcf-manager-test.cc	/^DcfManagerTest::DoRun (void)$/;"	f	class:DcfManagerTest
EndTest	test/dcf-manager-test.cc	/^DcfManagerTest::EndTest (void)$/;"	f	class:DcfManagerTest
ExpectCollision	test/dcf-manager-test.cc	/^DcfManagerTest::ExpectCollision (uint64_t time, uint32_t nSlots, uint32_t from)$/;"	f	class:DcfManagerTest
ExpectInternalCollision	test/dcf-manager-test.cc	/^DcfManagerTest::ExpectInternalCollision (uint64_t time, uint32_t nSlots, uint32_t from)$/;"	f	class:DcfManagerTest
ExpectedCollision	test/dcf-manager-test.cc	/^  struct ExpectedCollision$/;"	s	class:DcfStateTest	file:
ExpectedCollisions	test/dcf-manager-test.cc	/^  typedef std::list<struct ExpectedCollision> ExpectedCollisions;$/;"	t	class:DcfStateTest	file:
ExpectedGrant	test/dcf-manager-test.cc	/^  typedef std::pair<uint64_t,uint64_t> ExpectedGrant;$/;"	t	class:DcfStateTest	file:
ExpectedGrants	test/dcf-manager-test.cc	/^  typedef std::list<ExpectedGrant> ExpectedGrants;$/;"	t	class:DcfStateTest	file:
NotifyAccessGranted	test/dcf-manager-test.cc	/^DcfManagerTest::NotifyAccessGranted (uint32_t i)$/;"	f	class:DcfManagerTest
NotifyChannelSwitching	test/dcf-manager-test.cc	/^DcfManagerTest::NotifyChannelSwitching (uint32_t i)$/;"	f	class:DcfManagerTest
NotifyCollision	test/dcf-manager-test.cc	/^DcfManagerTest::NotifyCollision (uint32_t i)$/;"	f	class:DcfManagerTest
NotifyInternalCollision	test/dcf-manager-test.cc	/^DcfManagerTest::NotifyInternalCollision (uint32_t i)$/;"	f	class:DcfManagerTest
QueueTx	test/dcf-manager-test.cc	/^DcfStateTest::QueueTx (uint64_t txTime, uint64_t expectedGrantTime)$/;"	f	class:DcfStateTest
StartTest	test/dcf-manager-test.cc	/^DcfManagerTest::StartTest (uint64_t slotTime, uint64_t sifs, uint64_t eifsNoDifsNoSifs, uint32_t ackTimeoutValue)$/;"	f	class:DcfManagerTest
at	test/dcf-manager-test.cc	/^    uint64_t at;$/;"	m	struct:DcfStateTest::ExpectedCollision	file:
g_dcfTestSuite	test/dcf-manager-test.cc	/^static DcfTestSuite g_dcfTestSuite;$/;"	v	file:
m_ackTimeoutValue	test/dcf-manager-test.cc	/^  uint32_t m_ackTimeoutValue;$/;"	m	class:DcfManagerTest	file:
m_dcfManager	test/dcf-manager-test.cc	/^  DcfManager *m_dcfManager;$/;"	m	class:DcfManagerTest	file:
m_dcfStates	test/dcf-manager-test.cc	/^  DcfStates m_dcfStates;$/;"	m	class:DcfManagerTest	file:
m_expectedCollision	test/dcf-manager-test.cc	/^  ExpectedCollisions m_expectedCollision;$/;"	m	class:DcfStateTest	file:
m_expectedGrants	test/dcf-manager-test.cc	/^  ExpectedGrants m_expectedGrants;$/;"	m	class:DcfStateTest	file:
m_expectedInternalCollision	test/dcf-manager-test.cc	/^  ExpectedCollisions m_expectedInternalCollision;$/;"	m	class:DcfStateTest	file:
m_i	test/dcf-manager-test.cc	/^  uint32_t m_i;$/;"	m	class:DcfStateTest	file:
m_test	test/dcf-manager-test.cc	/^  DcfManagerTest *m_test;$/;"	m	class:DcfStateTest	file:
nSlots	test/dcf-manager-test.cc	/^    uint32_t nSlots;$/;"	m	struct:DcfStateTest::ExpectedCollision	file:
cpp_examples	test/examples-to-run.py	/^cpp_examples = []$/;"	v
python_examples	test/examples-to-run.py	/^python_examples = []$/;"	v
ConfigureNode	test/power-rate-adaptation-test.cc	/^PowerRateAdaptationTest::ConfigureNode ()$/;"	f	class:PowerRateAdaptationTest
DoRun	test/power-rate-adaptation-test.cc	/^PowerRateAdaptationTest::DoRun (void)$/;"	f	class:PowerRateAdaptationTest
PowerRateAdaptationTest	test/power-rate-adaptation-test.cc	/^PowerRateAdaptationTest::PowerRateAdaptationTest ()$/;"	f	class:PowerRateAdaptationTest
PowerRateAdaptationTest	test/power-rate-adaptation-test.cc	/^class PowerRateAdaptationTest : public TestCase$/;"	c	file:
PowerRateAdaptationTestSuite	test/power-rate-adaptation-test.cc	/^PowerRateAdaptationTestSuite::PowerRateAdaptationTestSuite ()$/;"	f	class:PowerRateAdaptationTestSuite
PowerRateAdaptationTestSuite	test/power-rate-adaptation-test.cc	/^class PowerRateAdaptationTestSuite : public TestSuite$/;"	c	file:
TestAparf	test/power-rate-adaptation-test.cc	/^PowerRateAdaptationTest::TestAparf ()$/;"	f	class:PowerRateAdaptationTest
TestParf	test/power-rate-adaptation-test.cc	/^PowerRateAdaptationTest::TestParf ()$/;"	f	class:PowerRateAdaptationTest
g_powerRateAdaptationTestSuite	test/power-rate-adaptation-test.cc	/^static PowerRateAdaptationTestSuite g_powerRateAdaptationTestSuite;$/;"	v	file:
m_manager	test/power-rate-adaptation-test.cc	/^  ObjectFactory m_manager;$/;"	m	class:PowerRateAdaptationTest	file:
CHANNEL_1_MHZ	test/tx-duration-test.cc	/^static const double CHANNEL_1_MHZ  = 2412.0; \/\/ a 2.4 GHz center frequency (MHz)$/;"	v	file:
CHANNEL_36_MHZ	test/tx-duration-test.cc	/^static const double CHANNEL_36_MHZ = 5180.0; \/\/ a 5 GHz center frequency (MHz)$/;"	v	file:
CheckPayloadDuration	test/tx-duration-test.cc	/^TxDurationTest::CheckPayloadDuration (uint32_t size, WifiMode payloadMode, WifiPreamble preamble, uint32_t knownDurationMicroSeconds)$/;"	f	class:TxDurationTest
CheckTxDuration	test/tx-duration-test.cc	/^TxDurationTest::CheckTxDuration (uint32_t size, WifiMode payloadMode, WifiPreamble preamble, double knownDurationMicroSeconds)$/;"	f	class:TxDurationTest
DoRun	test/tx-duration-test.cc	/^TxDurationTest::DoRun (void)$/;"	f	class:TxDurationTest
TxDurationTest	test/tx-duration-test.cc	/^TxDurationTest::TxDurationTest ()$/;"	f	class:TxDurationTest
TxDurationTest	test/tx-duration-test.cc	/^class TxDurationTest : public TestCase$/;"	c	file:
TxDurationTestSuite	test/tx-duration-test.cc	/^TxDurationTestSuite::TxDurationTestSuite ()$/;"	f	class:TxDurationTestSuite
TxDurationTestSuite	test/tx-duration-test.cc	/^class TxDurationTestSuite : public TestSuite$/;"	c	file:
g_txDurationTestSuite	test/tx-duration-test.cc	/^static TxDurationTestSuite g_txDurationTestSuite;$/;"	v	file:
~TxDurationTest	test/tx-duration-test.cc	/^TxDurationTest::~TxDurationTest ()$/;"	f	class:TxDurationTest
AssignWifiRandomStreams	test/wifi-test.cc	/^AssignWifiRandomStreams (Ptr<WifiMac> mac, int64_t stream)$/;"	f	file:
Bug555TestCase	test/wifi-test.cc	/^Bug555TestCase::Bug555TestCase ()$/;"	f	class:Bug555TestCase
Bug555TestCase	test/wifi-test.cc	/^class Bug555TestCase : public TestCase$/;"	c	file:
CreateOne	test/wifi-test.cc	/^InterferenceHelperSequenceTest::CreateOne (Vector pos, Ptr<YansWifiChannel> channel)$/;"	f	class:InterferenceHelperSequenceTest
CreateOne	test/wifi-test.cc	/^WifiTest::CreateOne (Vector pos, Ptr<YansWifiChannel> channel)$/;"	f	class:WifiTest
DoRun	test/wifi-test.cc	/^  virtual void DoRun (void)$/;"	f	class:QosUtilsIsOldPacketTest
DoRun	test/wifi-test.cc	/^Bug555TestCase::DoRun (void)$/;"	f	class:Bug555TestCase
DoRun	test/wifi-test.cc	/^InterferenceHelperSequenceTest::DoRun (void)$/;"	f	class:InterferenceHelperSequenceTest
DoRun	test/wifi-test.cc	/^WifiTest::DoRun (void)$/;"	f	class:WifiTest
InterferenceHelperSequenceTest	test/wifi-test.cc	/^InterferenceHelperSequenceTest::InterferenceHelperSequenceTest ()$/;"	f	class:InterferenceHelperSequenceTest
InterferenceHelperSequenceTest	test/wifi-test.cc	/^class InterferenceHelperSequenceTest : public TestCase$/;"	c	file:
NotifyPhyTxBegin	test/wifi-test.cc	/^Bug555TestCase::NotifyPhyTxBegin (Ptr<const Packet> p)$/;"	f	class:Bug555TestCase
QosUtilsIsOldPacketTest	test/wifi-test.cc	/^  QosUtilsIsOldPacketTest () : TestCase ("QosUtilsIsOldPacket")$/;"	f	class:QosUtilsIsOldPacketTest
QosUtilsIsOldPacketTest	test/wifi-test.cc	/^class QosUtilsIsOldPacketTest : public TestCase$/;"	c	file:
RunOne	test/wifi-test.cc	/^WifiTest::RunOne (void)$/;"	f	class:WifiTest
SendOnePacket	test/wifi-test.cc	/^Bug555TestCase::SendOnePacket (Ptr<WifiNetDevice> dev)$/;"	f	class:Bug555TestCase
SendOnePacket	test/wifi-test.cc	/^InterferenceHelperSequenceTest::SendOnePacket (Ptr<WifiNetDevice> dev)$/;"	f	class:InterferenceHelperSequenceTest
SendOnePacket	test/wifi-test.cc	/^WifiTest::SendOnePacket (Ptr<WifiNetDevice> dev)$/;"	f	class:WifiTest
SwitchCh	test/wifi-test.cc	/^InterferenceHelperSequenceTest::SwitchCh (Ptr<WifiNetDevice> dev)$/;"	f	class:InterferenceHelperSequenceTest
WifiTest	test/wifi-test.cc	/^WifiTest::WifiTest ()$/;"	f	class:WifiTest
WifiTest	test/wifi-test.cc	/^class WifiTest : public TestCase$/;"	c	file:
WifiTestSuite	test/wifi-test.cc	/^WifiTestSuite::WifiTestSuite ()$/;"	f	class:WifiTestSuite
WifiTestSuite	test/wifi-test.cc	/^class WifiTestSuite : public TestSuite$/;"	c	file:
g_wifiTestSuite	test/wifi-test.cc	/^static WifiTestSuite g_wifiTestSuite;$/;"	v	file:
m_firstTransmissionTime	test/wifi-test.cc	/^  Time m_firstTransmissionTime;$/;"	m	class:Bug555TestCase	file:
m_mac	test/wifi-test.cc	/^  ObjectFactory m_mac; $/;"	m	class:Bug555TestCase	file:
m_mac	test/wifi-test.cc	/^  ObjectFactory m_mac;$/;"	m	class:InterferenceHelperSequenceTest	file:
m_mac	test/wifi-test.cc	/^  ObjectFactory m_mac;$/;"	m	class:WifiTest	file:
m_manager	test/wifi-test.cc	/^  ObjectFactory m_manager;$/;"	m	class:Bug555TestCase	file:
m_manager	test/wifi-test.cc	/^  ObjectFactory m_manager;$/;"	m	class:InterferenceHelperSequenceTest	file:
m_manager	test/wifi-test.cc	/^  ObjectFactory m_manager;$/;"	m	class:WifiTest	file:
m_numSentPackets	test/wifi-test.cc	/^  unsigned int m_numSentPackets;$/;"	m	class:Bug555TestCase	file:
m_propDelay	test/wifi-test.cc	/^  ObjectFactory m_propDelay;$/;"	m	class:Bug555TestCase	file:
m_propDelay	test/wifi-test.cc	/^  ObjectFactory m_propDelay;$/;"	m	class:InterferenceHelperSequenceTest	file:
m_propDelay	test/wifi-test.cc	/^  ObjectFactory m_propDelay;$/;"	m	class:WifiTest	file:
m_secondTransmissionTime	test/wifi-test.cc	/^  Time m_secondTransmissionTime;$/;"	m	class:Bug555TestCase	file:
